<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>基础架构</title>
  <subtitle>云原生架构|容器化架构|微服务架构|平台架构</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://icyxp.github.io/"/>
  <updated>2018-12-11T05:44:53.000Z</updated>
  <id>http://icyxp.github.io/</id>
  
  <author>
    <name>icyboy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Kubeadm证书过期时间调整</title>
    <link href="http://icyxp.github.io//blog/2018/12/k8s-kubeadm-ca-upgdate.html"/>
    <id>http://icyxp.github.io//blog/2018/12/k8s-kubeadm-ca-upgdate.html</id>
    <published>2018-12-11T12:00:00.000Z</published>
    <updated>2018-12-11T05:44:53.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;kubeadm证书过期时间调整&quot;&gt;&lt;a href=&quot;#kubeadm证书过期时间调整&quot; class=&quot;headerlink&quot; title=&quot;kubeadm证书过期时间调整&quot;&gt;&lt;/a&gt;kubeadm证书过期时间调整&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt; kubeadm 默认证书为一年，一年过期后，会导致api service不可用，使用过程中会出现：x509: certificate has expired or is not yet valid&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;如何进行调整，下面给了两个方案，供大家选择&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;方案一-通过修改kubeadm-调整证书过期时间&quot;&gt;&lt;a href=&quot;#方案一-通过修改kubeadm-调整证书过期时间&quot; class=&quot;headerlink&quot; title=&quot;方案一 通过修改kubeadm 调整证书过期时间&quot;&gt;&lt;/a&gt;方案一 通过修改kubeadm 调整证书过期时间&lt;/h3&gt;&lt;h4 id=&quot;修改代码，调整过期时间&quot;&gt;&lt;a href=&quot;#修改代码，调整过期时间&quot; class=&quot;headerlink&quot; title=&quot;修改代码，调整过期时间&quot;&gt;&lt;/a&gt;修改代码，调整过期时间&lt;/h4&gt;&lt;p&gt; 克隆代码：&lt;code&gt;git clone https://github.com/kubernetes/kubernetes.git&lt;/code&gt;, 切换到指定的tag或者版本修改&lt;code&gt;vendor/k8s.io/client-go/util/cert/cert.go&lt;/code&gt;文件，&lt;code&gt;git diff&lt;/code&gt; 对比如下：&lt;br&gt;&lt;figure class=&quot;highlight diff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;diff --git a/staging/src/k8s.io/client-go/util/cert/cert.go b/staging/src/k8s.io/client-go/util/cert/cert.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index fb7f5fa..e800962 100644&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--- a/staging/src/k8s.io/client-go/util/cert/cert.go&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;+++ b/staging/src/k8s.io/client-go/util/cert/cert.go&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@@ -104,7 +104,7 @@ func NewSignedCert(cfg Config, key *rsa.PrivateKey, caCert *x509.Certificate, ca&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                IPAddresses:  cfg.AltNames.IPs,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                SerialNumber: serial,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                NotBefore:    caCert.NotBefore,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;deletion&quot;&gt;-               NotAfter:     time.Now().Add(duration365d).UTC(),&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+               NotAfter:     time.Now().Add(duration365d * 10).UTC(),&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                KeyUsage:     x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ExtKeyUsage:  cfg.Usages,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@@ -149,7 +149,7 @@ func GenerateSelfSignedCertKey(host string, alternateIPs []net.IP, alternateDNS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        CommonName: fmt.Sprintf(&quot;%s-ca@%d&quot;, host, time.Now().Unix()),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                NotBefore: time.Now(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;deletion&quot;&gt;-               NotAfter:  time.Now().Add(time.Hour * 24 * 365),&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+               NotAfter:  time.Now().Add(time.Hour * 24 * 3650),&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                KeyUsage:              x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature | x509.KeyUsageCertSign,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                BasicConstraintsValid: true,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- more --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#### 编译代码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;编译环境我已经做了对应的1.11.5、1.12.3、1.13.0，已上传到docker hub 上，大家可下载使用，地址如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker pull icyboy/k8s_build:v1.11.5  # 基于 golang:1.10.3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker pull icyboy/k8s_build:v1.12.3  # 基于 golang:1.10.4 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker pull icyboy/k8s_build:v1.13.0  # 基于 golang:1.11.2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;编译&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run --rm -v 你修改后的代码目录:/go/src/k8s.io/kubernetes -it icyboy/k8s_build:v1.11.5 bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /go/src/k8s.io/kubernetes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 编译kubeadm, 这里主要编译kubeadm 即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make all WHAT=cmd/kubeadm GOFLAGS=-v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 编译kubelet&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# make all WHAT=cmd/kubelet GOFLAGS=-v&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 编译kubectl&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# make all WHAT=cmd/kubectl GOFLAGS=-v&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#编译完产物在 _output/bin/kubeadm 目录下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#将kubeadm 文件拷贝出来，替换系统中的kubeadm&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;对应的kubeadm 文件我也编译好后放到百度云中，大家可放心下载使用，可通过&lt;code&gt;kubeadm version&lt;/code&gt; 查看对应的版本信息和官方的进行比对&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#编译过后的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubeadm version: &amp;amp;version.Info&amp;#123;Major:&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;, Minor:&lt;span class=&quot;string&quot;&gt;&quot;11+&quot;&lt;/span&gt;, GitVersion:&lt;span class=&quot;string&quot;&gt;&quot;v1.11.5-dirty&quot;&lt;/span&gt;, GitCommit:&lt;span class=&quot;string&quot;&gt;&quot;753b2dbc622f5cc417845f0ff8a77f539a4213ea&quot;&lt;/span&gt;, GitTreeState:&lt;span class=&quot;string&quot;&gt;&quot;dirty&quot;&lt;/span&gt;, BuildDate:&lt;span class=&quot;string&quot;&gt;&quot;2018-12-07T05:58:18Z&quot;&lt;/span&gt;, GoVersion:&lt;span class=&quot;string&quot;&gt;&quot;go1.10.3&quot;&lt;/span&gt;, Compiler:&lt;span class=&quot;string&quot;&gt;&quot;gc&quot;&lt;/span&gt;, Platform:&lt;span class=&quot;string&quot;&gt;&quot;linux/amd64&quot;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#官方的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubeadm version: &amp;amp;version.Info&amp;#123;Major:&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;, Minor:&lt;span class=&quot;string&quot;&gt;&quot;11&quot;&lt;/span&gt;, GitVersion:&lt;span class=&quot;string&quot;&gt;&quot;v1.11.5&quot;&lt;/span&gt;, GitCommit:&lt;span class=&quot;string&quot;&gt;&quot;753b2dbc622f5cc417845f0ff8a77f539a4213ea&quot;&lt;/span&gt;, GitTreeState:&lt;span class=&quot;string&quot;&gt;&quot;clean&quot;&lt;/span&gt;, BuildDate:&lt;span class=&quot;string&quot;&gt;&quot;2018-11-26T14:38:30Z&quot;&lt;/span&gt;, GoVersion:&lt;span class=&quot;string&quot;&gt;&quot;go1.10.3&quot;&lt;/span&gt;, Compiler:&lt;span class=&quot;string&quot;&gt;&quot;gc&quot;&lt;/span&gt;, Platform:&lt;span class=&quot;string&quot;&gt;&quot;linux/amd64&quot;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;kubeadm 下载地址：&lt;a href=&quot;https://pan.baidu.com/s/1PplHyDkYDTusx46j9uHwDA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://pan.baidu.com/s/1PplHyDkYDTusx46j9uHwDA&lt;/a&gt;&lt;br&gt;提取码：dy6f&lt;/p&gt;
&lt;h4 id=&quot;替换证书&quot;&gt;&lt;a href=&quot;#替换证书&quot; class=&quot;headerlink&quot; title=&quot;替换证书&quot;&gt;&lt;/a&gt;替换证书&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#用新的kubeadm 替换官方的kubeadm&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod +x kubeadm &amp;amp;&amp;amp; \cp &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; kubeadm /usr/bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#备份原有的证书&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mv /etc/kubernetes/pki /etc/kubernetes/pki.old&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#生成新的证书，kubeadm.yaml 指定你自己服务器上的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubeadm alpha phase certs all --config  ~/kubeadm.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#备份原有的conf文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mv /etc/kubernetes/*conf /etc/kubernetes/*conf-old&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#根据新证书重新生成新的配置文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubeadm alpha phase kubeconfig all --config ~/kubeadm.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#替换老的config文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\cp &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; /etc/kubernetes/admin.conf ~/.kube/config&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;验证&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /etc/kubernetes/pki&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;openssl x509 -in apiserver-etcd-client.crt -text -noout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#Certificate:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#    Data:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#        Version: 3 (0x2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#        Serial Number: 2755977466456048186 (0x263f32e76918023a)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#    Signature Algorithm: sha256WithRSAEncryption&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#        Issuer: CN=kubernetes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#        Validity&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#            Not Before: Dec  7 09:33:32 2018 GMT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             Not After : Dec  4 09:33:32 2028 GMT  &lt;span class=&quot;comment&quot;&gt;#这里变成10年了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#        Subject: O=system:masters, CN=kube-apiserver-etcd-client&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#        Subject Public Key Info:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#        ....&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 其余证书安装上述方法同样进行验证&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;方案二-启用自动轮换kubelet-证书&quot;&gt;&lt;a href=&quot;#方案二-启用自动轮换kubelet-证书&quot; class=&quot;headerlink&quot; title=&quot;方案二 启用自动轮换kubelet 证书&quot;&gt;&lt;/a&gt;方案二 启用自动轮换kubelet 证书&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;kubelet证书分为server和client两种， &lt;code&gt;k8s 1.9&lt;/code&gt;默认启用了client证书的自动轮换，但server证书自动轮换需要用户开启&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;增加-kubelet-参数&quot;&gt;&lt;a href=&quot;#增加-kubelet-参数&quot; class=&quot;headerlink&quot; title=&quot;增加 kubelet 参数&quot;&gt;&lt;/a&gt;增加 kubelet 参数&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 在/etc/systemd/system/kubelet.service.d/10-kubeadm.conf 增加如下参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Environment=&lt;span class=&quot;string&quot;&gt;&quot;KUBELET_EXTRA_ARGS=--feature-gates=RotateKubeletServerCertificate=true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;增加-controller-manager-参数&quot;&gt;&lt;a href=&quot;#增加-controller-manager-参数&quot; class=&quot;headerlink&quot; title=&quot;增加 controller-manager 参数&quot;&gt;&lt;/a&gt;增加 controller-manager 参数&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 在/etc/kubernetes/manifests/kube-controller-manager.yaml 添加如下参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - &lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - kube-controller-manager&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - --experimental-cluster-signing-duration=87600h0m0s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - --feature-gates=RotateKubeletServerCertificate=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - ....&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;创建-rbac-对象&quot;&gt;&lt;a href=&quot;#创建-rbac-对象&quot; class=&quot;headerlink&quot; title=&quot;创建 rbac 对象&quot;&gt;&lt;/a&gt;创建 rbac 对象&lt;/h4&gt;&lt;p&gt;创建rbac对象，允许节点轮换kubelet server证书：&lt;br&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;gt; ca-update.yaml &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;apiVersion:&lt;/span&gt; rbac.authorization.k8s.io/v1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;kind:&lt;/span&gt; ClusterRole&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  annotations:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rbac.authorization.kubernetes.io/autoupdate: &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  labels:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    kubernetes.io/bootstrapping: rbac-defaults&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  name:&lt;/span&gt; system:certificates.k8s.io:certificatesigningrequests:selfnodeserver&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;rules:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;- apiGroups:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;  -&lt;/span&gt; certificates.k8s.io&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  resources:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;  -&lt;/span&gt; certificatesigningrequests/selfnodeserver&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  verbs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;  -&lt;/span&gt; create&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;apiVersion:&lt;/span&gt; rbac.authorization.k8s.io/v1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;kind:&lt;/span&gt; ClusterRoleBinding&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  name:&lt;/span&gt; kubeadm:node-autoapprove-certificate-server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;roleRef:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  apiGroup:&lt;/span&gt; rbac.authorization.k8s.io&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  kind:&lt;/span&gt; ClusterRole&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  name:&lt;/span&gt; system:certificates.k8s.io:certificatesigningrequests:selfnodeserver&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;subjects:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;- apiGroup:&lt;/span&gt; rbac.authorization.k8s.io&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  kind:&lt;/span&gt; Group&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  name:&lt;/span&gt; system:nodes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl create –f ca-update.yaml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;离线一键安装包&quot;&gt;&lt;a href=&quot;#离线一键安装包&quot; class=&quot;headerlink&quot; title=&quot;离线一键安装包&quot;&gt;&lt;/a&gt;离线一键安装包&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;k8s 离线一键安装包教程&amp;amp;&amp;amp;地址：&lt;a href=&quot;http://team.jiunile.com/pro/k8s/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一键安装&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;kubeadm证书过期时间调整&quot;&gt;&lt;a href=&quot;#kubeadm证书过期时间调整&quot; class=&quot;headerlink&quot; title=&quot;kubeadm证书过期时间调整&quot;&gt;&lt;/a&gt;kubeadm证书过期时间调整&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt; kube
    
    </summary>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/categories/kubernetes/"/>
    
      <category term="kubeadm" scheme="http://icyxp.github.io/categories/kubernetes/kubeadm/"/>
    
    
      <category term="k8s" scheme="http://icyxp.github.io/tags/k8s/"/>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/tags/kubernetes/"/>
    
      <category term="kubeadm" scheme="http://icyxp.github.io/tags/kubeadm/"/>
    
      <category term="证书过期" scheme="http://icyxp.github.io/tags/%E8%AF%81%E4%B9%A6%E8%BF%87%E6%9C%9F/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes Pod 的生命周期管理</title>
    <link href="http://icyxp.github.io//blog/2018/11/k8s-k8s-pod-life-cycle.html"/>
    <id>http://icyxp.github.io//blog/2018/11/k8s-k8s-pod-life-cycle.html</id>
    <published>2018-11-30T06:30:00.000Z</published>
    <updated>2018-12-03T02:14:29.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Pod的生命周期&quot;&gt;&lt;a href=&quot;#Pod的生命周期&quot; class=&quot;headerlink&quot; title=&quot;Pod的生命周期&quot;&gt;&lt;/a&gt;Pod的生命周期&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;Pod-phase&quot;&gt;&lt;a href=&quot;#Pod-phase&quot; class=&quot;headerlink&quot; title=&quot;Pod phase&quot;&gt;&lt;/a&gt;Pod phase&lt;/h3&gt;&lt;p&gt;Pod 的 status 在信息保存在 &lt;a href=&quot;https://github.com/kubernetes/kubernetes/blob/3ae0b84e0b114692dc666d9486fb032d8a33bb58/pkg/api/types.go#L2471&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PodStatus&lt;/a&gt; 中定义，其中有一个 phase 字段。&lt;/p&gt;
&lt;p&gt;Pod 的相位（phase）是 Pod 在其生命周期中的简单宏观概述。该阶段并不是对容器或 Pod 的综合汇总，也不是为了做为综合状态机。&lt;/p&gt;
&lt;p&gt;Pod 相位的数量和含义是严格指定的。除了本文档中列举的状态外，不应该再假定 Pod 有其他的 phase 值。&lt;/p&gt;
&lt;p&gt;无论你是手动创建 Pod，还是通过 deployment、daemonset 或 statefulset来创建，Pod 的 phase 都有以下几个可能的值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;挂起（Pending）&lt;/strong&gt;：Pod 已被 Kubernetes 系统接受，但有一个或者多个容器镜像尚未创建。等待时间包括调度 Pod 的时间和通过网络下载镜像的时间，这可能需要花点时间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;运行中（Running）&lt;/strong&gt;：该 Pod 已经绑定到了一个节点上，Pod 中所有的容器都已被创建。至少有一个容器正在运行，或者正处于启动或重启状态。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;成功（Successed）&lt;/strong&gt;：Pod 中的所有容器都被成功终止，并且不会再重启。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;失败（Failed）&lt;/strong&gt;：Pod 中的所有容器都已终止了，并且至少有一个容器是因为失败终止。也就是说，容器以非0状态退出或者被系统终止。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;未知（Unkonwn）&lt;/strong&gt;：因为某些原因无法取得 Pod 的状态，通常是因为与 Pod 所在主机通信失败。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下图是 Pod 的生命周期示意图，从图中可以看到 Pod 状态的变化。&lt;br&gt;&lt;img src=&quot;/images/k8s/k8s_pod_01.jpg&quot; alt=&quot;K8s pod 生命周期&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Pod-状态&quot;&gt;&lt;a href=&quot;#Pod-状态&quot; class=&quot;headerlink&quot; title=&quot;Pod 状态&quot;&gt;&lt;/a&gt;Pod 状态&lt;/h3&gt;&lt;p&gt;Pod 有一个 PodStatus 对象，其中包含一个 &lt;a href=&quot;https://github.com/kubernetes/kubernetes/blob/3ae0b84e0b114692dc666d9486fb032d8a33bb58/pkg/api/types.go#L1964&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PodCondition&lt;/a&gt; 数组。 PodCondition 数组的每个元素都有一个 type 字段和一个 status 字段。type 字段是字符串，可能的值有 &lt;code&gt;PodScheduled&lt;/code&gt;、&lt;code&gt;Ready&lt;/code&gt;、&lt;code&gt;Initialized&lt;/code&gt; 和 &lt;code&gt;Unschedulable&lt;/code&gt;。status 字段是一个字符串，可能的值有 &lt;code&gt;True&lt;/code&gt;、&lt;code&gt;False&lt;/code&gt; 和 &lt;code&gt;Unknown&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;当你通过 &lt;code&gt;kubectl get pod&lt;/code&gt; 查看 Pod 时，&lt;code&gt;STATUS&lt;/code&gt; 这一列可能会显示与上述5个状态不同的值，例如 &lt;code&gt;Init:0/1&lt;/code&gt; 和 &lt;code&gt;CrashLoopBackOff&lt;/code&gt;。这是因为 Pod 状态的定义除了包含 phase 之外，还有 &lt;code&gt;InitContainerStatuses&lt;/code&gt; 和 &lt;code&gt;containerStatuses&lt;/code&gt; 等其他字段，具体代码参考 &lt;a href=&quot;https://github.com/kubernetes/kubernetes/blob/3ae0b84e0b114692dc666d9486fb032d8a33bb58/pkg/api/types.go#L2471&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;overall status of a pod&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;如果想知道究竟发生了什么，可以通过命令 &lt;code&gt;kubectl describe pod/$PODNAME&lt;/code&gt; 查看输出信息的 &lt;code&gt;Events&lt;/code&gt; 条目。通过 Events 条目可以看到一些具体的信息，比如正在拉取容器镜像，Pod 已经被调度，或者某个 container 处于 unhealthy 状态。&lt;/p&gt;
&lt;h2 id=&quot;Pod-的启动关闭流程&quot;&gt;&lt;a href=&quot;#Pod-的启动关闭流程&quot; class=&quot;headerlink&quot; title=&quot;Pod 的启动关闭流程&quot;&gt;&lt;/a&gt;Pod 的启动关闭流程&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;下面通过一个具体的示例来探究一下 Pod 的整个生命周期流程。为了确定事情发生的顺序，通过下面的 manifest 来部署一个 deployment。&lt;br&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;kind:&lt;/span&gt;                   Deployment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;apiVersion:&lt;/span&gt;             apps/v1beta1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  name:&lt;/span&gt;                 loap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;spec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  replicas:&lt;/span&gt;             &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  template:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      labels:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        app:&lt;/span&gt;            loap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    spec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      initContainers:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      - name:&lt;/span&gt;           init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        image:&lt;/span&gt;          busybox&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        command:&lt;/span&gt;       [&lt;span class=&quot;string&quot;&gt;&#39;sh&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;-c&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;echo $(date +%s): INIT &amp;gt;&amp;gt; /loap/timing&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        volumeMounts:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        - mountPath:&lt;/span&gt;    /loap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          name:&lt;/span&gt;         timing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      containers:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      - name:&lt;/span&gt;           main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        image:&lt;/span&gt;          busybox&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        command:&lt;/span&gt;       [&lt;span class=&quot;string&quot;&gt;&#39;sh&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;-c&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;echo $(date +%s): START &amp;gt;&amp;gt; /loap/timing;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sleep 10; echo $(date +%s): END &amp;gt;&amp;gt; /loap/timing;&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        volumeMounts:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        - mountPath:&lt;/span&gt;    /loap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          name:&lt;/span&gt;         timing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        livenessProbe:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          exec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            command:&lt;/span&gt;   [&lt;span class=&quot;string&quot;&gt;&#39;sh&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;-c&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;echo $(date +%s): LIVENESS &amp;gt;&amp;gt; /loap/timing&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        readinessProbe:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          exec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            command:&lt;/span&gt;   [&lt;span class=&quot;string&quot;&gt;&#39;sh&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;-c&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;echo $(date +%s): READINESS &amp;gt;&amp;gt; /loap/timing&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        lifecycle:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          postStart:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            exec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;              command:&lt;/span&gt;   [&lt;span class=&quot;string&quot;&gt;&#39;sh&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;-c&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;echo $(date +%s): POST-START &amp;gt;&amp;gt; /loap/timing&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          preStop:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            exec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;              command:&lt;/span&gt;  [&lt;span class=&quot;string&quot;&gt;&#39;sh&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;-c&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;echo $(date +%s): PRE-HOOK &amp;gt;&amp;gt; /loap/timing&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      volumes:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      - name:&lt;/span&gt;           timing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        hostPath:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          path:&lt;/span&gt;         /tmp/loap&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;等待 Pod 状态变为 &lt;code&gt;Running&lt;/code&gt; 之后，通过以下命令来强制停止 Pod：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl scale deployment loap --replicas=0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查看 &lt;code&gt;/tmp/loap/timing&lt;/code&gt; 文件的内容：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cat /tmp/loap/timing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1525334577: INIT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1525334581: START&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1525334581: POST-START&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1525334584: READINESS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1525334584: LIVENESS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1525334588: PRE-HOOK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1525334589: END&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/tmp/loap/timing&lt;/code&gt; 文件的内容很好地体现了 Pod 的启动和关闭流程，具体过程如下：&lt;br&gt;&lt;img src=&quot;/images/k8s/k8s_pod_02.jpg&quot; alt=&quot;Pod 的启动和关闭流程&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先启动一个 Infra 容器（又叫 Pause 容器），用来和 Pod 中的其他容器共享 linux 命名空间，并开启 init 进程。（上图中忽略了这一步）&lt;/li&gt;
&lt;li&gt;然后启动 Init 容器，它是一种专用的容器，在应用程序容器启动之前运行，用来对 Pod 进行一些初始化操作，并包括一些应用镜像中不存在的实用工具和安装脚本。&lt;/li&gt;
&lt;li&gt;4 秒之后，应用程序容器和 &lt;code&gt;post-start hook&lt;/code&gt; 同时启动。&lt;/li&gt;
&lt;li&gt;7 秒之后开始启动 &lt;a href=&quot;https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;liveness 和 readiness 探针&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;11 秒之后，通过手动杀掉 Pod，&lt;code&gt;pre-stop hook&lt;/code&gt; 执行，优雅删除期限过期后（默认是 30 秒），应用程序容器停止。实际的 Pod 终止过程要更复杂，具体参考 &lt;a href=&quot;https://jimmysong.io/kubernetes-handbook/concepts/pod.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pod 的终止&lt;/a&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;必须主动杀掉 Pod 才会触发 &lt;code&gt;pre-stop hook&lt;/code&gt;，如果是 Pod 自己 Down 掉，则不会执行 &lt;code&gt;pre-stop hook&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;如何快速-DEBUG&quot;&gt;&lt;a href=&quot;#如何快速-DEBUG&quot; class=&quot;headerlink&quot; title=&quot;如何快速 DEBUG&quot;&gt;&lt;/a&gt;如何快速 DEBUG&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;当 Pod 出现致命的错误时，如果能够快速 DEBUG，将会帮助我们快速定位问题。为了实现这个目的，可以把把致命事件的信息通过 &lt;code&gt;.spec.terminationMessagePath&lt;/code&gt; 配置写入指定位置的文件，就像打印错误、异常和堆栈信息一样。该位置的内容可以很方便的通过 dashboards、监控软件等工具检索和展示，默认路径为 &lt;code&gt;/dev/termination-log&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;以下是一个小例子：&lt;br&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# termination-demo.yaml&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;apiVersion:&lt;/span&gt; v1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;kind:&lt;/span&gt; Pod&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  name:&lt;/span&gt; termination-demo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;spec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  containers:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  - name:&lt;/span&gt; termination-demo-container&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    image:&lt;/span&gt; alpine&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    command:&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&quot;/bin/sh&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    args:&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&quot;-c&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;sleep 10 &amp;amp;&amp;amp; echo Sleep expired &amp;gt; /dev/termination-log&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这些消息的最后部分会使用其他的规定来单独存储：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl create &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; termination-demo.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sleep 20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl get pod termination-demo -o go-template=&lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&amp;#123;range .status.containerStatuses&amp;#125;&amp;#125;&amp;#123;&amp;#123;.lastState.terminated.message&amp;#125;&amp;#125;&amp;#123;&amp;#123;end&amp;#125;&amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sleep expired&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl get pod termination-demo -o go-template=&lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&amp;#123;range .status.containerStatuses&amp;#125;&amp;#125;&amp;#123;&amp;#123;.lastState.terminated.exitCode&amp;#125;&amp;#125;&amp;#123;&amp;#123;end&amp;#125;&amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jimmysong.io/kubernetes-handbook/concepts/pod-hook.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pod hook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.openshift.com/kubernetes-pods-life/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kubernetes: A Pod’s Life&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://k8smeetup.github.io/docs/tasks/debug-application-cluster/determine-reason-pod-failure/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;确定 Pod 失败的原因&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ryan Yang &lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Pod的生命周期&quot;&gt;&lt;a href=&quot;#Pod的生命周期&quot; class=&quot;headerlink&quot; title=&quot;Pod的生命周期&quot;&gt;&lt;/a&gt;Pod的生命周期&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;Pod-phase&quot;&gt;&lt;a href=&quot;#Pod-phase&quot; class=&quot;headerlink&quot; title=&quot;Pod phase&quot;&gt;&lt;/a&gt;Pod phase&lt;/h3&gt;&lt;p&gt;Pod 的 status 在信息保存在 &lt;a href=&quot;https://github.com/kubernetes/kubernetes/blob/3ae0b84e0b114692dc666d9486fb032d8a33bb58/pkg/api/types.go#L2471&quot;&gt;PodStatus&lt;/a&gt; 中定义，其中有一个 phase 字段。&lt;/p&gt;
&lt;p&gt;Pod 的相位（phase）是 Pod 在其生命周期中的简单宏观概述。该阶段并不是对容器或 Pod 的综合汇总，也不是为了做为综合状态机。&lt;/p&gt;
&lt;p&gt;Pod 相位的数量和含义是严格指定的。除了本文档中列举的状态外，不应该再假定 Pod 有其他的 phase 值。&lt;/p&gt;
&lt;p&gt;无论你是手动创建 Pod，还是通过 deployment、daemonset 或 statefulset来创建，Pod 的 phase 都有以下几个可能的值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;挂起（Pending）&lt;/strong&gt;：Pod 已被 Kubernetes 系统接受，但有一个或者多个容器镜像尚未创建。等待时间包括调度 Pod 的时间和通过网络下载镜像的时间，这可能需要花点时间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;运行中（Running）&lt;/strong&gt;：该 Pod 已经绑定到了一个节点上，Pod 中所有的容器都已被创建。至少有一个容器正在运行，或者正处于启动或重启状态。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;成功（Successed）&lt;/strong&gt;：Pod 中的所有容器都被成功终止，并且不会再重启。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;失败（Failed）&lt;/strong&gt;：Pod 中的所有容器都已终止了，并且至少有一个容器是因为失败终止。也就是说，容器以非0状态退出或者被系统终止。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;未知（Unkonwn）&lt;/strong&gt;：因为某些原因无法取得 Pod 的状态，通常是因为与 Pod 所在主机通信失败。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下图是 Pod 的生命周期示意图，从图中可以看到 Pod 状态的变化。&lt;br&gt;&lt;img src=&quot;/images/k8s/k8s_pod_01.jpg&quot; alt=&quot;K8s pod 生命周期&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/categories/kubernetes/"/>
    
    
      <category term="k8s" scheme="http://icyxp.github.io/tags/k8s/"/>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/tags/kubernetes/"/>
    
      <category term="pod" scheme="http://icyxp.github.io/tags/pod/"/>
    
  </entry>
  
  <entry>
    <title>Java和Docker限制的那些事儿</title>
    <link href="http://icyxp.github.io//blog/2018/07/docker-java%E4%B8%8Edocker%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B.html"/>
    <id>http://icyxp.github.io//blog/2018/07/docker-java与docker的那点事.html</id>
    <published>2018-07-18T13:30:00.000Z</published>
    <updated>2018-07-18T13:27:38.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;揭秘&quot;&gt;&lt;a href=&quot;#揭秘&quot; class=&quot;headerlink&quot; title=&quot;揭秘&quot;&gt;&lt;/a&gt;揭秘&lt;/h2&gt;&lt;p&gt;Java和Docker不是天然的朋友。 Docker可以设置内存和CPU限制，而Java不能自动检测到。使用Java的Xmx标识（繁琐/重复）或新的实验性JVM标识，我们可以解决这个问题。&lt;/p&gt;
&lt;h2 id=&quot;虚拟化中的不匹配&quot;&gt;&lt;a href=&quot;#虚拟化中的不匹配&quot; class=&quot;headerlink&quot; title=&quot;虚拟化中的不匹配&quot;&gt;&lt;/a&gt;虚拟化中的不匹配&lt;/h2&gt;&lt;p&gt;Java和Docker的结合并不是完美匹配的，最初的时候离完美匹配有相当大的距离。对于初学者来说，JVM的全部设想就是，虚拟机可以让程序与底层硬件无关。&lt;/p&gt;
&lt;p&gt;那么，把我们的Java应用打包到JVM中，然后整个再塞进Docker容器中，能给我们带来什么好处呢？大多数情况下，你只是在复制JVMs和Linux容器，除了浪费更多的内存，没任何好处。感觉这样子挺傻的。&lt;/p&gt;
&lt;p&gt;不过，Docker可以把你的程序，设置，特定的JDK，Linux设置和应用服务器，还有其他工具打包在一起，当做一个东西。站在DevOps/Cloud的角度来看，这样一个完整的容器有着更高层次的封装。&lt;/p&gt;
&lt;h3 id=&quot;问题一：内存&quot;&gt;&lt;a href=&quot;#问题一：内存&quot; class=&quot;headerlink&quot; title=&quot;问题一：内存&quot;&gt;&lt;/a&gt;问题一：内存&lt;/h3&gt;&lt;p&gt;时至今日，绝大多数产品级应用仍然在使用Java 8（或者更旧的版本），而这可能会带来问题。Java 8（update 131之前的版本）跟Docker无法很好地一起工作。问题是在你的机器上，JVM的可用内存和CPU数量并不是Docker允许你使用的可用内存和CPU数量。&lt;/p&gt;
&lt;p&gt;比如，如果你限制了你的Docker容器只能使用100MB内存，但是呢，旧版本的Java并不能识别这个限制。Java看不到这个限制。JVM会要求更多内存，而且远超这个限制。如果使用太多内存，Docker将采取行动并杀死容器内的进程！JAVA进程被干掉了，很明显，这并不是我们想要的。&lt;/p&gt;
&lt;p&gt;为了解决这个问题，你需要给Java指定一个最大内存限制。在旧版本的Java（8u131之前），你需要在容器中通过设置-Xmx来限制堆大小。这感觉不太对，你可不想定义这些限制两次，也不太想在你的容器中来定义。&lt;/p&gt;
&lt;p&gt;幸运的是我们现在有了更好的方式来解决这个问题。从Java 9之后（8u131+），JVM增加了如下标志：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这些标志强制JVM检查Linux的cgroup配置，Docker是通过cgroup来实现最大内存设置的。现在，如果你的应用到达了Docker设置的限制（比如500MB），JVM是可以看到这个限制的。JVM将会尝试GC操作。如果仍然超过内存限制，JVM就会做它该做的事情，抛出OutOfMemoryException。也就是说，JVM能够看到Docker的这些设置。&lt;/p&gt;
&lt;p&gt;从Java 10之后（参考下面的测试），这些体验标志位是默认开启的，也可以使用-XX:+UseContainerSupport来使能（你可以通过设置-XX:-UseContainerSupport来禁止这些行为）。&lt;/p&gt;
&lt;h3 id=&quot;问题二：CPU&quot;&gt;&lt;a href=&quot;#问题二：CPU&quot; class=&quot;headerlink&quot; title=&quot;问题二：CPU&quot;&gt;&lt;/a&gt;问题二：CPU&lt;/h3&gt;&lt;p&gt;第二个问题是类似的，但它与CPU有关。简而言之，JVM将查看硬件并检测CPU的数量。它会优化你的runtime以使用这些CPUs。但是同样的情况，这里还有另一个不匹配，Docker可能不允许你使用所有这些CPUs。可惜的是，这在Java 8或Java 9中并没有修复，但是在Java 10中得到了解决。&lt;/p&gt;
&lt;p&gt;从Java 10开始，可用的CPUs的计算将采用以不同的方式（默认情况下）解决此问题（同样是通过UseContainerSupport）。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Java和Docker的内存处理测试&quot;&gt;&lt;a href=&quot;#Java和Docker的内存处理测试&quot; class=&quot;headerlink&quot; title=&quot;Java和Docker的内存处理测试&quot;&gt;&lt;/a&gt;Java和Docker的内存处理测试&lt;/h2&gt;&lt;p&gt;作为一个有趣的练习，让我们验证并测试Docker如何使用几个不同的JVM版本/标志甚至不同的JVM来处理内存不足。&lt;/p&gt;
&lt;p&gt;首先，我们创建一个测试应用程序，它只是简单地“吃”内存并且不释放它。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.ArrayList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MemEat&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        List l = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt; b[] = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;1048576&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            l.add(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Runtime rt = Runtime.getRuntime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println( &lt;span class=&quot;string&quot;&gt;&quot;free memory: &quot;&lt;/span&gt; + rt.freeMemory() );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们可以启动Docker容器并运行这个应用程序来查看会发生什么。&lt;/p&gt;
&lt;h3 id=&quot;测试一：Java-8u111&quot;&gt;&lt;a href=&quot;#测试一：Java-8u111&quot; class=&quot;headerlink&quot; title=&quot;测试一：Java 8u111&quot;&gt;&lt;/a&gt;测试一：Java 8u111&lt;/h3&gt;&lt;p&gt;首先，我们将从具有旧版本Java 8的容器开始（update 111）。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run -m 100m -it java:openjdk-8u111 /bin/bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们编译并运行MemEat.java文件：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;javac MemEat.java&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;java MemEat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 67194416&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 66145824&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 65097232&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Killed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;正如所料，Docker已经杀死了我们的Java进程。不是我们想要的（！）。你也可以看到输出，Java认为它仍然有大量的内存需要分配。&lt;/p&gt;
&lt;p&gt;我们可以通过使用-Xmx标志为Java提供最大内存来解决此问题：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;javac MemEat.java&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;java -Xmx100m MemEat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 1155664&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 1679936&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 2204208&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 1315752&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Exception &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; thread &lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt; java.lang.OutOfMemoryError: Java heap space&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at MemEat.main(MemEat.java:8)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在提供了我们自己的内存限制之后，进程正常停止，JVM理解它正在运行的限制。然而，问题在于你现在将这些内存限制设置了两次，Docker一次，JVM一次。&lt;/p&gt;
&lt;h3 id=&quot;测试二：Java-8u144&quot;&gt;&lt;a href=&quot;#测试二：Java-8u144&quot; class=&quot;headerlink&quot; title=&quot;测试二：Java 8u144&quot;&gt;&lt;/a&gt;测试二：Java 8u144&lt;/h3&gt;&lt;p&gt;如前所述，随着增加新标志来修复问题，JVM现在可以遵循Docker所提供的设置。我们可以使用版本新一点的JVM来测试它。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run -m 100m -it adoptopenjdk/openjdk8 /bin/bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;（在撰写本文时，此OpenJDK Java镜像的版本是Java 8u144）&lt;/p&gt;
&lt;p&gt;接下来，我们再次编译并运行MemEat.java文件，不带任何标志：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;javac MemEat.java&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;java MemEat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 67194416&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 66145824&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 65097232&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Killed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;依然存在同样的问题。但是我们现在可以提供上面提到的实验性标志来试试看：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;javac MemEat.java&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap MemEat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 1679936&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 2204208&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 1155616&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 1155600&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Exception &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; thread &lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt; java.lang.OutOfMemoryError: Java heap space&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   at MemEat.main(MemEat.java:8)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这一次我们没有告诉JVM限制的是什么，我们只是告诉JVM去检查正确的限制设置！现在感觉好多了。&lt;/p&gt;
&lt;h3 id=&quot;测试三：Java-10u23&quot;&gt;&lt;a href=&quot;#测试三：Java-10u23&quot; class=&quot;headerlink&quot; title=&quot;测试三：Java 10u23&quot;&gt;&lt;/a&gt;测试三：Java 10u23&lt;/h3&gt;&lt;p&gt;有些人在评论和Reddit上提到Java 10通过使实验标志成为新的默认值来解决所有问题。这种行为可以通过禁用此标志来关闭：-XX：-UseContainerSupport。&lt;/p&gt;
&lt;p&gt;当我测试它时，它最初不起作用。在撰写本文时，AdoptAJDK OpenJDK10镜像与jdk-10+23一起打包。这个JVM显然还是不理解UseContainerSupport标志，该进程仍然被Docker杀死。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run -m 100m -it adoptopenjdk/openjdk10 /bin/bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;测试了代码（甚至手动提供需要的标志）：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;javac MemEat.java&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;java MemEat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 96262112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 94164960&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 92067808&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 89970656&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Killed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;java -XX:+UseContainerSupport MemEat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Unrecognized VM option &lt;span class=&quot;string&quot;&gt;&#39;UseContainerSupport&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Error: Could not create the Java Virtual Machine.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Error: A fatal exception has occurred. Program will exit.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;测试四：Java-10u46（Nightly）&quot;&gt;&lt;a href=&quot;#测试四：Java-10u46（Nightly）&quot; class=&quot;headerlink&quot; title=&quot;测试四：Java 10u46（Nightly）&quot;&gt;&lt;/a&gt;测试四：Java 10u46（Nightly）&lt;/h3&gt;&lt;p&gt;我决定尝试AdoptAJDK OpenJDK 10的最新nightly构建。它包含的版本是Java 10+46，而不是Java 10+23。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run -m 100m -it adoptopenjdk/openjdk10:nightly /bin/bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然而，在这个ngithly构建中有一个问题，导出的PATH指向旧的Java 10+23目录，而不是10+46，我们需要修复这个问题。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; PATH=&lt;span class=&quot;variable&quot;&gt;$PATH&lt;/span&gt;:/opt/java/openjdk/jdk-10+46/bin/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;javac MemEat.java&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;java MemEat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 3566824&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 2796008&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 1480320&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Exception &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; thread &lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt; java.lang.OutOfMemoryError: Java heap space&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  at MemEat.main(MemEat.java:8)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;成功！不提供任何标志，Java 10依然可以正确检测到Dockers内存限制。&lt;/p&gt;
&lt;h3 id=&quot;测试五：OpenJ9&quot;&gt;&lt;a href=&quot;#测试五：OpenJ9&quot; class=&quot;headerlink&quot; title=&quot;测试五：OpenJ9&quot;&gt;&lt;/a&gt;测试五：OpenJ9&lt;/h3&gt;&lt;p&gt;我最近也在试用OpenJ9，这个免费的替代JVM已经从IBM J9开源，现在由Eclipse维护。&lt;/p&gt;
&lt;p&gt;请在我的下一篇博文&lt;a href=&quot;http://royvanrijn.com/blog/2018/05/openj9-jvm-shootout/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://royvanrijn.com/blog/2018/05/openj9-jvm-shootout/&lt;/a&gt;阅读关于OpenJ9的更多信息。&lt;/p&gt;
&lt;p&gt;它运行速度快，内存管理非常好，性能卓越，经常可以为我们的微服务节省多达30-50％的内存。这几乎可以将Spring Boot应用程序定义为’micro’了，其运行时间只有100-200mb，而不是300mb+。我打算尽快就此写一篇关于这方面的文章。&lt;/p&gt;
&lt;p&gt;但令我惊讶的是，OpenJ9还没有类似于Java 8/9/10+中针对cgroup内存限制的标志（backported）的选项。如果我们将以前的测试用例应用到最新的AdoptAJDK OpenJDK 9 + OpenJ9 build：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run -m 100m -it adoptopenjdk/openjdk9-openj9 /bin/bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们添加OpenJDK标志（OpenJ9会忽略的标志）：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap MemEat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 83988984&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 82940400&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 81891816&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Killed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Oops，JVM再次被Docker杀死。&lt;/p&gt;
&lt;p&gt;我真的希望类似的选项将很快添加到OpenJ9中，因为我希望在生产环境中运行这个选项，而不必指定最大内存两次。 Eclipse/IBM正在努力修复这个问题，已经提了issues，甚至已经针对issues提交了PR。&lt;/p&gt;
&lt;h3 id=&quot;更新：（不推荐Hack）&quot;&gt;&lt;a href=&quot;#更新：（不推荐Hack）&quot; class=&quot;headerlink&quot; title=&quot;更新：（不推荐Hack）&quot;&gt;&lt;/a&gt;更新：（不推荐Hack）&lt;/h3&gt;&lt;p&gt;一个稍微丑陋/hacky的方式来解决这个问题是使用下面的组合标志：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java -Xmx`cat /sys/fs/cgroup/memory/memory.limit_&lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;_bytes` MemEat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 3171536&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 2127048&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 2397632&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 1344952&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP039I Processing dump event &lt;span class=&quot;string&quot;&gt;&quot;systhrow&quot;&lt;/span&gt;, detail &lt;span class=&quot;string&quot;&gt;&quot;java/lang/OutOfMemoryError&quot;&lt;/span&gt; at 2018/05/15 14:04:26 - please wait.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP032I JVM requested System dump using &lt;span class=&quot;string&quot;&gt;&#39;//core.20180515.140426.125.0001.dmp&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; response to an event&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP010I System dump written to //core.20180515.140426.125.0001.dmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP032I JVM requested Heap dump using &lt;span class=&quot;string&quot;&gt;&#39;//heapdump.20180515.140426.125.0002.phd&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; response to an event&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP010I Heap dump written to //heapdump.20180515.140426.125.0002.phd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP032I JVM requested Java dump using &lt;span class=&quot;string&quot;&gt;&#39;//javacore.20180515.140426.125.0003.txt&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; response to an event&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP010I Java dump written to //javacore.20180515.140426.125.0003.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP032I JVM requested Snap dump using &lt;span class=&quot;string&quot;&gt;&#39;//Snap.20180515.140426.125.0004.trc&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; response to an event&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP010I Snap dump written to //Snap.20180515.140426.125.0004.trc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP013I Processed dump event &lt;span class=&quot;string&quot;&gt;&quot;systhrow&quot;&lt;/span&gt;, detail &lt;span class=&quot;string&quot;&gt;&quot;java/lang/OutOfMemoryError&quot;&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Exception &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; thread &lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt; java.lang.OutOfMemoryError: Java heap space&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  at MemEat.main(MemEat.java:8)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在这种情况下，堆大小受限于分配给Docker实例的内存，这适用于较旧的JVM和OpenJ9。这当然是错误的，因为容器本身和堆外的JVM的其他部分也使用内存。但它似乎工作，显然Docker在这种情况下是宽松的。也许某些bash大神会做出更好的版本，从其他进程的字节中减去一部分。&lt;/p&gt;
&lt;p&gt;无论如何，不要这样做，它可能无法正常工作。&lt;/p&gt;
&lt;h3 id=&quot;测试六：OpenJ9（Nightly）&quot;&gt;&lt;a href=&quot;#测试六：OpenJ9（Nightly）&quot; class=&quot;headerlink&quot; title=&quot;测试六：OpenJ9（Nightly）&quot;&gt;&lt;/a&gt;测试六：OpenJ9（Nightly）&lt;/h3&gt;&lt;p&gt;有人建议使用OpenJ9的最新nightly版本。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run -m 100m -it adoptopenjdk/openjdk9-openj9:nightly /bin/bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最新的OpenJ9夜间版本，它有两个东西：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;另一个有问题的PATH参数，需要先解决这个问题&lt;/li&gt;
&lt;li&gt;JVM支持新标志UseContainerSupport（就像Java 10一样）&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; PATH=&lt;span class=&quot;variable&quot;&gt;$PATH&lt;/span&gt;:/opt/java/openjdk/jdk-9.0.4+12/bin/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;javac MemEat.java&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;java -XX:+UseContainerSupport MemEat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 5864464&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 4815880&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 3443712&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free memory: 2391032&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP039I Processing dump event &lt;span class=&quot;string&quot;&gt;&quot;systhrow&quot;&lt;/span&gt;, detail &lt;span class=&quot;string&quot;&gt;&quot;java/lang/OutOfMemoryError&quot;&lt;/span&gt; at 2018/05/15 21:32:07 - please wait.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP032I JVM requested System dump using &lt;span class=&quot;string&quot;&gt;&#39;//core.20180515.213207.62.0001.dmp&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; response to an event&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP010I System dump written to //core.20180515.213207.62.0001.dmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP032I JVM requested Heap dump using &lt;span class=&quot;string&quot;&gt;&#39;//heapdump.20180515.213207.62.0002.phd&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; response to an event&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP010I Heap dump written to //heapdump.20180515.213207.62.0002.phd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP032I JVM requested Java dump using &lt;span class=&quot;string&quot;&gt;&#39;//javacore.20180515.213207.62.0003.txt&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; response to an event&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP010I Java dump written to //javacore.20180515.213207.62.0003.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP032I JVM requested Snap dump using &lt;span class=&quot;string&quot;&gt;&#39;//Snap.20180515.213207.62.0004.trc&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; response to an event&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP010I Snap dump written to //Snap.20180515.213207.62.0004.trc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVMDUMP013I Processed dump event &lt;span class=&quot;string&quot;&gt;&quot;systhrow&quot;&lt;/span&gt;, detail &lt;span class=&quot;string&quot;&gt;&quot;java/lang/OutOfMemoryError&quot;&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Exception &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; thread &lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt; java.lang.OutOfMemoryError: Java heap space&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;TADAAA，正在修复中！&lt;/p&gt;
&lt;p&gt;奇怪的是，这个标志在OpenJ9中默认没有启用，就像它在Java 10中一样。再说一次：确保你测试了这是你想在一个Docker容器中运行Java。&lt;/p&gt;
&lt;h2 id=&quot;结论&quot;&gt;&lt;a href=&quot;#结论&quot; class=&quot;headerlink&quot; title=&quot;结论&quot;&gt;&lt;/a&gt;结论&lt;/h2&gt;&lt;p&gt;简言之：注意资源限制的不匹配。测试你的内存设置和JVM标志，不要假设任何东西。&lt;/p&gt;
&lt;p&gt;如果您在Docker容器中运行Java，请确保你设置了Docker内存限制和在JVM中也做了限制，或者你的JVM能够理解这些限制。&lt;/p&gt;
&lt;p&gt;如果您无法升级您的Java版本，请使用-Xmx设置您自己的限制。&lt;/p&gt;
&lt;p&gt;对于Java 8和Java 9，请更新到最新版本并使用：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-XX：+UnlockExperimentalVMOptions -XX：+UseCGroupMemoryLimitForHeap&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;对于Java 10，确保它支持’UseContainerSupport’（更新到最新版本）。&lt;/p&gt;
&lt;p&gt;对于OpenJ9（我强烈建议使用，可以在生产环境中有效减少内存占用量），现在使用-Xmx设置限制，但很快会出现一个支持UseContainerSupport标志的版本。&lt;/p&gt;
&lt;p&gt;原文链接：&lt;a href=&quot;http://royvanrijn.com/blog/2018/05/java-and-docker-memory-limits/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://royvanrijn.com/blog/2018/05/java-and-docker-memory-limits/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;揭秘&quot;&gt;&lt;a href=&quot;#揭秘&quot; class=&quot;headerlink&quot; title=&quot;揭秘&quot;&gt;&lt;/a&gt;揭秘&lt;/h2&gt;&lt;p&gt;Java和Docker不是天然的朋友。 Docker可以设置内存和CPU限制，而Java不能自动检测到。使用Java的Xmx标识（繁琐/重复）或新的实验性JVM标识，我们可以解决这个问题。&lt;/p&gt;
&lt;h2 id=&quot;虚拟化中的不匹配&quot;&gt;&lt;a href=&quot;#虚拟化中的不匹配&quot; class=&quot;headerlink&quot; title=&quot;虚拟化中的不匹配&quot;&gt;&lt;/a&gt;虚拟化中的不匹配&lt;/h2&gt;&lt;p&gt;Java和Docker的结合并不是完美匹配的，最初的时候离完美匹配有相当大的距离。对于初学者来说，JVM的全部设想就是，虚拟机可以让程序与底层硬件无关。&lt;/p&gt;
&lt;p&gt;那么，把我们的Java应用打包到JVM中，然后整个再塞进Docker容器中，能给我们带来什么好处呢？大多数情况下，你只是在复制JVMs和Linux容器，除了浪费更多的内存，没任何好处。感觉这样子挺傻的。&lt;/p&gt;
&lt;p&gt;不过，Docker可以把你的程序，设置，特定的JDK，Linux设置和应用服务器，还有其他工具打包在一起，当做一个东西。站在DevOps/Cloud的角度来看，这样一个完整的容器有着更高层次的封装。&lt;/p&gt;
&lt;h3 id=&quot;问题一：内存&quot;&gt;&lt;a href=&quot;#问题一：内存&quot; class=&quot;headerlink&quot; title=&quot;问题一：内存&quot;&gt;&lt;/a&gt;问题一：内存&lt;/h3&gt;&lt;p&gt;时至今日，绝大多数产品级应用仍然在使用Java 8（或者更旧的版本），而这可能会带来问题。Java 8（update 131之前的版本）跟Docker无法很好地一起工作。问题是在你的机器上，JVM的可用内存和CPU数量并不是Docker允许你使用的可用内存和CPU数量。&lt;/p&gt;
&lt;p&gt;比如，如果你限制了你的Docker容器只能使用100MB内存，但是呢，旧版本的Java并不能识别这个限制。Java看不到这个限制。JVM会要求更多内存，而且远超这个限制。如果使用太多内存，Docker将采取行动并杀死容器内的进程！JAVA进程被干掉了，很明显，这并不是我们想要的。&lt;/p&gt;
&lt;p&gt;为了解决这个问题，你需要给Java指定一个最大内存限制。在旧版本的Java（8u131之前），你需要在容器中通过设置-Xmx来限制堆大小。这感觉不太对，你可不想定义这些限制两次，也不太想在你的容器中来定义。&lt;/p&gt;
&lt;p&gt;幸运的是我们现在有了更好的方式来解决这个问题。从Java 9之后（8u131+），JVM增加了如下标志：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这些标志强制JVM检查Linux的cgroup配置，Docker是通过cgroup来实现最大内存设置的。现在，如果你的应用到达了Docker设置的限制（比如500MB），JVM是可以看到这个限制的。JVM将会尝试GC操作。如果仍然超过内存限制，JVM就会做它该做的事情，抛出OutOfMemoryException。也就是说，JVM能够看到Docker的这些设置。&lt;/p&gt;
&lt;p&gt;从Java 10之后（参考下面的测试），这些体验标志位是默认开启的，也可以使用-XX:+UseContainerSupport来使能（你可以通过设置-XX:-UseContainerSupport来禁止这些行为）。&lt;/p&gt;
&lt;h3 id=&quot;问题二：CPU&quot;&gt;&lt;a href=&quot;#问题二：CPU&quot; class=&quot;headerlink&quot; title=&quot;问题二：CPU&quot;&gt;&lt;/a&gt;问题二：CPU&lt;/h3&gt;&lt;p&gt;第二个问题是类似的，但它与CPU有关。简而言之，JVM将查看硬件并检测CPU的数量。它会优化你的runtime以使用这些CPUs。但是同样的情况，这里还有另一个不匹配，Docker可能不允许你使用所有这些CPUs。可惜的是，这在Java 8或Java 9中并没有修复，但是在Java 10中得到了解决。&lt;/p&gt;
&lt;p&gt;从Java 10开始，可用的CPUs的计算将采用以不同的方式（默认情况下）解决此问题（同样是通过UseContainerSupport）。&lt;br&gt;
    
    </summary>
    
      <category term="docker" scheme="http://icyxp.github.io/categories/docker/"/>
    
    
      <category term="docker" scheme="http://icyxp.github.io/tags/docker/"/>
    
      <category term="java" scheme="http://icyxp.github.io/tags/java/"/>
    
      <category term="内存" scheme="http://icyxp.github.io/tags/%E5%86%85%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>Centos 6.x 上升级go 1.10.3</title>
    <link href="http://icyxp.github.io//blog/2018/07/go-%E5%8D%87%E7%BA%A7go1-10-x%E9%97%AE%E9%A2%98.html"/>
    <id>http://icyxp.github.io//blog/2018/07/go-升级go1-10-x问题.html</id>
    <published>2018-07-18T12:30:00.000Z</published>
    <updated>2018-07-18T13:41:55.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前提&quot;&gt;&lt;a href=&quot;#前提&quot; class=&quot;headerlink&quot; title=&quot;前提&quot;&gt;&lt;/a&gt;前提&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;目前本地Linux (Centos 6.x) 编译环境还滞留在1.8.x上，为了提升go性能，想将go升级到最新版，但在升级过程中遇到如下问题，故此记录下！忘后续的go友能跳过此坑！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;在Centos 6.x 升级go 1.10.x过程中遇到如下问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;step1.  下载go 1.10.x 源码&lt;/li&gt;
&lt;li&gt;step2.  解压，进入go/src&lt;/li&gt;
&lt;li&gt;step3.  执行./all.bash&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Building Go cmd/dist using /root/go1.4.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Building Go toolchain1 using /root/go1.4.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Building Go bootstrap cmd/go (go_bootstrap) using Go toolchain1.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Building Go toolchain2 using go_bootstrap and Go toolchain1.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Building Go toolchain3 using go_bootstrap and Go toolchain2.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Building packages and commands &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; linux/amd64.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;##### Testing packages.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.... 过程略长，特此省略&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/internal/src    0.001s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/internal/&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;2json    0.097s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/link    1.988s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/link/internal/ld    43.529s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/nm    3.417s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/objdump    1.588s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/pack    1.217s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/trace    0.007s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--- FAIL: TestObjFile (0.01s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    binutils_test.go:231: SourceLine: unexpected error write |1: broken pipe&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FAIL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FAIL    cmd/vendor/github.com/google/pprof/internal/binutils    0.018s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/github.com/google/pprof/internal/driver    12.194s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/github.com/google/pprof/internal/elfexec    0.002s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/github.com/google/pprof/internal/graph    0.002s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/github.com/google/pprof/internal/measurement    0.002s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/github.com/google/pprof/internal/report    0.048s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/github.com/google/pprof/internal/symbolizer    0.004s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/github.com/google/pprof/internal/symbolz    0.004s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/github.com/google/pprof/profile    0.045s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/github.com/ianlancetaylor/demangle    0.012s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/golang.org/x/arch/arm/armasm    0.007s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/golang.org/x/arch/arm64/arm64asm    0.043s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/golang.org/x/arch/ppc64/ppc64asm    0.003s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/golang.org/x/arch/x86/x86asm    0.064s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vet    1.205s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vet/internal/cfg    0.002s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2018/07/18 17:59:22 Failed: &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; status 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;问题分析&quot;&gt;&lt;a href=&quot;#问题分析&quot; class=&quot;headerlink&quot; title=&quot;问题分析&quot;&gt;&lt;/a&gt;问题分析&lt;/h2&gt;&lt;p&gt;为什么在执行binutils_test.go 会Failed，最终查看代码原因是因为如下命令引起：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;120807 3650  execve(&lt;span class=&quot;string&quot;&gt;&quot;/usr/bin/addr2line&quot;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&quot;/usr/bin/addr2line&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;-aif&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;-e&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;testdata/exe_linux_64&quot;&lt;/span&gt;], [/* 15 vars */] &amp;lt;unfinished ...&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;有关生成此命令的源代码可查看如下地址：&lt;a href=&quot;https://github.com/google/pprof/blob/a74ae6fb3cd7047c79272e3ea0814b08154a2d3c/internal/binutils/addr2liner.go#L92&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;addr2line&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;add2line文件来自于包：binutils&lt;/p&gt;
&lt;p&gt;执行命令失败，是因为在CentOS 6.x上，binutils的版本是2.20，&lt;a href=&quot;https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;a=blob_plain;f=binutils/NEWS;hb=refs/tags/binutils-2_27&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考文献&lt;/a&gt; ，然后addr2line命令中的-a参数在binutils 2.21版中才添加&lt;/p&gt;
&lt;p&gt;因此，为了解决这个问题，我从源码重新进行编译binutils并将其构建的二进制文件添加到PATH中，然后运行测试，并成功通过。&lt;/p&gt;
&lt;p&gt;编译安装binutils过程如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https://ftp.gnu.org/gnu/binutils/binutils-2.27.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar zxvf binutils-2.27.tar.gz &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; binutils-2.27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure --prefix=/usr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;特此说明，在Centos 7.x 上能成功避免此坑！！&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前提&quot;&gt;&lt;a href=&quot;#前提&quot; class=&quot;headerlink&quot; title=&quot;前提&quot;&gt;&lt;/a&gt;前提&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;目前本地Linux (Centos 6.x) 编译环境还滞留在1.8.x上，为了提升go性能，想将go升级到最新版，但在升级过程中遇到如下问题，故此记录下！忘后续的go友能跳过此坑！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;在Centos 6.x 升级go 1.10.x过程中遇到如下问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;step1.  下载go 1.10.x 源码&lt;/li&gt;
&lt;li&gt;step2.  解压，进入go/src&lt;/li&gt;
&lt;li&gt;step3.  执行./all.bash&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Building Go cmd/dist using /root/go1.4.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Building Go toolchain1 using /root/go1.4.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Building Go bootstrap cmd/go (go_bootstrap) using Go toolchain1.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Building Go toolchain2 using go_bootstrap and Go toolchain1.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Building Go toolchain3 using go_bootstrap and Go toolchain2.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Building packages and commands &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; linux/amd64.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;##### Testing packages.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.... 过程略长，特此省略&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/internal/src    0.001s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/internal/&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;2json    0.097s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/link    1.988s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/link/internal/ld    43.529s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/nm    3.417s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/objdump    1.588s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/pack    1.217s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/trace    0.007s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--- FAIL: TestObjFile (0.01s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    binutils_test.go:231: SourceLine: unexpected error write |1: broken pipe&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FAIL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FAIL    cmd/vendor/github.com/google/pprof/internal/binutils    0.018s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/github.com/google/pprof/internal/driver    12.194s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/github.com/google/pprof/internal/elfexec    0.002s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/github.com/google/pprof/internal/graph    0.002s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/github.com/google/pprof/internal/measurement    0.002s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/github.com/google/pprof/internal/report    0.048s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/github.com/google/pprof/internal/symbolizer    0.004s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/github.com/google/pprof/internal/symbolz    0.004s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/github.com/google/pprof/profile    0.045s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/github.com/ianlancetaylor/demangle    0.012s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/golang.org/x/arch/arm/armasm    0.007s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/golang.org/x/arch/arm64/arm64asm    0.043s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/golang.org/x/arch/ppc64/ppc64asm    0.003s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vendor/golang.org/x/arch/x86/x86asm    0.064s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vet    1.205s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ok      cmd/vet/internal/cfg    0.002s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2018/07/18 17:59:22 Failed: &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; status 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="golang" scheme="http://icyxp.github.io/categories/golang/"/>
    
    
      <category term="golang" scheme="http://icyxp.github.io/tags/golang/"/>
    
      <category term="go" scheme="http://icyxp.github.io/tags/go/"/>
    
      <category term="升级" scheme="http://icyxp.github.io/tags/%E5%8D%87%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>Logstash filter插件开发</title>
    <link href="http://icyxp.github.io//blog/2017/08/log-logstash-filter.html"/>
    <id>http://icyxp.github.io//blog/2017/08/log-logstash-filter.html</id>
    <published>2017-08-15T16:00:00.000Z</published>
    <updated>2017-08-16T15:30:02.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Logstash是一个具有实时管线能力的开源数据收集引擎。在ELK Stack中，通常选择更轻量级的Filebeat收集日志，然后将日志输出到Logstash进行加工处理，再将处理后的日志输出到指定的目标（ElasticSearch，Kafka等）当中。&lt;/p&gt;
&lt;p&gt;Logstash事件的处理管线是inputs → filters → outputs，三个阶段都可以自定义插件，本文主要介绍如何开发自定义需求最多的filter插件。&lt;/p&gt;
&lt;p&gt;Logstash的安装就不详细介绍了，下载传送门：&lt;a href=&quot;https://www.elastic.co/downloads/logstash&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.elastic.co/downloads/logstash&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;前置准备&quot;&gt;&lt;a href=&quot;#前置准备&quot; class=&quot;headerlink&quot; title=&quot;前置准备&quot;&gt;&lt;/a&gt;前置准备&lt;/h2&gt;&lt;p&gt;我们使用docker来讲解如何给logstash定制一个filter插件，首先，我们下载logstash官方最新版本的镜像。下载方式: &lt;code&gt;docker pull logstash&lt;/code&gt;，下载好后我们就来Run这个镜像，命令：&lt;code&gt;docker run -it logstash bash&lt;/code&gt;，这样我们就进入到logstash容器中了。接下来我们就安装下两个基本的软件包，一个vim，一个rsyslog，命令如下：&lt;code&gt;apt-get update &amp;amp;&amp;amp; apt-get -y install vim rsyslog &amp;amp;&amp;amp; /etc/init.d/rsysylog start&lt;/code&gt;。到此我们的准备工作就完毕了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;生成filter插件&quot;&gt;&lt;a href=&quot;#生成filter插件&quot; class=&quot;headerlink&quot; title=&quot;生成filter插件&quot;&gt;&lt;/a&gt;生成filter插件&lt;/h2&gt;&lt;p&gt;cd到Logstash的跟目录，使用&lt;code&gt;bin/logstash-plugin&lt;/code&gt;生成filter插件模板，如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /usr/share/logstash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir -p vendor/localgems&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bin/logstash-plugin generate --type filter --name &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt; --path vendor/localgems&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#vendor/localgems 可修改为你自己的路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查看filter插件的目录结构，如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;root@c11787c4cef3:/usr/share/logstash/vendor/localgems&lt;span class=&quot;comment&quot;&gt;# tree .&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└── logstash-filter-test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── CHANGELOG.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── CONTRIBUTORS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── DEVELOPER.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── Gemfile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── LICENSE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── Rakefile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── lib&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   └── logstash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │       └── filters&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │           └── test.rb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── logstash-filter-test.gemspec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── spec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   ├── filters&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   │   └── &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;_spec.rb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   └── spec_helper.rb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    └── test.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6 directories, 12 files&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;filter插件初探&quot;&gt;&lt;a href=&quot;#filter插件初探&quot; class=&quot;headerlink&quot; title=&quot;filter插件初探&quot;&gt;&lt;/a&gt;filter插件初探&lt;/h2&gt;&lt;p&gt;Logstash插件是用ruby写的，查看&lt;code&gt;logstash-filter-test/lib/logstash/filters/test.rb&lt;/code&gt;文件，如下：&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# logstash依赖于UTF-8编码，需要在插件代码开始处添加&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# encoding: utf-8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#引入了插件必备的包&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;logstash/filters/base&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;logstash/namespace&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 插件继承自Base基类，并配置插件的使用名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LogStash::Filters::Test&lt;/span&gt; &amp;lt; LogStash::Filters::&lt;span class=&quot;title&quot;&gt;Base&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 插件名称，在Logstash配置的filter块中使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;#filter&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;#  test&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;#      source =&amp;gt; &quot;message&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;#  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;#&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  config_name &lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 插件参数配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# source是插件test的可选参数，默认值是&quot;Hello World!&quot;。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  config &lt;span class=&quot;symbol&quot;&gt;:source&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;:validate&lt;/span&gt; =&amp;gt; &lt;span class=&quot;symbol&quot;&gt;:string&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;:default&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 下面是参数的通用配置代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# config :variable_name, :validate =&amp;gt; :variable_type, :default =&amp;gt; &quot;Default value&quot;, :required =&amp;gt; boolean, :deprecated =&amp;gt; boolean, :obsolete =&amp;gt; string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# :variable_name：参数名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# :validate：验证参数类型，如:string, :password, :boolean, :number, :array, :hash, :path等&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# :required：是否必须配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# :default：默认值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# :deprecated：是否废弃&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# :obsolete：声明该配置不再使用，通常提供升级方案&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  public&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;register&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 方法相当于初始化方法，不需要手动调用，可以在这个方法里面调用配置变量，如&lt;span class=&quot;doctag&quot;&gt;@message&lt;/span&gt;，也可以初始化自己的实例变量。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  public&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(event)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 方法是插件的数据处理逻辑，其中event变量封装了数据流，可以通过接口访问event中的内容，具体参见 https://www.elastic.co/guide/en/logstash/5.1/event-api.html。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (source = event.get(@source))      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      datas = source.split(&lt;span class=&quot;string&quot;&gt;&quot;|&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      event.set(&lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;, datas[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      event.set(&lt;span class=&quot;string&quot;&gt;&quot;data2&quot;&lt;/span&gt;, datas[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      event.set(&lt;span class=&quot;string&quot;&gt;&quot;user&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;xp&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#这个方法用于保证Logstash的配置`add_field`, `remove_field`, `add_tag`和`remove_tag`会被正确执行。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    filter_matched(event)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# def filter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# class LogStash::Filters::Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查看&lt;code&gt;logstash-filter-test/logstash-filter-test.gemspec&lt;/code&gt;文件，如下：&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Gem::Specification.new &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;|s|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.name          = &lt;span class=&quot;string&quot;&gt;&#39;logstash-filter-test&#39;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.version       = &lt;span class=&quot;string&quot;&gt;&#39;0.1.0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.licenses      = [&lt;span class=&quot;string&quot;&gt;&#39;Apache License (2.0)&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.summary       = &lt;span class=&quot;string&quot;&gt;&#39;描述这个插件的概要&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.description   = &lt;span class=&quot;string&quot;&gt;&#39;这个插件的详细说明&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.homepage      = &lt;span class=&quot;string&quot;&gt;&#39;http://icyxp.github.io&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.authors       = [&lt;span class=&quot;string&quot;&gt;&#39;icyboy&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.email         = &lt;span class=&quot;string&quot;&gt;&#39;icyboy@me.com&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.require_paths = [&lt;span class=&quot;string&quot;&gt;&#39;lib&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# Files&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.files = Dir[&lt;span class=&quot;string&quot;&gt;&#39;lib/**/*&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;spec/**/*&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;vendor/**/*&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;*.gemspec&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;*.md&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;CONTRIBUTORS&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;Gemfile&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;LICENSE&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;NOTICE.TXT&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;# Tests&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.test_files = s.files.grep(&lt;span class=&quot;regexp&quot;&gt;%r&amp;#123;^(test|spec|features)/&amp;#125;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# Special flag to let us know this is actually a logstash plugin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.metadata = &amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;logstash_plugin&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;logstash_group&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;filter&quot;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# Gem dependencies&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.add_runtime_dependency &lt;span class=&quot;string&quot;&gt;&quot;logstash-core-plugin-api&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;~&amp;gt; 2.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.add_development_dependency &lt;span class=&quot;string&quot;&gt;&#39;logstash-devutils&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;在Logstash中配置定制的插件&quot;&gt;&lt;a href=&quot;#在Logstash中配置定制的插件&quot; class=&quot;headerlink&quot; title=&quot;在Logstash中配置定制的插件&quot;&gt;&lt;/a&gt;在Logstash中配置定制的插件&lt;/h2&gt;&lt;p&gt;cd到Logstash根目录下&lt;code&gt;cd /usr/shar/logstash&lt;/code&gt;，在&lt;code&gt;Gemfile&lt;/code&gt;末尾添加以下配置：&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gem &lt;span class=&quot;string&quot;&gt;&quot;logstash-filter-test&quot;&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;:path&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;vendor/localgems/logstash-filter-test&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;启动Logstash&quot;&gt;&lt;a href=&quot;#启动Logstash&quot; class=&quot;headerlink&quot; title=&quot;启动Logstash&quot;&gt;&lt;/a&gt;启动Logstash&lt;/h2&gt;&lt;p&gt;先编写一个配置文件&lt;code&gt;test.conf&lt;/code&gt;，这里我使用了rsyslog&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#来源rsyslog&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;input&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    file&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    path =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;/var/log/messages&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#或者可以设置为终端输入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#input&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#    stdin&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filter&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 定制的filter插件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#输出到终端&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;output&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stdout&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        codec =&amp;gt; rubydebug&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行起来&lt;code&gt;logstash -f test.conf&lt;/code&gt;，然后往rsyslog里写日志你就可以看下如下情况就说明ok了。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#logger &quot;测试一下&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;path&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;/var/log/messages&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;@timestamp&quot;&lt;/span&gt; =&amp;gt; 2017-08-16T15:27:46.606Z,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;Aug 16 15:27:45 c11787c4cef3 root: 测试一下&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;string&quot;&gt;&quot;data2&quot;&lt;/span&gt; =&amp;gt; nil,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;@version&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;host&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;c11787c4cef3&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&quot;message&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;Aug 16 15:27:45 c11787c4cef3 root: 测试一下&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;user&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;xp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#logger &quot;测试一下|from by icyboy&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;path&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;/var/log/messages&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;@timestamp&quot;&lt;/span&gt; =&amp;gt; 2017-08-16T15:28:17.661Z,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;Aug 16 15:28:16 c11787c4cef3 root: 测试一下&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;string&quot;&gt;&quot;data2&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;from by icyboy&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;@version&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;host&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;c11787c4cef3&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&quot;message&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;Aug 16 15:28:16 c11787c4cef3 root: 测试一下|from by icyboy&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;user&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;xp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Logstash是一个具有实时管线能力的开源数据收集引擎。在ELK Stack中，通常选择更轻量级的Filebeat收集日志，然后将日志输出到Logstash进行加工处理，再将处理后的日志输出到指定的目标（ElasticSearch，Kafka等）当中。&lt;/p&gt;
&lt;p&gt;Logstash事件的处理管线是inputs → filters → outputs，三个阶段都可以自定义插件，本文主要介绍如何开发自定义需求最多的filter插件。&lt;/p&gt;
&lt;p&gt;Logstash的安装就不详细介绍了，下载传送门：&lt;a href=&quot;https://www.elastic.co/downloads/logstash&quot;&gt;https://www.elastic.co/downloads/logstash&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;前置准备&quot;&gt;&lt;a href=&quot;#前置准备&quot; class=&quot;headerlink&quot; title=&quot;前置准备&quot;&gt;&lt;/a&gt;前置准备&lt;/h2&gt;&lt;p&gt;我们使用docker来讲解如何给logstash定制一个filter插件，首先，我们下载logstash官方最新版本的镜像。下载方式: &lt;code&gt;docker pull logstash&lt;/code&gt;，下载好后我们就来Run这个镜像，命令：&lt;code&gt;docker run -it logstash bash&lt;/code&gt;，这样我们就进入到logstash容器中了。接下来我们就安装下两个基本的软件包，一个vim，一个rsyslog，命令如下：&lt;code&gt;apt-get update &amp;amp;&amp;amp; apt-get -y install vim rsyslog &amp;amp;&amp;amp; /etc/init.d/rsysylog start&lt;/code&gt;。到此我们的准备工作就完毕了。&lt;/p&gt;
    
    </summary>
    
      <category term="日志" scheme="http://icyxp.github.io/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="开发" scheme="http://icyxp.github.io/categories/%E6%97%A5%E5%BF%97/%E5%BC%80%E5%8F%91/"/>
    
      <category term="logstash" scheme="http://icyxp.github.io/categories/%E6%97%A5%E5%BF%97/%E5%BC%80%E5%8F%91/logstash/"/>
    
    
      <category term="logstash" scheme="http://icyxp.github.io/tags/logstash/"/>
    
      <category term="日志" scheme="http://icyxp.github.io/tags/%E6%97%A5%E5%BF%97/"/>
    
      <category term="ruby" scheme="http://icyxp.github.io/tags/ruby/"/>
    
  </entry>
  
  <entry>
    <title>一语点醒技术人：你不是Google</title>
    <link href="http://icyxp.github.io//blog/2017/07/gossip-%E4%BD%A0%E4%B8%8D%E6%98%AFGoogle.html"/>
    <id>http://icyxp.github.io//blog/2017/07/gossip-你不是Google.html</id>
    <published>2017-07-26T15:00:00.000Z</published>
    <updated>2017-07-26T14:56:34.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;/images/gossip/01/cover.png&quot; alt=&quot;01&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;在为问题寻找解决方案时要先充分了解问题本身，而不是一味地盲目崇拜那些巨头公司。Ozan Onay以Amazon、LinkedIn和Google为例，为执迷不悟的人敲响警钟。以下内容已获得作者翻译授权，查看原文：&lt;a href=&quot;https://blog.bradfieldcs.com/you-are-not-google-84912cf44afb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;You Are Not Google&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;软件工程师总是着迷于荒唐古怪的事。我们看起来似乎很理性，但在面对技术选型时，总是陷入抓狂——从Hacker News到各种博客，像一只飞蛾一样，来回折腾，最后精疲力尽，无助地飞向一团亮光，跪倒在它的前面——那就是我们一直在寻找的东西。&lt;/p&gt;
&lt;p&gt;真正理性的人不是这样做决定的。不过工程师一贯如此，比如决定是否使用MapReduce。&lt;/p&gt;
&lt;p&gt;Joe Hellerstein在他的大学数据库教程视频中说道：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;世界上只有差不多5个公司需要运行这么大规模的作业。至于其他公司……他们使用了所有的IO来实现不必要的容错。在2000年代，人们狂热地追随着Google：“我们要做Google做过的每一件事，因为我们也运行着世界上最大的互联网数据服务。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;超出实际需求的容错没有什么问题，但我们却为此付出了的惨重的代价：不仅增加了IO，还有可能让原先成熟的系统——包含了事务、索引和查询优化器——变得破碎不堪。这是一个多么严重的历史倒退！有多少个Hadoop用户是有意识地做出这种决定的？有多少人知道他们的决定到底是不是一个明智之举？&lt;/p&gt;
&lt;p&gt;MapReduce已经成为一个众矢之的，那些盲目崇拜者也意识到事情不对劲。但这种情况却普遍存在：虽然你使用了大公司的技术，但你的情况却与他们大不一样，而且你的决定并没有经过深思熟虑，你只是习以为常地认为，模仿巨头公司就一定也能给你带来同样的财富。&lt;/p&gt;
&lt;p&gt;是的，这又是一篇劝大家“不要盲目崇拜”的文章。不过这次我列出了一长串有用的清单，或许能够帮助你们做出更好的决定。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;很酷的技术？UNPHAT&quot;&gt;&lt;a href=&quot;#很酷的技术？UNPHAT&quot; class=&quot;headerlink&quot; title=&quot;很酷的技术？UNPHAT&quot;&gt;&lt;/a&gt;很酷的技术？UNPHAT&lt;/h2&gt;&lt;p&gt;如果你还在使用Google搜索新技术来重建你的软件架构，那么我建议你不要再这么做了。相反，你可以考虑应用UNPHAT原则。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在彻底了解（Understand）你的问题之前，不要急着去寻找解决方案。你的目标应该是在问题领域内“解决”问题，而不是在方案领域内解决问题。&lt;/li&gt;
&lt;li&gt;列出（eNumerate）多种方案，不要只把眼睛盯在你最喜欢的方案上。&lt;/li&gt;
&lt;li&gt;选择一个候选方案，并阅读相关论文（Paper）。&lt;/li&gt;
&lt;li&gt;了解候选方案的产生背景（Historical context）。&lt;/li&gt;
&lt;li&gt;比较优点（Advantages）和缺点，扬长避短。&lt;/li&gt;
&lt;li&gt;思考（Think）！冷静地思考候选方案是否适合用于解决你的问题。要出现怎样异常的情况才会让你改变注意？例如，数据要少到什么程度才会让你打消使用Hadoop的念头？&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;你不是Amazon&quot;&gt;&lt;a href=&quot;#你不是Amazon&quot; class=&quot;headerlink&quot; title=&quot;你不是Amazon&quot;&gt;&lt;/a&gt;你不是Amazon&lt;/h2&gt;&lt;p&gt;UNPHAT原则十分直截了当。最近我与一个公司有过一次对话，这个公司打算在一个读密集的系统里使用Cassandra，他们的数据是在夜间加载到系统里的。&lt;/p&gt;
&lt;p&gt;他们阅读了Dynamo的相关论文，并且知道Cassandra是最接近Dynamo的一个产品。我们知道，这些分布式数据库优先保证写可用性（Amazon是不会让“添加到购物车”这种操作出现失败的）。为了达到这个目的，他们在一致性以及几乎所有在传统RDBMS中出现过的特性上做出了妥协。但这家公司其实没有必要优先考虑写可用性，因为他们每天只有一次写入操作，只是数据量比较大。&lt;/p&gt;
&lt;p&gt;他们之所以考虑使用Cassandra，是因为PostgreSQL查询需要耗费几分钟的时间。他们认为是硬件的问题，经过排查，我们发现数据表里有5000万条数据，每条数据最多80个字节。如果从SSD上整块地读取所有数据大概需要5秒钟，这个不算快，但比起实际的查询，它要快上两个数量级。&lt;/p&gt;
&lt;p&gt;我真的很想多问他们几个问题（了解问题！），在问题变得愈加严重时，我为他们准备了5个方案（列出多个候选方案！），不过很显然，Cassandra对于他们来说完全是一个错误的方案。他们只需要耐心地做一些调优，比如对部分数据重新建模，或许可以考虑使用（当然也有可能没有）其他技术……但一定不是这种写高可用的键值存储系统，Amazon当初创建Cassandra是用来解决他们的购物车问题的！&lt;/p&gt;
&lt;h2 id=&quot;你不是LinkedIn&quot;&gt;&lt;a href=&quot;#你不是LinkedIn&quot; class=&quot;headerlink&quot; title=&quot;你不是LinkedIn&quot;&gt;&lt;/a&gt;你不是LinkedIn&lt;/h2&gt;&lt;p&gt;我发现一个学生创办的小公司居然在他们的系统里使用Kafka，这让我感到很惊讶。因为据我所知，他们每天只有很少的事务需要处理——最好的情况下，一天最多只有几百个。这样的吞吐量几乎可以直接记在记事本上。&lt;/p&gt;
&lt;p&gt;Kafka被设计用于处理LinkedIn内部的吞吐量，那可是一个天文数字。即使是在几年前，这个数字已经达到了每天数万亿，在高峰时段每秒钟需要处理1000万个消息。不过Kafka也可以用于处理低吞吐量的负载，或许再低10个数量级？&lt;/p&gt;
&lt;p&gt;或许工程师们在做决定时确实是基于他们的预期需求，并且也很了解Kafka的适用场景。但我猜测他们是抵挡不住社区对Kafka的追捧，并没有仔细想过Kafka是否适合他们。要知道，那可是10个数量级的差距！&lt;/p&gt;
&lt;h2 id=&quot;再一次，你不是Amazon&quot;&gt;&lt;a href=&quot;#再一次，你不是Amazon&quot; class=&quot;headerlink&quot; title=&quot;再一次，你不是Amazon&quot;&gt;&lt;/a&gt;再一次，你不是Amazon&lt;/h2&gt;&lt;p&gt;比Amazon的分布式数据库更为著名的是它的可伸缩架构模式，也就是面向服务架构。Werner Vogels在2006年的一次访谈中指出，Amazon在2001年时就意识到他们的前端需要横向伸缩，而面向服务架构有助于他们实现前端伸缩。工程师们面面相觑，最后只有少数几个工程师着手去做这件事情，而几乎没有人愿意将他们的静态网页拆分成小型的服务。&lt;/p&gt;
&lt;p&gt;不过Amazon还是决定向SOA转型，他们当时有7800个员工和30亿美元的销售规模。&lt;/p&gt;
&lt;p&gt;当然，并不是说你也要等到有7800个员工的时候才能转向SOA……只是你要多想想，它真的能解决你的问题吗？你的问题的根源是什么？可以通过其他的方式解决它们吗？&lt;/p&gt;
&lt;p&gt;如果你告诉我说，你那50个人的公司打算转向SOA，那么我不禁感到疑惑：为什么很多大型的公司仍然在乐此不彼地使用具有模块化的大型单体应用？&lt;/p&gt;
&lt;h2 id=&quot;甚至Google也不是Google&quot;&gt;&lt;a href=&quot;#甚至Google也不是Google&quot; class=&quot;headerlink&quot; title=&quot;甚至Google也不是Google&quot;&gt;&lt;/a&gt;甚至Google也不是Google&lt;/h2&gt;&lt;p&gt;使用Hadoop和Spark这样的大规模数据流引擎会非常有趣，但在很多情况下，传统的DBMS更适合当前的负载，有时候数据量小到可以直接放进内存。你是否愿意花10,000美金去购买1TB的内存？如果你有十亿个用户，每个用户仅能使用1KB的内存，所以你的投入远远不够。&lt;/p&gt;
&lt;p&gt;或许你的负载大到需要把数据写回磁盘。那么你需要多少磁盘？你到底有多少数据量？Google之所以要创建GFS和MapReduce，是要解决整个Web的计算问题，比如重建整个Web的搜索索引。&lt;/p&gt;
&lt;p&gt;或许你已经阅读过GFS和MapReduce的论文，Google的部分问题在于吞吐量，而不是容量，他们之所以需要分布式的存储，是因为从磁盘读取字节流要花费太多的时间。那么你在2017年需要使用多少设备吞吐量？你一定不需要像Google那么大的吞吐量，所以你可能会考虑使用更好的设备。如果都用上SSD会给你增加多少成本？&lt;/p&gt;
&lt;p&gt;或许你还想要伸缩性。但你有仔细算过吗，你的数据增长速度会快过SSD降价的速度吗？在你的数据撑爆所有的机器之前，你的业务会有多少增长？截止2016年，Stack Exchange每天要处理2亿个请求，但是他们只用了4个SQL Server，一个用于Stack Overflow，一个用于其他用途，另外两个作为备份复本。&lt;/p&gt;
&lt;p&gt;或许你在应用UNPHAT原则之后，仍然决定要使用Hadoop或Spark。或许你的决定是对的，但关键的是你要用对工具。Google非常明白这个道理，当他们意识到MapReduce不再适合用于构建索引之后，他们就不再使用它。&lt;/p&gt;
&lt;h2 id=&quot;先了解你的问题&quot;&gt;&lt;a href=&quot;#先了解你的问题&quot; class=&quot;headerlink&quot; title=&quot;先了解你的问题&quot;&gt;&lt;/a&gt;先了解你的问题&lt;/h2&gt;&lt;p&gt;我所说的也不是什么新观点，不过或许UNPHAT对于你们来说已经足够了。如果你觉得还不够，可以听听Rich Hickey的演讲“&lt;a href=&quot;https://www.youtube.com/watch?v=f84n5oFoZBc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;吊床驱动开发&lt;/a&gt;”，或者看看Polya的书《&lt;a href=&quot;https://www.amazon.com/How-Solve-Mathematical-Princeton-Science/dp/069111966X?ie=UTF8&amp;amp;%2aVersion%2a=1&amp;amp;%2aentries%2a=0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to Solve It&lt;/a&gt;》， 或者学习一下Hamming的课程“&lt;a href=&quot;https://www.youtube.com/playlist?list=PL2FF649D0C4407B30&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The Art of Doing Science and Engineering&lt;/a&gt;”。我恳请你们一定要多思考！在尝试解决问题之前先对它们有充分的了解。最后送上Polya的一个金句名言：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;回答一个你不了解的问题是愚蠢的，到达一个你不期望的终点是悲哀的。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/gossip/01/cover.png&quot; alt=&quot;01&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;在为问题寻找解决方案时要先充分了解问题本身，而不是一味地盲目崇拜那些巨头公司。Ozan Onay以Amazon、LinkedIn和Google为例，为执迷不悟的人敲响警钟。以下内容已获得作者翻译授权，查看原文：&lt;a href=&quot;https://blog.bradfieldcs.com/you-are-not-google-84912cf44afb&quot;&gt;You Are Not Google&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;软件工程师总是着迷于荒唐古怪的事。我们看起来似乎很理性，但在面对技术选型时，总是陷入抓狂——从Hacker News到各种博客，像一只飞蛾一样，来回折腾，最后精疲力尽，无助地飞向一团亮光，跪倒在它的前面——那就是我们一直在寻找的东西。&lt;/p&gt;
&lt;p&gt;真正理性的人不是这样做决定的。不过工程师一贯如此，比如决定是否使用MapReduce。&lt;/p&gt;
&lt;p&gt;Joe Hellerstein在他的大学数据库教程视频中说道：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;世界上只有差不多5个公司需要运行这么大规模的作业。至于其他公司……他们使用了所有的IO来实现不必要的容错。在2000年代，人们狂热地追随着Google：“我们要做Google做过的每一件事，因为我们也运行着世界上最大的互联网数据服务。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;超出实际需求的容错没有什么问题，但我们却为此付出了的惨重的代价：不仅增加了IO，还有可能让原先成熟的系统——包含了事务、索引和查询优化器——变得破碎不堪。这是一个多么严重的历史倒退！有多少个Hadoop用户是有意识地做出这种决定的？有多少人知道他们的决定到底是不是一个明智之举？&lt;/p&gt;
&lt;p&gt;MapReduce已经成为一个众矢之的，那些盲目崇拜者也意识到事情不对劲。但这种情况却普遍存在：虽然你使用了大公司的技术，但你的情况却与他们大不一样，而且你的决定并没有经过深思熟虑，你只是习以为常地认为，模仿巨头公司就一定也能给你带来同样的财富。&lt;/p&gt;
&lt;p&gt;是的，这又是一篇劝大家“不要盲目崇拜”的文章。不过这次我列出了一长串有用的清单，或许能够帮助你们做出更好的决定。&lt;/p&gt;
    
    </summary>
    
      <category term="茶余饭后" scheme="http://icyxp.github.io/categories/%E8%8C%B6%E4%BD%99%E9%A5%AD%E5%90%8E/"/>
    
    
      <category term="茶余饭后" scheme="http://icyxp.github.io/tags/%E8%8C%B6%E4%BD%99%E9%A5%AD%E5%90%8E/"/>
    
  </entry>
  
  <entry>
    <title>高负载微服务系统的诞生过程</title>
    <link href="http://icyxp.github.io//blog/2017/07/microservice-%E9%AB%98%E8%B4%9F%E8%BD%BD%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AF%9E%E7%94%9F%E8%BF%87%E7%A8%8B.html"/>
    <id>http://icyxp.github.io//blog/2017/07/microservice-高负载微服务系统的诞生过程.html</id>
    <published>2017-07-26T14:00:00.000Z</published>
    <updated>2017-07-26T14:33:05.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;/images/ms/02/cover.png&quot; alt=&quot;封面&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;在2016 &lt;a href=&quot;http://highload.co/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LighLoad++&lt;/a&gt;大会上，“M-Tex”的开发经理Vadim Madison讲述了从一个由数百个微服务组成的系统到包含数千个微服务的高负载项目的发展历程。本文已获得翻译授权，查看英文原文：&lt;a href=&quot;https://kukuruku.co/post/microservices-in-a-high-load-project/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Microservices in a High-Load Project&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;我将告诉大家我们是如何开始一个高负载微服务项目的。在讲述我们的经历之前，先让我们简单地自我介绍一下。&lt;/p&gt;
&lt;p&gt;简单地说，我们从事视频输出方面的工作——我们提供实时的视频。我们负责“NTV-Plus”和“Match TV”频道的视频平台。该平台有30万的并发用户，每小时输出300TB的内容。这是一个很有意思的任务。那么我们是如何做到的呢？&lt;/p&gt;
&lt;p&gt;这背后都有哪些故事？这些故事都是关于项目的开发和成长，关于我们对项目的思考。总而言之，是关于如何提升项目的伸缩能力，承受更大的负载，在不宕机和不丢失关键特性的情况下为客户提供更多的功能。我们总是希望能够满足客户的需求。当然，这也涉及到我们是如何实现这一切，以及这一切是如何开始的。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;在最开始，我们有两台运行在Docker集群里的服务器，数据库运行在相同机器的容器里。没有专用的存储，基础设施非常简单。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们就是这样开始的，只有两台运行在Docker集群里的服务器。那个时候，数据库也运行在同一个集群里。我们的基础设施里没有什么专用的组件，十分简单。&lt;br&gt;&lt;img src=&quot;/images/ms/02/00.jpg&quot; alt=&quot;00&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们的基础设施最主要的组件就是Docker和TeamCity，我们用它们来交付和构建代码。&lt;/p&gt;
&lt;p&gt;在接下来的时期——我称其为我们的发展中期——是我们项目发展的关键时期。我们拥有了80台服务器，并在一组特殊的机器上为数据库搭建了一个单独的专用集群。我们开始使用基于CEPH的分布式存储，并开始思考服务之间的交互问题，同时要更新我们的监控系统。&lt;/p&gt;
&lt;p&gt;现在，让我们来看看我们在这一时期都做了哪些事情。Docker集群里已经有数百台服务器，微服务就运行在它们上面。这个时候，我们开始根据数据总线和逻辑分离原则将我们的系统拆分成服务子系统。当微服务越来越多时，我们决定拆分我们的系统，这样维护起来就容易得多（也更容易理解）。&lt;br&gt;&lt;img src=&quot;/images/ms/02/01.jpg&quot; alt=&quot;01&quot;&gt;&lt;/p&gt;
&lt;p&gt;这张图展示的是我们系统其中的一小部分。这部分系统负责视频剪切。半年前，我在“RIT++”也展示过类似的图片。那个时候只有17个绿色的微服务，而现在有28个绿色的微服务。这些服务只占我们整个系统的二十分之一，所以可以想象我们系统大致的规模有多大。&lt;/p&gt;
&lt;h2 id=&quot;深入细节&quot;&gt;&lt;a href=&quot;#深入细节&quot; class=&quot;headerlink&quot; title=&quot;深入细节&quot;&gt;&lt;/a&gt;深入细节&lt;/h2&gt;&lt;p&gt;服务间的通信是一件很有趣的事情。一般来说，我们应该尽可能提升服务间通信效率。我们使用了&lt;a href=&quot;https://developers.google.com/protocol-buffers/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;protobuf&lt;/a&gt;，我们认为它就是我们需要的东西。&lt;/p&gt;
&lt;p&gt;它看起来是这样的：&lt;br&gt;&lt;img src=&quot;/images/ms/02/02.jpg&quot; alt=&quot;02&quot;&gt;&lt;/p&gt;
&lt;p&gt;微服务的前面有一个负载均衡器。请求到达前端，或者直接发送给提供了JSON API的服务。protobuf被用于内部服务之间的交互。&lt;/p&gt;
&lt;p&gt;protobuf真是一个好东西。它为消息提供了很好的压缩率。现如今有很多框架，只要使用很小的开销就能实现序列化和反序列化。我们可以将其视为有条件的请求类型。&lt;/p&gt;
&lt;p&gt;但如果从微服务角度来看，我们会发现，微服务之间也存在某种私有的协议。如果只有一两个或者五个微服务，我们可以为每个微服务打开一个控制台，通过它们来访问微服务，并获得响应结果。如果出现了问题，我们可以对其进行诊断。不过这在一定程度上让微服务的支持工作变得复杂。&lt;/p&gt;
&lt;p&gt;在一定时期内，这倒不是什么问题，因为并没有太多的微服务。另外，Google发布了&lt;a href=&quot;https://grpc.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gRPC&lt;/a&gt;。在那个时候，gRPC满足了所有我们想做的事情。于是我们逐渐迁移到gRPC。于是我们的技术栈里出现了另一个组件。&lt;br&gt;&lt;img src=&quot;/images/ms/02/03.jpg&quot; alt=&quot;03&quot;&gt;&lt;/p&gt;
&lt;p&gt;实现的细节也是很有趣的。gRPC默认是基于HTTP/2的。如果你的环境相对稳定，应用程序不怎么发生变更，也不需要在机器间迁移，那么gRCP对于你来说就是个不错的东西。另外，gRPC支持很多客户端和服务器端的编程语言。&lt;/p&gt;
&lt;p&gt;现在，我们从微服务角度来看待这个问题。从一方面来看，gRPC是一个好东西，但从另一方面来看，它也有不足之处。当我们开始对日志进行标准化（这样就可以将它们聚合到一个独立的系统里）时，我们发现，从gRPC中抽取日志非常麻烦。&lt;/p&gt;
&lt;p&gt;于是，我们决定开发自己的日志系统。它解析消息，并将它们转成我们需要的格式。这样我们才可以获得我们想要的日志。还有一个问题，添加新的微服务会让服务间的依赖变得更加复杂。这是微服务一直存在的问题，这也是除版本问题之外的另一个具有一定复杂性的问题。&lt;/p&gt;
&lt;p&gt;于是，我们开始考虑使用JSON。在很长的一段时间里，我们无法相信，在使用了紧凑的二进制协议之后会转回使用JSON。有一天，我们看到一篇文章，来自&lt;a href=&quot;http://engineering.dailymotion.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DailyMotion&lt;/a&gt;的一个家伙在文章里提到了同样的事情：“我们知道该如何使用JSON，每个人都可以使用JSON。既然如此，为什么还要自寻烦恼呢？”&lt;br&gt;&lt;img src=&quot;/images/ms/02/04.jpg&quot; alt=&quot;04&quot;&gt;&lt;/p&gt;
&lt;p&gt;于是，我们逐渐从gRPC转向我们自己实现的JSON。我们保留了HTTP/2，它与JSON组合起来可以带来更快的速度。&lt;/p&gt;
&lt;p&gt;现在，我们具备了所有必要的特性。我们可以通过cURL访问我们的服务。我们的QA团队使用&lt;a href=&quot;https://www.getpostman.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Postman&lt;/a&gt;，所以他们也感觉很满意。一切都变得简单起来。这是一个有争议性的决定，但却为我们带来了很多好处。&lt;/p&gt;
&lt;p&gt;JSON唯一的缺点就是它的紧凑性不足。根据我们的测试结果，它与MessagePack之间有30%的差距。不过对于一个支持系统来说，这不算是个大问题。&lt;/p&gt;
&lt;p&gt;况且，我们在转到JSON之后还获得了更多的特性，比如协议版本。有时候，当我们在新版本的协议上使用protobuf时，客户端也必须改用protobuf。如果你有数百个服务，就算只有10%的服务进行了迁移，这也会引起很大的连锁反应。你在一个服务上做了一些变更，就会有十多个服务也需要跟着改动。&lt;/p&gt;
&lt;p&gt;因此，我们就会面临这样的一种情况，一个服务的开发人员已经发布了第五个、第六个，甚至第七个版本，但生产环境里仍然在运行第四个版本，就因为其他相关服务的开发人员有他们自己的优先级和截止日期。他们无法持续地更新他们的服务，并使用新版本的协议。所以，新版本的服务虽然发布了，但还派不上用场。然后，我们却要以一种很奇怪的方式来修复旧版本的bug，这让支持工作变得更加复杂。&lt;/p&gt;
&lt;p&gt;最后，我们决定停止发布新版本的协议。我们提供协议的基础版本，可以往里面添加少量的属性。服务的消费者开始使用JSON schema。&lt;/p&gt;
&lt;p&gt;标准看起来是这样的：&lt;br&gt;&lt;img src=&quot;/images/ms/02/05.jpg&quot; alt=&quot;05&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们没有使用版本1、2和3，而是只使用版本1和指向它的schema。&lt;br&gt;&lt;img src=&quot;/images/ms/02/06.jpg&quot; alt=&quot;06&quot;&gt;&lt;/p&gt;
&lt;p&gt;这是从我们服务返回的一个典型的响应结果。它是一个内容管理器，返回有关广播的信息。这里有一个消费者schema的例子。&lt;br&gt;&lt;img src=&quot;/images/ms/02/07.jpg&quot; alt=&quot;07&quot;&gt;&lt;/p&gt;
&lt;p&gt;最底下的字符串最有意思，也就是”required”那块。我们可以看到，这个服务只需要4个字段——id、content、date和status。如果我们使用了这个schema，那么消费者就只会得到这样的数据。&lt;br&gt;&lt;img src=&quot;/images/ms/02/08.jpg&quot; alt=&quot;08&quot;&gt;&lt;/p&gt;
&lt;p&gt;它们可以被用在每一个协议版本里，从第一个版本到后来的每一个变更版本。这样，在版本之间迁移就容易很多。在我们发布新版本之后，客户端的迁移就会简单很多。&lt;/p&gt;
&lt;p&gt;下一个重要的议题是系统的稳定性问题。这是微服务和其他任何一个系统都需要面临的问题（在微服务架构里，我们可以更强烈地感觉到它的重要性）。系统总会在某个时候变得不稳定。&lt;/p&gt;
&lt;p&gt;如果服务间的调用链只包含了一两个服务，那么就没有什么问题。在这种情况下，你看不出单体和分布式系统之间有多大区别。但当调用链里包含了5到7个调用，那么问题就会接踵而至。你根本不知道为什么会这样，也不知道能做些什么。在这种情况下，调试会变得很困难。在单体系统里，你可以通过逐步调试来找出错误。但对于微服务来说，网络不稳定性或高负载下的性能不稳定性也会对微服务造成影响。特别是对于拥有大量节点的分布式系统来说，这些情况就更加显而易见了。&lt;br&gt;&lt;img src=&quot;/images/ms/02/09.jpg&quot; alt=&quot;09&quot;&gt;&lt;/p&gt;
&lt;p&gt;在一开始，我们采用了传统的办法。我们监控所有的东西，查看问题和问题的发生点，然后尝试尽快修复它们。我们将微服务的度量指标收集到一个独立的数据库里。我们使用&lt;a href=&quot;https://github.com/python-diamond/Diamond&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Diamond&lt;/a&gt;来收集系统度量指标。我们使用&lt;a href=&quot;https://github.com/google/cadvisor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cAdvisor&lt;/a&gt;来分析容器的资源使用情况和性能特征。所有的结果都被保存到&lt;a href=&quot;https://github.com/influxdata/influxdb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;InfluxDB&lt;/a&gt;，然后我们在Grafana里创建仪表盘。&lt;br&gt;&lt;img src=&quot;/images/ms/02/10.jpg&quot; alt=&quot;10&quot;&gt;&lt;/p&gt;
&lt;p&gt;于是，我们现在的基础设施里又多了三个组件。&lt;/p&gt;
&lt;p&gt;我们比以往更加关注所发生的一切。我们对问题的反应速度更快了。不过，这并没有阻止问题的出现。&lt;/p&gt;
&lt;p&gt;奇怪的是，微服务架构的主要问题出在那些不稳定的服务上。它们有的今天运行正常，明天就不行，而且有各种各样的原因。如果服务出现超载，而你继续向它发送负载，它就会宕机一段时间。如果它在一段时间不提供服务，负载就会下降，然后它就又活过来了。这类系统很难维护，也很难知道到底出了什么问题。&lt;/p&gt;
&lt;p&gt;最后，我们决定把这些服务停掉，而不是让它们来回折腾。我们因此需要改变服务的实现方式。&lt;/p&gt;
&lt;p&gt;我们做了一件很重要的事情。我们对每个服务接收的请求数量设定了一个上限。每个服务知道自己可以处理多少个来自客户端的请求（我们稍后会详细说明）。如果请求数量达到上限，服务将抛出503 Service Unavailable异常。客户端知道这个节点无法提供服务，就会选择另一个节点。&lt;/p&gt;
&lt;p&gt;当系统出现问题时，我们就可以通过这种方式来减少请求时间。另外，我们也提升了服务的稳定性。&lt;/p&gt;
&lt;p&gt;我们引入了第二种模式——&lt;strong&gt;回路断路器&lt;/strong&gt;（Circuit Breaker）。我们在客户端实现了这种模式。&lt;/p&gt;
&lt;p&gt;假设有一个服务A，它有4个可以访问的服务B的实例。它向注册中心索要服务B的地址：“给我这些服务的地址”。它得到了服务B的4个地址。服务A向第一个服务B的实例发起了请求。第一个服务B实例正常返回响应。服务A将其标记为可访问：“是的，我可以访问它”。然后，服务A向第二个服务B实例发起请求，不过它没有在期望的时间内得到响应。我们禁用了这个实例，然后向下一个实例发起请求。下一个实例因为某些原因返回了不正确的协议版本。于是我们也将其禁用，然后转向第四个实例。&lt;/p&gt;
&lt;p&gt;总得来说，只有一半的服务能够为客户端提供服务。于是服务A将会向能够正常返回响应的两个服务发起请求。而另外两个无法满足要求的实例被禁用了一段时间。&lt;/p&gt;
&lt;p&gt;我们通过这种方式来提升性能的稳定性。如果服务出现了问题，我们就将其关闭，并发出告警，然后尝试找出问题所在。&lt;/p&gt;
&lt;p&gt;因为引入了回路断路器模式，我们的基础设施里又多了一个组件——&lt;a href=&quot;https://github.com/Netflix/Hystrix&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hystrix&lt;/a&gt;。&lt;br&gt;&lt;img src=&quot;/images/ms/02/11.jpg&quot; alt=&quot;11&quot;&gt;&lt;/p&gt;
&lt;p&gt;Hystrix不仅实现了回路断路器模式，它也有助于我们了解系统里出现了哪些问题：&lt;br&gt;&lt;img src=&quot;/images/ms/02/12.jpg&quot; alt=&quot;12&quot;&gt;&lt;/p&gt;
&lt;p&gt;圆环的大小表示服务与其他组件之间的流量大小。颜色表示系统的健康状况。如果圆环是绿色的，那么说明一切正常。如果圆环是红色的，那么就有问题了。&lt;/p&gt;
&lt;p&gt;如果一个服务应该被停掉，那么它看起来是这个样子的。圆环是打开的。&lt;br&gt;&lt;img src=&quot;/images/ms/02/13.jpg&quot; alt=&quot;13&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们的系统变得相对稳定。每个服务至少都有两个可用的实例，这样我们就可以选择停掉其中的一个。不过，尽管是这样，我们仍然不知道我们的系统究竟发生了什么问题。在处理请求期间如果出现了问题，我们应该怎样才能知道问题的根源是什么呢？&lt;/p&gt;
&lt;p&gt;这是一个标准的请求：&lt;br&gt;&lt;img src=&quot;/images/ms/02/14.jpg&quot; alt=&quot;14&quot;&gt;&lt;/p&gt;
&lt;p&gt;这是一个处理链条。用户发送请求到第一个服务，然后是第二个。从第二个服务开始，链条将请求发送到第三个和第四个服务。&lt;/p&gt;
&lt;p&gt;然后一个分支不明原因地消失了。在经历了这类场景之后，我们尝试着提升这种场景的可见性，于是我们找到了Appdash。Appdash是一个跟踪服务。&lt;br&gt;&lt;img src=&quot;/images/ms/02/16.jpg&quot; alt=&quot;16&quot;&gt;&lt;/p&gt;
&lt;p&gt;它看起来是这个样子的：&lt;br&gt;&lt;img src=&quot;/images/ms/02/17.jpg&quot; alt=&quot;17&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以这么说，我们只是想尝试一下，看看它是否适合我们。将它用在我们的系统里是一件很容易的事情，因为我们那个时候使用的是Go语言。Appdash提供了一个开箱即用的包。我们认为Appdash是一个好东西，只是它的实现并不是很适合我们。&lt;br&gt;&lt;img src=&quot;/images/ms/02/18.jpg&quot; alt=&quot;18&quot;&gt;&lt;/p&gt;
&lt;p&gt;于是，我们决定使用&lt;a href=&quot;http://zipkin.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Zipkin&lt;/a&gt;来代替Appdash。Zipkin是由Twitter开源的。它看起来是这个样子的：&lt;br&gt;&lt;img src=&quot;/images/ms/02/19.jpg&quot; alt=&quot;19&quot;&gt;&lt;/p&gt;
&lt;p&gt;我认为这样会更清楚一些。我们可以从中看到一些服务，也可以看到我们的请求是如何通过请求链的，还可以看到请求在每个服务里都做了哪些事情。一方面，我们可以看到服务的总时长和每个分段的时长，另一方面，我们完全可以添加描述服务内容的信息。&lt;/p&gt;
&lt;p&gt;我们可以在这里添加一些与数据库的调用、文件系统的读取、缓存的访问有关的信息，这样就可以知道请求里哪一部分使用了最多的时间。TraceID可以帮助我们做到这一点。稍后我会介绍更多细节。&lt;br&gt;&lt;img src=&quot;/images/ms/02/20.jpg&quot; alt=&quot;20&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们就是通过这种方式知道请求在处理过程中发生了什么问题，以及为什么有时候无法被正常处理。刚开始一切都正常，然后突然间，其中的一个出现了问题。我们稍作排查，就知道出问题的服务发生了什么。&lt;br&gt;&lt;img src=&quot;/images/ms/02/21.jpg&quot; alt=&quot;21&quot;&gt;&lt;/p&gt;
&lt;p&gt;不久前，一些厂商推出了一个跟踪系统的标准。为了简化系统的实现，主要的几个跟踪系统厂商在如何设计客户端API和客户端类库上达成了一致。现在已经有了&lt;a href=&quot;http://opentracing.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenTracing&lt;/a&gt;的实现，支持几乎所有的主流开发语言。现在就可以使用它了。&lt;/p&gt;
&lt;p&gt;我们已经有办法知道那些突然间崩溃的服务。我们可以看到其中的某部分在垂死挣扎，但是不知道为什么。光有环境信息是不够的，&lt;/p&gt;
&lt;p&gt;我们还需要日志。是的，这应该成为标准的一部分，它就是Elasticsearch、Logstash和Kibana（ELK）。不过我们对它们做了一些改动。&lt;br&gt;&lt;img src=&quot;/images/ms/02/22.jpg&quot; alt=&quot;22&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们并没有将大量的日志直接通过forward传给Logstash，而是先传给syslog，让它把日志聚合到构建机器上，然后再通过forward导入到&lt;strong&gt;Elasticsearch&lt;/strong&gt;和&lt;strong&gt;Kibana&lt;/strong&gt;。这是一个很标准的流程，那么巧妙的地方在哪里呢？&lt;br&gt;&lt;img src=&quot;/images/ms/02/23.jpg&quot; alt=&quot;23&quot;&gt;&lt;/p&gt;
&lt;p&gt;巧妙的是，我们可以在任何可能的地方往日志里加入Zipkin的TraceID。&lt;/p&gt;
&lt;p&gt;这样一来，我们就可以在Kibana仪表盘上看到完整的用户请求执行情况。也就是说，一旦服务进入生产环境，就为运营做好了准备。它已经通过了自动化测试，如果有必要，QA可以再进行手动检查。它应该没有什么问题。如果它出现了问题，那说明有一些先决条件没有得到满足。日志里详细地记录了这些先决条件，通过过滤，我们可以看到某个请求的跟踪信息。我们因此可以快速地查出问题的根源，为我们节省了很多时间。&lt;/p&gt;
&lt;p&gt;我们后来引入了动态调试模式。现在的日志数量还不是很大，大概只有100 GB到150 GB，我记不太清楚具体数字了。不过，这些日志是在正常的日志模式下生成的。如果我们添加更多的细节，那么日志就可能变成TB级别的，处理起来就很耗费资源。&lt;/p&gt;
&lt;p&gt;当我们发现某些服务出现问题，就打开调试模式（通过一个API），看看发生了什么事情。有时候，我们找到出现问题的服务，在不将它关闭的情况下打开调试模式，尝试找出问题所在。&lt;/p&gt;
&lt;p&gt;最后，我们在ELK端查找问题。我们还对关键服务的错误进行聚合。服务知道哪些错误是关键性的，哪些不是关键性的，然后将它们传给&lt;a href=&quot;https://sentry.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sentry&lt;/a&gt;。&lt;br&gt;&lt;img src=&quot;/images/ms/02/24.jpg&quot; alt=&quot;24&quot;&gt;&lt;/p&gt;
&lt;p&gt;Sentry能够智能地收集错误日志，并形成度量指标，还会进行一些基本的过滤。我们在很多服务上使用了Sentry。我们从单体应用时期就开始使用它了。&lt;/p&gt;
&lt;p&gt;那么最有趣的问题是，我们是如何进行伸缩的？这里需要先介绍一些概念。我们把每个机器看成一个黑盒。&lt;br&gt;&lt;img src=&quot;/images/ms/02/25.jpg&quot; alt=&quot;25&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们有一个编排系统，最开始使用&lt;a href=&quot;https://www.nomadproject.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Nomad&lt;/a&gt;。确切地说，应该是&lt;a href=&quot;https://www.ansible.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ansible&lt;/a&gt;。我们自己编写脚本，但光是这些还不能满足要求。那个时候，Nomad的某些版本可以简化我们的工作，于是我们决定迁移到Nomad。&lt;br&gt;&lt;img src=&quot;/images/ms/02/26.jpg&quot; alt=&quot;26&quot;&gt;&lt;/p&gt;
&lt;p&gt;同时还使用了&lt;a href=&quot;https://www.consul.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Consul&lt;/a&gt;，将它作为服务发现的注册中心。还有Vault，用于存储敏感数据，比如密码、秘钥和其他所有不能保存在Git上的东西。&lt;/p&gt;
&lt;p&gt;这样，所有的机器几乎都变得一模一样。每个机器上都安装了&lt;strong&gt;Docker&lt;/strong&gt;，还有&lt;strong&gt;Consul&lt;/strong&gt;和&lt;strong&gt;Nomad&lt;/strong&gt;代理。总的来说，每一个机器都处于备用状态，可以在任何时候投入使用。如果不用了，我们就让它们下线。如果你构建了云平台，你就可以先准备好机器，在高峰期时将它们打开，在负载下降时将它们关闭。这会节省大量的成本。&lt;br&gt;&lt;img src=&quot;/images/ms/02/27.jpg&quot; alt=&quot;27&quot;&gt;&lt;/p&gt;
&lt;p&gt;后来，我们决定从&lt;strong&gt;Nomad&lt;/strong&gt;迁移到&lt;a href=&quot;https://github.com/kubernetes/kubernetes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kubernetes&lt;/a&gt;，&lt;strong&gt;Consul&lt;/strong&gt;也因此成为了集中式的配置系统。&lt;/p&gt;
&lt;p&gt;这样一来，部分栈可以进行自动伸缩。那么我们是怎么做的呢？&lt;/p&gt;
&lt;p&gt;第一步，我们对内存、CPU和网络进行限制。&lt;br&gt;&lt;img src=&quot;/images/ms/02/28.jpg&quot; alt=&quot;28&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们分别将这三个元素分成三个等级，砍掉其中的一部分。例如，&lt;br&gt;&lt;img src=&quot;/images/ms/02/29.jpg&quot; alt=&quot;29&quot;&gt;&lt;/p&gt;
&lt;p&gt;R3-C2-N1，我们已经限定只给某个服务一小部分网络流量、多一点点的CPU和更多的内存。这个服务真的很耗费资源。&lt;/p&gt;
&lt;p&gt;我们在这里使用了助记符，我们的决策服务可以设置很多的组合值，这些值看起来是这样的：&lt;br&gt;&lt;img src=&quot;/images/ms/02/30.jpg&quot; alt=&quot;30&quot;&gt;&lt;/p&gt;
&lt;p&gt;事实上，我们还有C4和R4，不过它们已经超出了这些标准的限制。标准看起来是这样的：&lt;br&gt;&lt;img src=&quot;/images/ms/02/31.jpg&quot; alt=&quot;31&quot;&gt;&lt;/p&gt;
&lt;p&gt;下一步开始做一些预备工作。我们先确定服务的伸缩类型。&lt;/p&gt;
&lt;p&gt;独立的服务最容易伸缩，它可以进行线性地伸缩。如果用户增长了两倍，我们就运行两倍的服务实例。这就万事大吉了。&lt;/p&gt;
&lt;p&gt;第二种伸缩类型：服务依赖了外部的资源，比如那些使用了数据库的服务。数据库有它自己的容量上限，这个一定要注意。你还要知道，如果系统性能出现衰退，就不应该再增加更多的实例，而且你要知道这种情况会在什么时候发生。&lt;/p&gt;
&lt;p&gt;第三种情况是，服务受到外部系统的牵制。例如，外部的账单系统。就算运行了100个服务实例，它也没办法处理超过500个请求。我们要考虑到这些限制。在确定了服务类型并设置了相应的标记之后，是时候看看它们是如何通过我们的构建管道的。&lt;br&gt;&lt;img src=&quot;/images/ms/02/32.jpg&quot; alt=&quot;32&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们在CI服务器上运行了一些单元测试，然后在测试环境运行集成测试，我们的QA团队会对它们做一些检查。在这之后，我们就进入了预生产环境的负载测试。&lt;br&gt;&lt;img src=&quot;/images/ms/02/33.jpg&quot; alt=&quot;33&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果是第一种类型的服务，我们使用一个实例，并在这个环境里运行它，给它最大的负载。在运行了几轮之后，我们取其中的最小值，将它存入&lt;strong&gt;InfluxDB&lt;/strong&gt;，将它作为该服务的负载上限。&lt;/p&gt;
&lt;p&gt;如果是第二种类型的服务，我们逐渐加大负载，直到出现了性能衰退。我们对这个过程进行评估，如果我们知道该系统的负载，那么就比较当前负载是否已经足够，否则，我们就会设置告警，不会把这个服务发布到生产环境。我们会告诉开发人员：“你们需要分离出一些东西，或者加进去另一个工具，让这个服务可以更好地伸缩。”&lt;br&gt;&lt;img src=&quot;/images/ms/02/34.jpg&quot; alt=&quot;34&quot;&gt;&lt;/p&gt;
&lt;p&gt;因为我们知道第三种类型服务的上限，所以我们只运行一个实例。我们也会给它一些负载，看看它可以服务多少个用户。如果我们知道账单系统的上限是1000个请求，并且每个服务实例可以处理200个请求，那么就需要5个实例。&lt;/p&gt;
&lt;p&gt;我们把这些信息都保存到了InfluxDB。我们的决策服务开始派上用场了。它会检查两个边界：上限和下限。如果超出了上限，那么就应该增加服务实例。如果超出下限，那么就减少实例。如果负载下降（比如晚上的时候），我们就不需要这么多机器，可以减少它们的数量，并关掉一部分机器，省下一些费用。&lt;/p&gt;
&lt;p&gt;整体看起来是这样的：&lt;br&gt;&lt;img src=&quot;/images/ms/02/35.jpg&quot; alt=&quot;35&quot;&gt;&lt;/p&gt;
&lt;p&gt;每个服务的度量指标表明了它们当前的负载。负载信息被保存到InfluxDB，如果决策服务发现服务实例达到了上限，它会向Nomad和Kubernetes发送命令，要求增加服务实例。有可能在云端已经有可用的实例，或者开始做一些准备工作。不管怎样，发出要求增加新服务实例的告警才是关键所在。&lt;/p&gt;
&lt;p&gt;一些受限的服务如果达到上限，也会发出相关的告警。对于这类情况，我们除了加大等待队列，也做不了其他什么事情。不过最起码我们知道我们很快就会面临这样的问题，并开始做好应对措施。&lt;/p&gt;
&lt;p&gt;这就是我想告诉大家有关伸缩性方面的事情。除了这些，还有另外一个东西——&lt;a href=&quot;https://about.gitlab.com/gitlab-ci/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gitlab CI&lt;/a&gt;。&lt;br&gt;&lt;img src=&quot;/images/ms/02/36.jpg&quot; alt=&quot;36&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们一般是通过TeamCity来开发服务的。后来，我们意识到，所有的服务都有一个共性，这些服务都是不一样的，并且知道自己该如何部署到容器里。要生成这么的项目真的很困难，不过如果使用yml文件来描述它们，并把这个文件与服务放在一起，就会方便很多。虽然我们只做了一些小的改变，不过却为我们带来了非常多的可能性。&lt;/p&gt;
&lt;p&gt;现在，我想说一些一直想对自己说的话。&lt;/p&gt;
&lt;p&gt;关于微服务开发，我建议在一开始就使用&lt;strong&gt;编排系统&lt;/strong&gt;。可以使用最简单的编排系统，比如Nomad，通过nomad agent -dev命令启动一个编排系统，包括Consul和其他东西。&lt;/p&gt;
&lt;p&gt;我们仿佛是在一个黑盒子工作。你试图避免被绑定到某台特定的机器上，或者被附加到某台特定机器的文件系统上。这些事情会让你开始重新思考。&lt;/p&gt;
&lt;p&gt;在开发阶段，&lt;strong&gt;每个服务至少需要两个实例&lt;/strong&gt;，如果其中一个出现问题，就可以关掉它，由另一个接管继续服务。&lt;/p&gt;
&lt;p&gt;还有一些有关架构的问题。在微服务架构里，&lt;strong&gt;消息总线&lt;/strong&gt;是一个非常重要的组件。&lt;/p&gt;
&lt;p&gt;假设你有一个用户注册系统，那么如何以最简单的方式实现它呢？对于注册系统来说，需要创建账户，然后在账单系统里创建一个用户，并为他创建头像和其他东西。你有一组服务，其中的超级服务收到了一个请求，它将请求分发给其他服务。经过几次之后，它就知道该触发哪些服务来完成注册。&lt;/p&gt;
&lt;p&gt;不过，我们可以使用一种更简单、更可靠、更高效的方式来实现。我们使用一个服务来处理注册，它注册了一个用户，然后发送一个事件到消息总线，比如“我已经注册了一个yoghurt，ID是……”。相关的服务会收到这个事件，其中的一个服务会在账单系统里创建一个账户，另一个服务会发送一封欢迎邮件。&lt;/p&gt;
&lt;p&gt;不过，系统会因此失去强一致性。这个时候你没有超级服务，也不知道每个服务的状态。不过，这样的系统很容易维护。&lt;/p&gt;
&lt;p&gt;现在，我再说一些之前提到过的问题。&lt;strong&gt;不要试图修复&lt;/strong&gt;出问题的服务。如果某些服务实例出现了问题，将它找出来，然后把流量定向到其他服务实例（可能是新增的实例）上，然后再诊断问题。这样可以显著提升系统的可用性。&lt;/p&gt;
&lt;p&gt;通过&lt;strong&gt;收集度量指标&lt;/strong&gt;来了解系统的状态自然不在话下。&lt;/p&gt;
&lt;p&gt;不过要注意，如果你对某个度量指标不了解，不知道怎么使用它，或者它对你来说没有什么意义，就不要收集它。因为有时候，这样的度量指标会有数百万个。你在这些无用的度量指标上面浪费了很多资源和时间。这些是无效的负载。&lt;/p&gt;
&lt;p&gt;如果你认为你需要某些度量指标，那么就收集它们。如果不需要，就不要收集。&lt;/p&gt;
&lt;p&gt;如果你发现了一个问题，不要急着去修复。在很多情况下，&lt;strong&gt;系统会对此作出反应&lt;/strong&gt;。当系统需要你采取行动的时候，它会给你发出告警。如果它不要求你在半夜跑去修复问题，那么它就不算是一个告警。它只不过是一种警告，你可以在把它当成一般的问题来处理。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/ms/02/cover.png&quot; alt=&quot;封面&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;在2016 &lt;a href=&quot;http://highload.co/&quot;&gt;LighLoad++&lt;/a&gt;大会上，“M-Tex”的开发经理Vadim Madison讲述了从一个由数百个微服务组成的系统到包含数千个微服务的高负载项目的发展历程。本文已获得翻译授权，查看英文原文：&lt;a href=&quot;https://kukuruku.co/post/microservices-in-a-high-load-project/&quot;&gt;Microservices in a High-Load Project&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;我将告诉大家我们是如何开始一个高负载微服务项目的。在讲述我们的经历之前，先让我们简单地自我介绍一下。&lt;/p&gt;
&lt;p&gt;简单地说，我们从事视频输出方面的工作——我们提供实时的视频。我们负责“NTV-Plus”和“Match TV”频道的视频平台。该平台有30万的并发用户，每小时输出300TB的内容。这是一个很有意思的任务。那么我们是如何做到的呢？&lt;/p&gt;
&lt;p&gt;这背后都有哪些故事？这些故事都是关于项目的开发和成长，关于我们对项目的思考。总而言之，是关于如何提升项目的伸缩能力，承受更大的负载，在不宕机和不丢失关键特性的情况下为客户提供更多的功能。我们总是希望能够满足客户的需求。当然，这也涉及到我们是如何实现这一切，以及这一切是如何开始的。&lt;/p&gt;
    
    </summary>
    
      <category term="微服务" scheme="http://icyxp.github.io/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    
      <category term="微服务" scheme="http://icyxp.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="microservice" scheme="http://icyxp.github.io/tags/microservice/"/>
    
      <category term="高负载" scheme="http://icyxp.github.io/tags/%E9%AB%98%E8%B4%9F%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>微服务，够了</title>
    <link href="http://icyxp.github.io//blog/2017/07/microservice-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%A4%9F%E4%BA%86.html"/>
    <id>http://icyxp.github.io//blog/2017/07/microservice-微服务够了.html</id>
    <published>2017-07-26T13:00:00.000Z</published>
    <updated>2017-07-26T14:00:54.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;/images/ms/01/cover.png&quot; alt=&quot;01&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;  资深架构师&lt;a href=&quot;https://twitter.com/aadrake&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Adam Drake&lt;/a&gt;在他的博客上分享了他对微服务的看法,他 从自己的经验出发,结合Martin Fowler对微服务的见解,帮助想要采用 微服务的公司重新审视微服务。以下内容已获得作者翻译授权,查看英文 原文 &lt;a href=&quot;https://aadrake.com/posts/2017-05-20-enough-with-the-microservices.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Enough with the microservices&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;  关于微服务的优势和劣势已经有过太多的讨论,不过我仍然看到很多 成长型初创公司对它进行着盲目崇拜。冒着“重复发明轮子”的风险(Martin Fowler已经写过“Microservice Premium”的文章),我想把我的一些 想法写下来,在必要的时候可以发给客户,也希望能够帮助人们避免犯下我之前见过的那些错误。在进行架构或技术选型时,将网络上找到的一些所谓的最佳实践文章作为指南,一旦做出了错误的决定,就要付出惨重的代价。如果能够帮助哪怕一个公司避免犯下这种错误,那么写这篇文章都是值得的。&lt;/p&gt;
&lt;p&gt;  如今微服务是个热门技术,微服务架构一直以来都存在(面向服务架构也算是吧?),但对于我所见过的大部分公司来说,微服务不仅浪费了他们的时间,分散了他们的注意力,而且让事情变得更糟糕。&lt;/p&gt;
&lt;p&gt;  这听起来似乎很奇怪,因为大部分关于微服务的文章都会肯定微服务 的各种好处,比如解耦系统、更好的伸缩性、消除开发团队之间的依赖, 等等。如果你的公司有 Uber、Airbnb、Facebook 或 Twitter 那样的规模, 那么就没有什么问题。我曾经帮助一些大型组织转型到微服务架构,包括 搭建消息系统和采用一些能够提升伸缩性的技术。不过,对于成长型初创 公司来说,很少需要这些技术和服务。&lt;/p&gt;
&lt;p&gt;  Russ Miles在他的《&lt;a href=&quot;http://www.russmiles.com/essais/8-ways-to-lose-at-microservices-adoption&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;让微服务失效的八种方式&lt;/a&gt;》这篇文章中表达了 他的首要观点,而在我看来,这些场景却到处可见。成长型初创公司总是 想模仿那些大公司的最佳实践,用它们来弥补自身的不足。但是,最佳实 践是要视情况而定的。有些东西对于 Facebook 来说是最佳实践,但对于 只有不到百人的初创公司来说,它们就不一定也是最佳实践。&lt;/p&gt;
&lt;p&gt;  如果你的公司比那些大公司小一些,在一定程度上你仍然能够从微服务架构中获益。但是,对于成长型初创公司来说,大规模地迁移到微服务是一种过错,而且对技术人来说是不公平的。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;为什么选择微服务&quot;&gt;&lt;a href=&quot;#为什么选择微服务&quot; class=&quot;headerlink&quot; title=&quot;为什么选择微服务?&quot;&gt;&lt;/a&gt;为什么选择微服务?&lt;/h2&gt;&lt;p&gt;  一般来说,成长型初创公司采用微服务架构最主要的目的为了减少或消除开发团队之间的依赖,或者提升系统处理大流量负载的能力(比如伸缩性)。开发人员经常抱怨的问题和常见的症状包括合并冲突、由未完整实现的功能引起的部署错误以及伸缩性问题。接下来让我们逐个说明这些问题。&lt;/p&gt;
&lt;h2 id=&quot;依赖&quot;&gt;&lt;a href=&quot;#依赖&quot; class=&quot;headerlink&quot; title=&quot;依赖&quot;&gt;&lt;/a&gt;依赖&lt;/h2&gt;&lt;p&gt;  在初创公司的早期阶段,开发团队规模不大,使用的技术也很简单。人们在一起工作,不会出现混乱,要实现一些功能也比较快。一切看起来都很美好。&lt;/p&gt;
&lt;p&gt;  随着公司的不断发展,开发团队也在壮大,代码库也在增长,然后就出现了多个团队在同一个代码库上工作的情况。这些团队的大部分成员都是公司早期的员工。因为初创公司的早期员工一般都是初级开发人员,他们并没有意识到一个问题,那就是在团队规模增长和代码库增长的同时,沟通效率也需要随之提升。对于缺乏经验的技术人员来说,他们倾向于通过技术问题来解决人的问题,并希望通过微服务来减少开发团队之间的依赖和耦合。&lt;/p&gt;
&lt;p&gt;  实际上,他们真正需要做的是通过有效的沟通来解决人的问题。当一个初创公司有多个开发团队时,团队之间需要协调,团队成员需要知道每个人都在做什么,他们需要协作。在这样规模的企业里,软件开发其实具备了社交的性质。如果团队之间缺乏沟通或者缺乏信息分享,不管用不用微服务,一样存在依赖问题,而就算使用了微服务,也仍然存在负面的技术问题。&lt;/p&gt;
&lt;p&gt;  将代码模块化作为解决这个问题的技术方案,确实能够缓解软件开发固有的团队依赖问题,但团队间的沟通仍然要随着团队规模的增长而不断改进。&lt;/p&gt;
&lt;p&gt;  不要混淆了解耦和分布式二者的含义。由模块和接口组成的单体可以帮助你达到解耦的目的,而且你也应该这么做。你没有必要把应用程序拆分成分布式的多个独立服务,在模块间定义清晰的接口同样能达到解耦的目的。&lt;/p&gt;
&lt;h2 id=&quot;部分功能实现&quot;&gt;&lt;a href=&quot;#部分功能实现&quot; class=&quot;headerlink&quot; title=&quot;部分功能实现&quot;&gt;&lt;/a&gt;部分功能实现&lt;/h2&gt;&lt;p&gt;  微服务里需要用到&lt;a href=&quot;https://en.wikipedia.org/wiki/Feature_toggle&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;功能标志&lt;/a&gt; (feature flag),微服务开发人员需要熟悉这种技术。特别是在进行快速开发(下面会深入讨论)的时候,你可能需要部署一些功能,这些功能在某些平台上还没有实现,或者前端已经完全实现,但后端还没有。随着公司的发展,部署和运维系统变得越来越自动化和复杂,功能标志也变得越来越重要。&lt;/p&gt;
&lt;h2 id=&quot;水平伸缩&quot;&gt;&lt;a href=&quot;#水平伸缩&quot; class=&quot;headerlink&quot; title=&quot;水平伸缩&quot;&gt;&lt;/a&gt;水平伸缩&lt;/h2&gt;&lt;p&gt;  通过部署同一个微服务的多个实例来获得伸缩性,这是微服务的优点 之一。不过,大多数过早采用微服务的公司在这些微服务背后使用了同一 个存储系统。也就是说,这些服务具备了伸缩性,但整个应用并不具备伸 缩性。如果你正打算使用这样的伸缩方式,那为什么不直接在负载均衡器 后面部署多个单体实例呢?你可以用更简单的方式达到相同的目的。再者, 水平伸缩应该被作为杀手锏来使用。你首先要关注的应该是如何提升应用 程序的性能。一些简单的优化常常能带来数百倍的性能提升,这里也包括 如何正确地使用其他服务。例如,我在一篇博文里提到的&lt;a href=&quot;https://aadrake.com/posts/2017-05-15-redis-performance-triage-handbook.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redis性能诊断&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;我们为微服务做好准备了吗&quot;&gt;&lt;a href=&quot;#我们为微服务做好准备了吗&quot; class=&quot;headerlink&quot; title=&quot;我们为微服务做好准备了吗?&quot;&gt;&lt;/a&gt;我们为微服务做好准备了吗?&lt;/h2&gt;&lt;p&gt;  在讨论架构选型时,人们经常会忽略这个问题,但其实却是最重要的。 高级技术人员在了解了开发人员或业务人员的抱怨或痛点之后,在网上找 寻找解决方案,他们总是宣称能解决这些问题。但在这些信誓旦旦的观点 背后,有很多需要注意的地方。微服务有利也有弊。如果你的企业足够成 熟,并且具有一定的技术积累,那么采用微服务所面临的挑战会小很多, 并且能够带来更多正面好处。那么怎样才算已经为微服务做好准备了呢? Martin Fowler在多年前表达了他对&lt;a href=&quot;https://martinfowler.com/bliki/MicroservicePrerequisites.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;微服务先决条件&lt;/a&gt;的看法,但是从我的 经验来看,大多数成长型初创公司完全忽略了他的观点。Martin 的观点 是一个很好的切入点,让我们来逐个说明。&lt;/p&gt;
&lt;p&gt;  我敢说,大部分成长型初创公司几乎连一个先决条件都无法满足,更不用说满足所有的条件了。如果你的技术团队不具备快速配置、部署和监控能力,那么在迁移到微服务前必须先获得这些能力。接下来让我们更详细地讨论这些先决条件。&lt;/p&gt;
&lt;h2 id=&quot;快速配置&quot;&gt;&lt;a href=&quot;#快速配置&quot; class=&quot;headerlink&quot; title=&quot;快速配置&quot;&gt;&lt;/a&gt;快速配置&lt;/h2&gt;&lt;p&gt;  如果你的开发团队里只有少数几个人可以配置新服务、虚拟环境或其 他配套设施,那说明你们还没有为微服务做好准备。你的每个团队里都应 该要有几个这样的人,他们具备了配置基础设施和部署服务的能力,而且 不需要求助于外部。要注意,光是有一个 DevOps 团队并不意味着你在实 施 DevOps。开发人员应该参与管理与应用程序相关的组件,包括基础设施。&lt;/p&gt;
&lt;p&gt;  类似的,如果你没有灵活的基础设施(易于伸缩并且可以由团队里的不同人员来管理)来支撑当前的架构,那么在迁移到微服务前必须先解决这个问题。你当然可以在裸机上运行微服务,以更低的成本获得出众的性能,但在服务的运维和部署方面也必须具备灵活性。&lt;/p&gt;
&lt;h2 id=&quot;基本的监控&quot;&gt;&lt;a href=&quot;#基本的监控&quot; class=&quot;headerlink&quot; title=&quot;基本的监控&quot;&gt;&lt;/a&gt;基本的监控&lt;/h2&gt;&lt;p&gt;  如果你不曾对你的单体应用进行过性能监控,那么在迁移到微服务时, 你的日子会很难过。你需要熟悉系统级别的度量指标(比如 CPU 和内存)、 应用级别的度量指标(比如端点的请求延迟或端点的错误)和业务级别的 度量指标(比如每秒事务数或每秒收益),这样才可以更好地理解系统的 性能。在性能方面,微服务生态系统比单体系统要复杂得多,就更不用提 诊断问题的复杂性了。你可以搭建一个监控系统(如 Prometheus),在 将单体应用拆分成微服务之前对应用做一些增强,以便进行监控。&lt;/p&gt;
&lt;h2 id=&quot;快速部署&quot;&gt;&lt;a href=&quot;#快速部署&quot; class=&quot;headerlink&quot; title=&quot;快速部署&quot;&gt;&lt;/a&gt;快速部署&lt;/h2&gt;&lt;p&gt;  如果你的单体系统没有一个很好的持续集成流程和部署系统,那么要 集成和部署好你的微服务几乎是件不可能的事。想象一下这样的场景:10 个团队和 100 个服务,它们都需要进行手动测试和部署,然后再将这些工 作与测试和部署一个单体所需要的工作进行对比。100 个服务会出现多少 种问题?而单体系统呢?这些先决条件很好地说明了微服务的复杂性。&lt;/p&gt;
&lt;p&gt;  Phil Calcado在Fowler的先决条件清单里添加了一些东西,不过我 认为它们更像是重要的扩展,而不是真正的先决条件。&lt;/p&gt;
&lt;h2 id=&quot;如果我们具备了这些先决条件呢&quot;&gt;&lt;a href=&quot;#如果我们具备了这些先决条件呢&quot; class=&quot;headerlink&quot; title=&quot;如果我们具备了这些先决条件呢?&quot;&gt;&lt;/a&gt;如果我们具备了这些先决条件呢?&lt;/h2&gt;&lt;p&gt;  就算具备了这些条件,仍然需要注意微服务的负面因素,确保微服务能够为你的业务带来真正的价值。事实上,很多技术人员对微服务中存在的&lt;a href=&quot;https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;分布式计算谬论&lt;/a&gt;视而不见,但为了确保能够成功,这些问题是必须要考虑到的。对于大部分成长型初创公司来说,基于各种原因,他们应该避免使用微服务。&lt;/p&gt;
&lt;h2 id=&quot;运营成本的增加&quot;&gt;&lt;a href=&quot;#运营成本的增加&quot; class=&quot;headerlink&quot; title=&quot;运营成本的增加&quot;&gt;&lt;/a&gt;运营成本的增加&lt;/h2&gt;&lt;p&gt;  快速部署这一先决条件已经涵盖了一部分成本,除此之外,对 微服务进行容器化(可能使用 Docker)和使用容器编排系统(比如 Kubernetes)也需要耗费很多成本。Docker 和 Kubernetes 都是很优秀的 技术,但是对于大部分成长型初创公司来说,它们都是一种负担。我见过 初创公司使用 rsync 作为部署和编排工具,我也见过很多的初创公司陷入 运维工具的复杂性泥潭里,他们因此浪费了很多时间,而这些时间本来可 以用于为用户开发更多的功能。&lt;/p&gt;
&lt;h2 id=&quot;你的应用会被拖慢&quot;&gt;&lt;a href=&quot;#你的应用会被拖慢&quot; class=&quot;headerlink&quot; title=&quot;你的应用会被拖慢&quot;&gt;&lt;/a&gt;你的应用会被拖慢&lt;/h2&gt;&lt;p&gt;  如果你的单体系统里包含了多个模块,并且在模块间定义了良好的 API,那么 API 之间的交互就几乎没有什么额外开销。但对于微服务来说 就不是这么一回事了,因为它们一般运行在不同的机器上,它们之间需要 通过网络进行交互。这样会在一定程度上拖慢整个系统。如果一个请求需 要多个服务进行同步交互,那么情况会变得更加糟糕。我曾经工作过的一 个公司,他们需要调用将近 10 个服务才能处理完某些请求。处理请求的 每一个步骤都需要额外的网络开销和延迟,但实际上,他们可以把这些服 务放在单个软件包里,按照不同的模块来区分,或者把它们设计成异步的。这样可以为他们节省大量的基础设施成本。&lt;/p&gt;
&lt;h2 id=&quot;本地开发变得更加困难&quot;&gt;&lt;a href=&quot;#本地开发变得更加困难&quot; class=&quot;headerlink&quot; title=&quot;本地开发变得更加困难&quot;&gt;&lt;/a&gt;本地开发变得更加困难&lt;/h2&gt;&lt;p&gt;  如果你有一个单体应用,后端只有一个数据库,那么在开发过程中, 在本地运行这个应用是很容易的。如果你有 100 个服务,并使用了多个数 据存储系统,而且它们之间互相依赖,那么本地开发就会变成一个噩梦。即使是 Docker 也无法把你从这种复杂性泥潭中拯救出来。虽然事情原本 可以简单一些,不过仍然需要处理依赖问题。理论上说,微服务不存在这 些问题,因为微服务被认为是相互独立的。不过,对于成长型初创公司来说,就不是这么一回事了。技术人员一般需要在本地运行所有(或者几乎 所有)的服务才能进行新功能的开发和测试。这种复杂性是对资源的巨大浪费。&lt;/p&gt;
&lt;h2 id=&quot;难以伸缩&quot;&gt;&lt;a href=&quot;#难以伸缩&quot; class=&quot;headerlink&quot; title=&quot;难以伸缩&quot;&gt;&lt;/a&gt;难以伸缩&lt;/h2&gt;&lt;p&gt;  对单体系统进行伸缩的最简单方式是在负载均衡器后面部署单体系 统的多个实例。在流量增长的情况下,这是一种非常简单的伸缩方式, 而且从运维角度来讲,它的复杂性是最低的。你的系统在编排平台(如 &lt;a href=&quot;https://aws.amazon.com/cn/elasticbeanstalk/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Elastic Beanstalk&lt;/a&gt;)上运行的时间越长越好,你和你的团队就可以集中 精力开发客户需要的东西,而不是忙于解决部署管道问题。使用合适的 CI/CD 系统可以缓解这个问题,但在微服务生态系统里,事情要复杂得多, 而且这些复杂性所造成的麻烦已经超过了它们所能带来的好处。&lt;/p&gt;
&lt;h2 id=&quot;然后呢&quot;&gt;&lt;a href=&quot;#然后呢&quot; class=&quot;headerlink&quot; title=&quot;然后呢?&quot;&gt;&lt;/a&gt;然后呢?&lt;/h2&gt;&lt;p&gt;  如果你刚好身处一个成长型初创公司里,需要对架构做一些调整,而微服务似乎不能解决你的问题,这个时候应该怎么办?&lt;/p&gt;
&lt;p&gt;  Fowler 提出的先决条件可以说是技术领域的&lt;a href=&quot;https://en.wikipedia.org/wiki/Capability_Maturity_Model&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;能力成熟度模型&lt;/a&gt;, Fowler 在他的文章里对成熟度模型进行过介绍。如果这种成熟度模型对于公司来说是说得通的,那么我们可以按照 Fowler 提出的先决条件,并使用其他的一些中间步骤为向微服务迁移做好准备。下面的内容引用自 Fowler 的文章。&lt;/p&gt;
&lt;p&gt;  关键是你要认识到,成熟度模型的评估结果并不代表你的当前水平,它们只是在告诉你需要做哪些工作才能朝着改进的目标前进。你当前的水平只是一种中间工作,用于确定下一步该获得什么样的技能。&lt;/p&gt;
&lt;p&gt;  那么,我们该做出怎样的改进,以及如何达成这些目标?我们需要经过一些简单的步骤,其中前面两步就可以解决很多在向微服务迁移过程中会出现的问题,而且不会带来相关的复杂性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;清理应用程序。确保应用程序具有良好的自动化测试套件,并使 用了最新版本的软件包、框架和编程语言。&lt;/li&gt;
&lt;li&gt;重构应用程序,把它拆分成多个模块,为模块定义清晰的API。不 要让外部代码直接触及模块内部,所有的交互都应该通过模块提 供的API来进行。&lt;/li&gt;
&lt;li&gt;从应用程序中选择一个模块,并把它拆分成独立的应用程序,部 署在相同的主机上。你可以从中获得一些好处,而不会带来太多 的运维麻烦。不过,你仍然需要解决这两个应用之间的交互问 题,虽然它们都部署在同一个主机上。不过你可以无视微服务架 构里固有的网络分区问题和分布式系统的可用性问题。&lt;/li&gt;
&lt;li&gt;把独立出来的模块移动到不同的主机上。现在,你需要处理跨网 络交互问题,不过这样可以让这两个系统之间的耦合降得更低。&lt;/li&gt;
&lt;li&gt;如果有可能,可以重构数据存储系统,让另一个主机上的模块负 责自己的数据存储。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在我所见过的公司里,如果他们能够完成前面两个步骤就算万事大吉了。如果他们能够完成前面两个步骤,那么剩下的步骤一般不会像他们最初想象的那么重要了。如果你决定在这个过程的某个点上停下来,而系统仍然具有可维护性和比刚开始时更好的状态,那么就再好不过了。&lt;/p&gt;
&lt;h2 id=&quot;结尾&quot;&gt;&lt;a href=&quot;#结尾&quot; class=&quot;headerlink&quot; title=&quot;结尾&quot;&gt;&lt;/a&gt;结尾&lt;/h2&gt;&lt;p&gt;  我不能说这些想法都是独一无二的,也不能说是我所独有的。我只是 从其他遭遇了相同问题的人那里收集想法,并连同观察到的现象在这里作 了一次总结。还有其他很多比我更有经验的人也写过这方面的文章,他们 剖析地更加深入,比如Sander Mak写的有关模块和&lt;a href=&quot;https://www.oreilly.com/ideas/modules-vs-microservices&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;微服务的文章&lt;/a&gt;。不管 怎样,对于正在考虑对他们的未来架构做出调整的公司来说,这些经验都 是非常重要的。认真地思考每一个问题,确保微服务对你们的组织来说是 一个正确的选择。&lt;/p&gt;
&lt;p&gt;  最起码在完成了上述的前面两个步骤之后,再慎重考虑一下微服务对于你的组织来说是否是正确的方向。你之前的很多问题可能会迎刃而解。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/ms/01/cover.png&quot; alt=&quot;01&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;  资深架构师&lt;a href=&quot;https://twitter.com/aadrake&quot;&gt;Adam Drake&lt;/a&gt;在他的博客上分享了他对微服务的看法,他 从自己的经验出发,结合Martin Fowler对微服务的见解,帮助想要采用 微服务的公司重新审视微服务。以下内容已获得作者翻译授权,查看英文 原文 &lt;a href=&quot;https://aadrake.com/posts/2017-05-20-enough-with-the-microservices.html&quot;&gt;Enough with the microservices&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;  关于微服务的优势和劣势已经有过太多的讨论,不过我仍然看到很多 成长型初创公司对它进行着盲目崇拜。冒着“重复发明轮子”的风险(Martin Fowler已经写过“Microservice Premium”的文章),我想把我的一些 想法写下来,在必要的时候可以发给客户,也希望能够帮助人们避免犯下我之前见过的那些错误。在进行架构或技术选型时,将网络上找到的一些所谓的最佳实践文章作为指南,一旦做出了错误的决定,就要付出惨重的代价。如果能够帮助哪怕一个公司避免犯下这种错误,那么写这篇文章都是值得的。&lt;/p&gt;
&lt;p&gt;  如今微服务是个热门技术,微服务架构一直以来都存在(面向服务架构也算是吧?),但对于我所见过的大部分公司来说,微服务不仅浪费了他们的时间,分散了他们的注意力,而且让事情变得更糟糕。&lt;/p&gt;
&lt;p&gt;  这听起来似乎很奇怪,因为大部分关于微服务的文章都会肯定微服务 的各种好处,比如解耦系统、更好的伸缩性、消除开发团队之间的依赖, 等等。如果你的公司有 Uber、Airbnb、Facebook 或 Twitter 那样的规模, 那么就没有什么问题。我曾经帮助一些大型组织转型到微服务架构,包括 搭建消息系统和采用一些能够提升伸缩性的技术。不过,对于成长型初创 公司来说,很少需要这些技术和服务。&lt;/p&gt;
&lt;p&gt;  Russ Miles在他的《&lt;a href=&quot;http://www.russmiles.com/essais/8-ways-to-lose-at-microservices-adoption&quot;&gt;让微服务失效的八种方式&lt;/a&gt;》这篇文章中表达了 他的首要观点,而在我看来,这些场景却到处可见。成长型初创公司总是 想模仿那些大公司的最佳实践,用它们来弥补自身的不足。但是,最佳实 践是要视情况而定的。有些东西对于 Facebook 来说是最佳实践,但对于 只有不到百人的初创公司来说,它们就不一定也是最佳实践。&lt;/p&gt;
&lt;p&gt;  如果你的公司比那些大公司小一些,在一定程度上你仍然能够从微服务架构中获益。但是,对于成长型初创公司来说,大规模地迁移到微服务是一种过错,而且对技术人来说是不公平的。&lt;/p&gt;
    
    </summary>
    
      <category term="微服务" scheme="http://icyxp.github.io/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    
      <category term="微服务" scheme="http://icyxp.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="microservice" scheme="http://icyxp.github.io/tags/microservice/"/>
    
  </entry>
  
  <entry>
    <title>MySQL性能监控慢日志分析利器</title>
    <link href="http://icyxp.github.io//blog/2017/07/mysql-mysql-performance-monitoring.html"/>
    <id>http://icyxp.github.io//blog/2017/07/mysql-mysql-performance-monitoring.html</id>
    <published>2017-07-26T12:30:00.000Z</published>
    <updated>2017-07-26T13:08:16.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;入题之前先讲讲为什么写这篇文章，这就不得不提起MySQL与percona，阿里基于mysql开发了AliSQL，写这篇文章的时候阿里已经将其开源，percona是一家领先的MySQL咨询公司，该公司基于mysql开发了Percona Server，Percona Server是一款独立的数据库产品，为用户提供了换出其MySQL安装并换入Percona Server产品的能力。percona除了开发了多款数据库产品，还开发了数据库监控程序：pmm（Percona Monitoring and Management）服务器，我们都知道mysql自身缺乏实时的监控功能，而此时pmm-server就恰好解决了我们这一难题，好了废话不多说，先看一张pmm server的监控图。&lt;br&gt;&lt;img src=&quot;/images/mysql_pmm_1.png&quot; alt=&quot;PMM&quot;&gt;&lt;/p&gt;
&lt;p&gt;常规的监测项目都有了，最吸引我的一点在于它的慢日志分析功能，如下图所示：&lt;br&gt;&lt;img src=&quot;/images/mysql_pmm_2.png&quot; alt=&quot;PMM&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;安装步骤&quot;&gt;&lt;a href=&quot;#安装步骤&quot; class=&quot;headerlink&quot; title=&quot;安装步骤&quot;&gt;&lt;/a&gt;安装步骤&lt;/h2&gt;&lt;h3 id=&quot;1-在vmware或者virtualbox上安装ubuntu14-04-Server镜像，可以选择清华大学的镜像，下载速度快&quot;&gt;&lt;a href=&quot;#1-在vmware或者virtualbox上安装ubuntu14-04-Server镜像，可以选择清华大学的镜像，下载速度快&quot; class=&quot;headerlink&quot; title=&quot;1. 在vmware或者virtualbox上安装ubuntu14.04 Server镜像，可以选择清华大学的镜像，下载速度快&quot;&gt;&lt;/a&gt;1. 在vmware或者virtualbox上安装ubuntu14.04 Server镜像，可以选择清华大学的镜像，下载速度快&lt;/h3&gt;&lt;h3 id=&quot;2-系统装完后接下来就要在ubuntu上安装docker了，执行命令：&quot;&gt;&lt;a href=&quot;#2-系统装完后接下来就要在ubuntu上安装docker了，执行命令：&quot; class=&quot;headerlink&quot; title=&quot;2. 系统装完后接下来就要在ubuntu上安装docker了，执行命令：&quot;&gt;&lt;/a&gt;2. 系统装完后接下来就要在ubuntu上安装docker了，执行命令：&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl &lt;span class=&quot;_&quot;&gt;-s&lt;/span&gt;SL https://get.daocloud.io/docker | sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;等待完成即可，这是一种安装docker比较快的方式，而且安装的docker版本也比较高，安装完成后输入docker -v看到下面信息说明安装完成：&lt;br&gt;&lt;code&gt;Docker version 17.04.0-ce, build 4845c56&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-安装完docker，接下来就需要下载pmm-server的镜像，由于下载国外镜像速度慢而且网络不稳定，这里推荐一个中科大的开源docker镜像：&quot;&gt;&lt;a href=&quot;#3-安装完docker，接下来就需要下载pmm-server的镜像，由于下载国外镜像速度慢而且网络不稳定，这里推荐一个中科大的开源docker镜像：&quot; class=&quot;headerlink&quot; title=&quot;3. 安装完docker，接下来就需要下载pmm server的镜像，由于下载国外镜像速度慢而且网络不稳定，这里推荐一个中科大的开源docker镜像：&quot;&gt;&lt;/a&gt;3. 安装完docker，接下来就需要下载pmm server的镜像，由于下载国外镜像速度慢而且网络不稳定，这里推荐一个中科大的开源docker镜像：&lt;/h3&gt;&lt;p&gt;在 Docker 的启动参数中加入:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;--registry-mirror=https://docker.mirrors.ustc.edu.cn&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Ubuntu 用户（包括使用 systemd 的 Ubuntu 15.04）可以修改 /etc/default/docker 文件，加入如下参数：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DOCKER_OPTS=&lt;span class=&quot;string&quot;&gt;&quot;--registry-mirror=https://docker.mirrors.ustc.edu.cn&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其他 systemd 用户可以通过执行 sudo systemctl edit docker.service 来修改设置, 覆盖默认的启动参数:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[Service]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ExecStart=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ExecStart=/usr/bin/docker &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; -H fd:// --registry-mirror=https://docker.mirrors.ustc.edu.cn&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;4-接下来下载pmm镜像的速度就会大大提升，执行下面命令：&quot;&gt;&lt;a href=&quot;#4-接下来下载pmm镜像的速度就会大大提升，执行下面命令：&quot; class=&quot;headerlink&quot; title=&quot;4. 接下来下载pmm镜像的速度就会大大提升，执行下面命令：&quot;&gt;&lt;/a&gt;4. 接下来下载pmm镜像的速度就会大大提升，执行下面命令：&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker pull percona/pmm-server:1.2.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后等待完成即可。&lt;/p&gt;
&lt;h3 id=&quot;5-创建PMM-数据容器：&quot;&gt;&lt;a href=&quot;#5-创建PMM-数据容器：&quot; class=&quot;headerlink&quot; title=&quot;5. 创建PMM 数据容器：&quot;&gt;&lt;/a&gt;5. 创建PMM 数据容器：&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker create \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   -v /opt/prometheus/data \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   -v /opt/consul-data \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   -v /var/lib/mysql \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   -v /var/lib/grafana \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   --name pmm-data \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   percona/pmm-server:1.2.0 /bin/&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;6-运行PMM-server容器&quot;&gt;&lt;a href=&quot;#6-运行PMM-server容器&quot; class=&quot;headerlink&quot; title=&quot;6. 运行PMM server容器:&quot;&gt;&lt;/a&gt;6. 运行PMM server容器:&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   -p 80:80 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   --volumes-from pmm-data \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   --name pmm-server \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   --restart always \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   percona/pmm-server:1.2.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;7-安装PMM客户端：&quot;&gt;&lt;a href=&quot;#7-安装PMM客户端：&quot; class=&quot;headerlink&quot; title=&quot;7. 安装PMM客户端：&quot;&gt;&lt;/a&gt;7. 安装PMM客户端：&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rpm -ivh https://www.percona.com/downloads/pmm-client/pmm-client-1.2.0/binary/redhat/7/x86_64/pmm-client-1.2.0-1.x86_64.rpm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;8-连接PMM服务器：&quot;&gt;&lt;a href=&quot;#8-连接PMM服务器：&quot; class=&quot;headerlink&quot; title=&quot;8. 连接PMM服务器：&quot;&gt;&lt;/a&gt;8. 连接PMM服务器：&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pmm-admin config --server pmm服务器主机地址&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;9-配置mysql监控：&quot;&gt;&lt;a href=&quot;#9-配置mysql监控：&quot; class=&quot;headerlink&quot; title=&quot;9. 配置mysql监控：&quot;&gt;&lt;/a&gt;9. 配置mysql监控：&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pmm-admin add mysql --user root --password 123456 --host mysql ip地址 --port 3306 instace3306&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;注：pmm-client收的监控数据来源有这么几方面&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL所在机器的系统指标&lt;/li&gt;
&lt;li&gt;MySQL的performance_schema库&lt;/li&gt;
&lt;li&gt;slow-log(慢查询日志–mysql要开启慢日志功能)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;如果我们想收集a和c中的指标的话，最好还是将pmm-client部署在MySQL所在机器&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;10-至此访问pmm服务器ip地址即可查看接口&quot;&gt;&lt;a href=&quot;#10-至此访问pmm服务器ip地址即可查看接口&quot; class=&quot;headerlink&quot; title=&quot;10. 至此访问pmm服务器ip地址即可查看接口&quot;&gt;&lt;/a&gt;10. 至此访问pmm服务器ip地址即可查看接口&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;入题之前先讲讲为什么写这篇文章，这就不得不提起MySQL与percona，阿里基于mysql开发了AliSQL，写这篇文章的时候阿里已经将其开源，percona是一家领先的MySQL咨询公司，该公司基于mysql开发了Percona Server，Percona Server是一款独立的数据库产品，为用户提供了换出其MySQL安装并换入Percona Server产品的能力。percona除了开发了多款数据库产品，还开发了数据库监控程序：pmm（Percona Monitoring and Management）服务器，我们都知道mysql自身缺乏实时的监控功能，而此时pmm-server就恰好解决了我们这一难题，好了废话不多说，先看一张pmm server的监控图。&lt;br&gt;&lt;img src=&quot;/images/mysql_pmm_1.png&quot; alt=&quot;PMM&quot;&gt;&lt;/p&gt;
&lt;p&gt;常规的监测项目都有了，最吸引我的一点在于它的慢日志分析功能，如下图所示：&lt;br&gt;&lt;img src=&quot;/images/mysql_pmm_2.png&quot; alt=&quot;PMM&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://icyxp.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://icyxp.github.io/tags/mysql/"/>
    
      <category term="性能监控" scheme="http://icyxp.github.io/tags/%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7/"/>
    
      <category term="慢日志分析" scheme="http://icyxp.github.io/tags/%E6%85%A2%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>MySQL too many connection 问题分析</title>
    <link href="http://icyxp.github.io//blog/2016/09/mysql-mysql-sleep.html"/>
    <id>http://icyxp.github.io//blog/2016/09/mysql-mysql-sleep.html</id>
    <published>2016-09-29T11:00:00.000Z</published>
    <updated>2016-09-29T11:40:27.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;问题缘由&quot;&gt;&lt;a href=&quot;#问题缘由&quot; class=&quot;headerlink&quot; title=&quot;问题缘由&quot;&gt;&lt;/a&gt;问题缘由&lt;/h2&gt;&lt;p&gt;线上一个网站在运行一段时间后，页面打开速度变慢随之出现&lt;code&gt;502 bad gateway&lt;/code&gt;的错误。&lt;/p&gt;
&lt;h2 id=&quot;问题分析&quot;&gt;&lt;a href=&quot;#问题分析&quot; class=&quot;headerlink&quot; title=&quot;问题分析&quot;&gt;&lt;/a&gt;问题分析&lt;/h2&gt;&lt;p&gt;由&lt;code&gt;502 bad gateway&lt;/code&gt;的错误，我们知道就是nginx链接后端的php，而php程序没有及时返回，造成了超时。&lt;br&gt;那么造成php超时的原因也有多种，比如：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;php-fpm资源消耗光&lt;/li&gt;
&lt;li&gt;调用外部资源超时，比如外部的web service、数据库等等&lt;/li&gt;
&lt;li&gt;….&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;出现问题，我们先登录服务器查看相关日志。&lt;/p&gt;
&lt;p&gt;结合我们的业务，首先想到了mysql数据库，先查看了一下mysql数据库的状态，通过show full processlist命令发现有大量的链接处于sleep状态。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sleep&lt;/code&gt;状态的意思就是说，某个客户端一直占着这个链接，但是什么事也不干，或者是客户端压根儿就已经断开了，而服务端却不知道。&lt;/p&gt;
&lt;p&gt;我们知道，mysql的连接数是有限制的，比如默认是151个，那么当大量的链接处于sleep状态时，php程序就无法同mysql建立链接，就会发生超时现象。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;那么造成sleep的原因，有三个，下面是mysql手册给出的解释：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;客户端程序在退出之前没有调用&lt;code&gt;mysql_close()&lt;/code&gt;。[写程序的疏忽，或者数据库的db类库没有自动关闭每次的连接。。。]&lt;/li&gt;
&lt;li&gt;客户端sleep的时间在&lt;code&gt;wait_timeout&lt;/code&gt;或&lt;code&gt;interactive_timeout&lt;/code&gt;规定的秒内没有发出任何请求到服务器. [类似常连，类似于不完整的tcp ip协议构造，服务端一直认为客户端仍然存在（有可能客户端已经断掉了）]&lt;/li&gt;
&lt;li&gt;客户端程序在结束之前向服务器发送了请求还没得到返回结果就结束掉了。 [参看：tcp ip协议的三次握手]&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那么知道了问题所在，就要找到是什么原因导致的sleep线程的存在，&lt;/p&gt;
&lt;p&gt;通过上面的信息，我们知道是 192.168.1.2这个IP的20318端口和mysql建立的链接，而192.168.1.2正是我们的web服务器，&lt;/p&gt;
&lt;p&gt;于是ssh登录服务器，通过&lt;code&gt;netstat -tunp&lt;/code&gt;找到端口20318所对应的进程和pid，一看就是php-fpm引起的。&lt;/p&gt;
&lt;p&gt;下面就是要看一下这个php-fpm是调用的哪一个php文件，找到了具体的php文件就好办了。&lt;/p&gt;
&lt;p&gt;具体可以通过&lt;code&gt;lsof&lt;/code&gt;列出这个&lt;code&gt;pid&lt;/code&gt;打开的文件，也可以通过&lt;code&gt;strace&lt;/code&gt;跟踪进程的系统调用。&lt;/p&gt;
&lt;p&gt;下面是lsof的部分输出：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# lsof -p 23018&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;COMMAND   PID   USER   FD   TYPE     DEVICE     SIZE       NODE NAME&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;php-fpm 15687 daemon  cwd    DIR      104,2     4096   69437193 /xxx/daemon.php&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;php-fpm 15687 daemon  rtd    DIR      104,6     4096          2 /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;php-fpm 15687 daemon  txt    REG      104,5 27714205    3466635 /app/php/sbin/php-fpm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从中可以看到，是我们的&lt;code&gt;daemon.php&lt;/code&gt;引起的，这个程序是我们向ios设备推送通知的程序，其中要跟苹果（Apple）的服务器建立链接，可能是苹果服务器不稳定,超时引起的。&lt;/p&gt;
&lt;p&gt;程序大致流程：&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql_connect();  &lt;span class=&quot;comment&quot;&gt;//建立链接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$queryBid = mysql_query(&lt;span class=&quot;string&quot;&gt;&quot;select bundleId from apps&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ($row = mysql_fetch_assoc($queryBid)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//取出通知内容，连接苹果服务器，进行推送&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//这里有时候会花一二十分钟，此时mysql服务器那里的连接一直是sleep状态&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql_close();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;#解决方法&quot; class=&quot;headerlink&quot; title=&quot;解决方法&quot;&gt;&lt;/a&gt;解决方法&lt;/h2&gt;&lt;p&gt;方案一：修改的思路也很简单，我们先通过mysql把数据取出来，之后马上关掉mysql连接，释放mysql资源，剩下的就慢慢干好了。 修改后的程序是这样的：&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql_connect();  &lt;span class=&quot;comment&quot;&gt;//建立链接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$arr_bid=&lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$queryBid = mysql_query(&lt;span class=&quot;string&quot;&gt;&quot;select bundleId from apps&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;($row = mysql_fetch_assoc($queryBid)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	$arr_bid[] = $row;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql_close(); &lt;span class=&quot;comment&quot;&gt;//从mysql中取完数据就马上关闭连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;foreach&lt;/span&gt;($arr_bid &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; $row)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//取出通知内容，连接苹果服务器，进行推送&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//这里有时候会花一二十分钟&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;方案二：[不治本，有弊端]&lt;br&gt;写一个定时脚本，每分钟检查下mysql连接数，超过sleep时间的自动kill掉&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;define(&lt;span class=&quot;string&quot;&gt;&#39;MAX_SLEEP_TIME&#39;&lt;/span&gt;， &lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$hostname = &lt;span class=&quot;string&quot;&gt;&quot;localhost&quot;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$username = &lt;span class=&quot;string&quot;&gt;&quot;root&quot;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$password = &lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$connect = mysql_connect($hostname， $username， $password);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$result = mysql_query(&lt;span class=&quot;string&quot;&gt;&quot;SHOW PROCESSLIST&quot;&lt;/span&gt;， $connect);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ($proc = mysql_fetch_assoc($result)) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ($proc[&lt;span class=&quot;string&quot;&gt;&quot;Command&quot;&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&quot;Sleep&quot;&lt;/span&gt; &amp;amp;&amp;amp; $proc[&lt;span class=&quot;string&quot;&gt;&quot;Time&quot;&lt;/span&gt;] &amp;gt; MAX_SLEEP_TIME) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	@mysql_query(&lt;span class=&quot;string&quot;&gt;&quot;KILL &quot;&lt;/span&gt; . $proc[&lt;span class=&quot;string&quot;&gt;&quot;Id&quot;&lt;/span&gt;]， $connect);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql_close($connect);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;加入到crontab定时计划里&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;* * * * * php /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/sbin/&lt;span class=&quot;built_in&quot;&gt;kill&lt;/span&gt;-mysql-sleep-proc.php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;方案三：[不推荐]&lt;br&gt;修改mysql配置&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[mysqld]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;wait&lt;/span&gt;_timeout=10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#或者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; global &lt;span class=&quot;built_in&quot;&gt;wait&lt;/span&gt;_timeout=10;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题缘由&quot;&gt;&lt;a href=&quot;#问题缘由&quot; class=&quot;headerlink&quot; title=&quot;问题缘由&quot;&gt;&lt;/a&gt;问题缘由&lt;/h2&gt;&lt;p&gt;线上一个网站在运行一段时间后，页面打开速度变慢随之出现&lt;code&gt;502 bad gateway&lt;/code&gt;的错误。&lt;/p&gt;
&lt;h2 id=&quot;问题分析&quot;&gt;&lt;a href=&quot;#问题分析&quot; class=&quot;headerlink&quot; title=&quot;问题分析&quot;&gt;&lt;/a&gt;问题分析&lt;/h2&gt;&lt;p&gt;由&lt;code&gt;502 bad gateway&lt;/code&gt;的错误，我们知道就是nginx链接后端的php，而php程序没有及时返回，造成了超时。&lt;br&gt;那么造成php超时的原因也有多种，比如：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;php-fpm资源消耗光&lt;/li&gt;
&lt;li&gt;调用外部资源超时，比如外部的web service、数据库等等&lt;/li&gt;
&lt;li&gt;….&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;出现问题，我们先登录服务器查看相关日志。&lt;/p&gt;
&lt;p&gt;结合我们的业务，首先想到了mysql数据库，先查看了一下mysql数据库的状态，通过show full processlist命令发现有大量的链接处于sleep状态。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sleep&lt;/code&gt;状态的意思就是说，某个客户端一直占着这个链接，但是什么事也不干，或者是客户端压根儿就已经断开了，而服务端却不知道。&lt;/p&gt;
&lt;p&gt;我们知道，mysql的连接数是有限制的，比如默认是151个，那么当大量的链接处于sleep状态时，php程序就无法同mysql建立链接，就会发生超时现象。&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://icyxp.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://icyxp.github.io/tags/mysql/"/>
    
      <category term="sleep" scheme="http://icyxp.github.io/tags/sleep/"/>
    
      <category term="show full processlist" scheme="http://icyxp.github.io/tags/show-full-processlist/"/>
    
  </entry>
  
  <entry>
    <title>MaxScale 在 slave 有故障后如何处理？</title>
    <link href="http://icyxp.github.io//blog/2016/08/mysql-maxscale-02.html"/>
    <id>http://icyxp.github.io//blog/2016/08/mysql-maxscale-02.html</id>
    <published>2016-08-16T02:30:00.000Z</published>
    <updated>2016-08-16T02:12:34.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;之前介绍了 &lt;a href=&quot;/blog/2016/08/maxscale-01.html&quot;&gt;MaxScale&lt;/a&gt; 可以实现 Mysql 的读写分离和读负载均衡，那么当 slave 出现故障后，MaxScale 会如何处理呢？&lt;/p&gt;
&lt;p&gt;例如有 3 台数据库服务器，一主二从的结构，数据库名称分别为 master, slave1, slave2&lt;/p&gt;
&lt;p&gt;现在我们实验以下两种情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当一台从服务器（ slave1 或者 slave2 ）出现故障后，查看 MaxScale 如何应对，及故障服务器重新上线后的情况&lt;/li&gt;
&lt;li&gt;当两台从服务器（ slave1 和 slave2 ）都出现故障后，查看 MaxScale 如何应对，及故障服务器重新上线后的情况&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;p&gt;为了更深入的查看 MaxScale 的状态，需要把 MaxScale 的日志打开&lt;/p&gt;
&lt;p&gt;修改配置文件&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vi /etc/maxscale.cnf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;找到 [maxscale] 部分，这里用来进行全局设置，在其中添加日志配置&lt;br&gt;&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;log_info&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;logdir&lt;/span&gt;=/tmp/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过开启 log_info 级别，可以看到 MaxScale 的路由日志&lt;/p&gt;
&lt;p&gt;修改配置后，重启 MaxScale &lt;/p&gt;
&lt;h2 id=&quot;实验过程&quot;&gt;&lt;a href=&quot;#实验过程&quot; class=&quot;headerlink&quot; title=&quot;实验过程&quot;&gt;&lt;/a&gt;实验过程&lt;/h2&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;单个-slave-故障的情况&quot;&gt;&lt;a href=&quot;#单个-slave-故障的情况&quot; class=&quot;headerlink&quot; title=&quot;单个 slave 故障的情况&quot;&gt;&lt;/a&gt;单个 slave 故障的情况&lt;/h3&gt;&lt;p&gt;初始状态是一切正常&lt;br&gt;&lt;img src=&quot;/images/maxscale_08.png&quot; alt=&quot;Maxscale&quot;&gt;&lt;/p&gt;
&lt;p&gt;停掉 slave2 的复制，登录 slave2 的 mysql 执行&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; stop slave;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查看 MaxScale 服务器状态&lt;br&gt;&lt;img src=&quot;/images/maxscale_09.png&quot; alt=&quot;Maxscale&quot;&gt;&lt;/p&gt;
&lt;p&gt;slave2 已经失效了&lt;/p&gt;
&lt;p&gt;查看日志信息&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat /tmp/maxscale1.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#尾部显示：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-08-15 12:26:02   notice : Server changed state: slave2[172.17.0.4:3306]: lost_slave&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;提示 slave2 已经丢失&lt;/p&gt;
&lt;p&gt;查看客户端查询结果&lt;br&gt;&lt;img src=&quot;/images/maxscale_10.png&quot; alt=&quot;Maxscale&quot;&gt;&lt;/p&gt;
&lt;p&gt;查询操作全都转到了 &lt;code&gt;slave1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可以看到， 在有 slave 故障后，MaxScale 会自动进行排除，不再向其转发请求&lt;/p&gt;
&lt;p&gt;下面看下 slave2 再次&lt;strong&gt;上线后的情况&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;登录 slave2 的 mysql 执行&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; start slave;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查看 MaxScale 服务器状态&lt;br&gt;&lt;img src=&quot;/images/maxscale_11.png&quot; alt=&quot;Maxscale&quot;&gt;&lt;/p&gt;
&lt;p&gt;恢复了正常状态，重新识别到了 slave2&lt;/p&gt;
&lt;p&gt;查看日志信息，显示：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2016-08-15 12:32:36   notice : Server changed state: slave2[172.17.0.4:3306]: new_slave&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查看客户端查询结果&lt;br&gt;&lt;img src=&quot;/images/maxscale_12.png&quot; alt=&quot;Maxscale&quot;&gt;&lt;/p&gt;
&lt;p&gt;slave2 又可以正常接受查询请求&lt;/p&gt;
&lt;p&gt;通过实验可以看到，在部分 slave 发生故障时，MaxScale 可以自动识别出来，并移除路由列表，当故障恢复重新上线后，MaxScale 也能自动将其加入路由，过程透明&lt;/p&gt;
&lt;h3 id=&quot;全部-slave-故障的情况&quot;&gt;&lt;a href=&quot;#全部-slave-故障的情况&quot; class=&quot;headerlink&quot; title=&quot;全部 slave 故障的情况&quot;&gt;&lt;/a&gt;全部 slave 故障的情况&lt;/h3&gt;&lt;p&gt;分别登陆 slave1 和 slave2 的 mysql，执行停止复制的命令&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; stop slave;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查看 MaxScale 服务器状态&lt;br&gt;&lt;img src=&quot;/images/maxscale_13.png&quot; alt=&quot;Maxscale&quot;&gt;&lt;/p&gt;
&lt;p&gt;发现各个服务器的角色都识别不出来了&lt;/p&gt;
&lt;p&gt;查看日志&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2016-08-15 12:44:11   notice : Server changed state: master[172.17.0.2:3306]: lost_master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-08-15 12:44:11   notice : Server changed state: slave1[172.17.0.3:3306]: lost_slave&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-08-15 12:44:11   notice : Server changed state: slave2[172.17.0.4:3306]: lost_slave&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-08-15 12:44:11   error  : No Master can be determined. Last known was 172.17.0.2:3306&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从日志中看到，MaxScale 发现2个slave 和 master 都丢了，然后报错：没有 master 了&lt;/p&gt;
&lt;p&gt;客户端连接 MaxScale 时也失败了&lt;br&gt;&lt;img src=&quot;/images/maxscale_14.png&quot; alt=&quot;Maxscale&quot;&gt;&lt;/p&gt;
&lt;p&gt;说明从服务器全部失效后，会导致 master 也无法识别，使整个数据库服务都失效了&lt;/p&gt;
&lt;p&gt;对于 slave 全部失效的情况，能否让 master 还可用？这样至少可以正常提供数据库服务&lt;/p&gt;
&lt;p&gt;这需要修改 MaxScale 的配置，告诉 MaxScale 我们需要一个稳定的 master&lt;/p&gt;
&lt;h4 id=&quot;处理过程&quot;&gt;&lt;a href=&quot;#处理过程&quot; class=&quot;headerlink&quot; title=&quot;处理过程&quot;&gt;&lt;/a&gt;处理过程&lt;/h4&gt;&lt;p&gt;先恢复两个 slave，让集群回到正常状态，登陆两个 slave 的mysql&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; start slave;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;修改 MaxScale 配置文件，添加新的配置&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vi /etc/maxscale.cnf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;找到 [MySQL Monitor] 部分，添加：&lt;br&gt;&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;detect_stale_master&lt;/span&gt;=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;保存退出，然后重启 MaxScale&lt;/p&gt;
&lt;h4 id=&quot;验证&quot;&gt;&lt;a href=&quot;#验证&quot; class=&quot;headerlink&quot; title=&quot;验证&quot;&gt;&lt;/a&gt;验证&lt;/h4&gt;&lt;p&gt;停掉两台 slave ，查看 MaxScale 服务器状态&lt;br&gt;&lt;img src=&quot;/images/maxscale_15.png&quot; alt=&quot;Maxscale&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，虽然 slave 都无法识别了，但 master 还在，并提示处于稳定状态&lt;/p&gt;
&lt;p&gt;客户端执行请求&lt;br&gt;&lt;img src=&quot;/images/maxscale_16.png&quot; alt=&quot;Maxscale&quot;&gt;&lt;/p&gt;
&lt;p&gt;客户端可以连接 MaxScale，而且请求都转到了 master 上，说明 slave 全部失效时，由 master 支撑了全部请求&lt;/p&gt;
&lt;p&gt;当恢复两个 slave 后，整体状态自动恢复正常，从客户端执行请求时，又可以转到 slave 上&lt;br&gt;&lt;img src=&quot;/images/maxscale_17.png&quot; alt=&quot;Maxscale&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;小结&quot;&gt;&lt;a href=&quot;#小结&quot; class=&quot;headerlink&quot; title=&quot;小结&quot;&gt;&lt;/a&gt;小结&lt;/h4&gt;&lt;p&gt;通过测试发现，在部分 slave 故障情况下，对于客户端是完全透明的，当全部 slave 故障时，经过简单的配置，MaxScale 也可以很好的处理&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;来源：杜亦舒&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;之前介绍了 &lt;a href=&quot;/blog/2016/08/maxscale-01.html&quot;&gt;MaxScale&lt;/a&gt; 可以实现 Mysql 的读写分离和读负载均衡，那么当 slave 出现故障后，MaxScale 会如何处理呢？&lt;/p&gt;
&lt;p&gt;例如有 3 台数据库服务器，一主二从的结构，数据库名称分别为 master, slave1, slave2&lt;/p&gt;
&lt;p&gt;现在我们实验以下两种情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当一台从服务器（ slave1 或者 slave2 ）出现故障后，查看 MaxScale 如何应对，及故障服务器重新上线后的情况&lt;/li&gt;
&lt;li&gt;当两台从服务器（ slave1 和 slave2 ）都出现故障后，查看 MaxScale 如何应对，及故障服务器重新上线后的情况&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;p&gt;为了更深入的查看 MaxScale 的状态，需要把 MaxScale 的日志打开&lt;/p&gt;
&lt;p&gt;修改配置文件&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vi /etc/maxscale.cnf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;找到 [maxscale] 部分，这里用来进行全局设置，在其中添加日志配置&lt;br&gt;&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;log_info&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;logdir&lt;/span&gt;=/tmp/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过开启 log_info 级别，可以看到 MaxScale 的路由日志&lt;/p&gt;
&lt;p&gt;修改配置后，重启 MaxScale &lt;/p&gt;
&lt;h2 id=&quot;实验过程&quot;&gt;&lt;a href=&quot;#实验过程&quot; class=&quot;headerlink&quot; title=&quot;实验过程&quot;&gt;&lt;/a&gt;实验过程&lt;/h2&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://icyxp.github.io/categories/mysql/"/>
    
      <category term="读写分离" scheme="http://icyxp.github.io/categories/mysql/%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/"/>
    
    
      <category term="mysql" scheme="http://icyxp.github.io/tags/mysql/"/>
    
      <category term="maxscale" scheme="http://icyxp.github.io/tags/maxscale/"/>
    
      <category term="中间件" scheme="http://icyxp.github.io/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Mysql 读写分离中间件 MaxScale</title>
    <link href="http://icyxp.github.io//blog/2016/08/mysql-maxscale-01.html"/>
    <id>http://icyxp.github.io//blog/2016/08/mysql-maxscale-01.html</id>
    <published>2016-08-16T02:00:00.000Z</published>
    <updated>2016-08-16T01:57:30.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;MaxScale-是干什么的？&quot;&gt;&lt;a href=&quot;#MaxScale-是干什么的？&quot; class=&quot;headerlink&quot; title=&quot;MaxScale 是干什么的？&quot;&gt;&lt;/a&gt;MaxScale 是干什么的？&lt;/h2&gt;&lt;p&gt;配置好了 Mysql 的主从复制结构后，我们希望实现读写分离，把读操作分散到从服务器中，并且对多个从服务器能实现负载均衡&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;读写分离&lt;/strong&gt;和&lt;strong&gt;负载均衡&lt;/strong&gt;是 Mysql 集群的基础需求，&lt;strong&gt;MaxScale&lt;/strong&gt; 就可以帮着我们方便的实现这些功能&lt;br&gt;&lt;img src=&quot;/images/maxscale_01.png&quot; alt=&quot;Maxscale&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;MaxScale-的基础构成&quot;&gt;&lt;a href=&quot;#MaxScale-的基础构成&quot; class=&quot;headerlink&quot; title=&quot;MaxScale 的基础构成&quot;&gt;&lt;/a&gt;MaxScale 的基础构成&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;MaxScale 是 Mysql 的兄弟公司 MariaDB 开发的，现在已经发展得非常成熟&lt;/li&gt;
&lt;li&gt;MaxScale 是插件式结构，允许用户开发适合自己的插件&lt;/li&gt;
&lt;li&gt;MaxScale 目前提供的插件功能分为&lt;strong&gt;5类&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;认证插件&quot;&gt;&lt;a href=&quot;#认证插件&quot; class=&quot;headerlink&quot; title=&quot;认证插件&quot;&gt;&lt;/a&gt;认证插件&lt;/h3&gt;&lt;p&gt;提供了登录认证功能，MaxScale 会读取并缓存数据库中 user 表中的信息，当有连接进来时，先从缓存信息中进行验证，如果没有此用户，会从后端数据库中更新信息，再次进行验证&lt;/p&gt;
&lt;h3 id=&quot;协议插件&quot;&gt;&lt;a href=&quot;#协议插件&quot; class=&quot;headerlink&quot; title=&quot;协议插件&quot;&gt;&lt;/a&gt;协议插件&lt;/h3&gt;&lt;p&gt;包括客户端连接协议，和连接数据库的协议&lt;/p&gt;
&lt;h3 id=&quot;路由插件&quot;&gt;&lt;a href=&quot;#路由插件&quot; class=&quot;headerlink&quot; title=&quot;路由插件&quot;&gt;&lt;/a&gt;路由插件&lt;/h3&gt;&lt;p&gt;决定如何把客户端的请求转发给后端数据库服务器，读写分离和负载均衡的功能就是由这个模块实现的&lt;/p&gt;
&lt;h3 id=&quot;监控插件&quot;&gt;&lt;a href=&quot;#监控插件&quot; class=&quot;headerlink&quot; title=&quot;监控插件&quot;&gt;&lt;/a&gt;监控插件&lt;/h3&gt;&lt;p&gt;对各个数据库服务器进行监控，例如发现某个数据库服务器响应很慢，那么就不向其转发请求了&lt;/p&gt;
&lt;h3 id=&quot;日志和过滤插件&quot;&gt;&lt;a href=&quot;#日志和过滤插件&quot; class=&quot;headerlink&quot; title=&quot;日志和过滤插件&quot;&gt;&lt;/a&gt;日志和过滤插件&lt;/h3&gt;&lt;p&gt;提供简单的数据库防火墙功能，可以对SQL进行过滤和容错&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;MaxScale-的安装使用&quot;&gt;&lt;a href=&quot;#MaxScale-的安装使用&quot; class=&quot;headerlink&quot; title=&quot;MaxScale 的安装使用&quot;&gt;&lt;/a&gt;MaxScale 的安装使用&lt;/h2&gt;&lt;p&gt;例如有 3 台数据库服务器，是一主二从的结构&lt;/p&gt;
&lt;h3 id=&quot;过程概述&quot;&gt;&lt;a href=&quot;#过程概述&quot; class=&quot;headerlink&quot; title=&quot;过程概述&quot;&gt;&lt;/a&gt;过程概述&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;配置好集群环境&lt;/li&gt;
&lt;li&gt;下载安装 MaxScale&lt;/li&gt;
&lt;li&gt;配置 MaxScale，添加各数据库信息&lt;/li&gt;
&lt;li&gt;启动 MaxScale，查看是否正确连接数据库&lt;/li&gt;
&lt;li&gt;客户端连接 MaxScale，进行测试&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;详细过程&quot;&gt;&lt;a href=&quot;#详细过程&quot; class=&quot;headerlink&quot; title=&quot;详细过程&quot;&gt;&lt;/a&gt;详细过程&lt;/h3&gt;&lt;h4 id=&quot;配置一主二从的集群环境&quot;&gt;&lt;a href=&quot;#配置一主二从的集群环境&quot; class=&quot;headerlink&quot; title=&quot;配置一主二从的集群环境&quot;&gt;&lt;/a&gt;配置一主二从的集群环境&lt;/h4&gt;&lt;p&gt;准备3台服务器，安装 Mysql，配置一主二从的复制结构&lt;br&gt;主从复制的配置过程略过&lt;/p&gt;
&lt;h4 id=&quot;安装-MaxScale&quot;&gt;&lt;a href=&quot;#安装-MaxScale&quot; class=&quot;headerlink&quot; title=&quot;安装 MaxScale&quot;&gt;&lt;/a&gt;安装 MaxScale&lt;/h4&gt;&lt;p&gt;最好在另一台服务器上安装，如果资源不足，可以和某个 Mysql 放在一起&lt;/p&gt;
&lt;p&gt;MaxScale 的下载地址&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;https://downloads.mariadb.com/files/MaxScale&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据自己的服务器选择合适的安装包&lt;/p&gt;
&lt;p&gt;以 centos 7 为例 安装步骤如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install libaio.x86_64 libaio-devel.x86_64 novacom-server.x86_64 libedit -y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rpm -ivh maxscale-1.4.3-1.centos.7.x86_64.rpm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;配置-MaxScale&quot;&gt;&lt;a href=&quot;#配置-MaxScale&quot; class=&quot;headerlink&quot; title=&quot;配置 MaxScale&quot;&gt;&lt;/a&gt;配置 MaxScale&lt;/h4&gt;&lt;p&gt;在开始配置之前，需要在 master 中为 MaxScale 创建两个用户，用于监控模块和路由模块&lt;/p&gt;
&lt;p&gt;创建监控用户&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; create user scalemon@&#39;%&#39; identified by &quot;111111&quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; grant replication slave, replication client on *.* to scalemon@&#39;%&#39;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;创建路由用户&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; create user maxscale@&#39;%&#39; identified by &quot;111111&quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; grant select on mysql.* to maxscale@&#39;%&#39;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;用户创建完成后，开始配置&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vi /etc/maxscale.cnf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;找到 [server1] 部分，修改其中的 address 和 port，指向 master 的 IP 和端口&lt;/p&gt;
&lt;p&gt;复制2次 [server1] 的整块儿内容，改为 [server2] 与 [server3]，同样修改其中的 address 和 port，分别指向 slave1 和 slave2&lt;br&gt;&lt;img src=&quot;/images/maxscale_02.png&quot; alt=&quot;Maxscale&quot;&gt;&lt;/p&gt;
&lt;p&gt;找到 &lt;code&gt;[MySQL Monitor]&lt;/code&gt; 部分，修改 servers 为 server1,server2,server3，修改 user 和 passwd 为之前创建的监控用户的信息（scalemon,111111）&lt;br&gt;&lt;img src=&quot;/images/maxscale_03.png&quot; alt=&quot;Maxscale&quot;&gt;&lt;/p&gt;
&lt;p&gt;找到 &lt;code&gt;[Read-Write Service]&lt;/code&gt; 部分，修改 servers 为 server1,server2,server3，修改 user 和 passwd 为之前创建的路由用户的信息（maxscale,111111）&lt;br&gt;&lt;img src=&quot;/images/maxscale_04.png&quot; alt=&quot;Maxscale&quot;&gt;&lt;/p&gt;
&lt;p&gt;由于我们使用了 &lt;code&gt;[Read-Write Service]&lt;/code&gt;，需要删除另一个服务 &lt;code&gt;[Read-Only Service]&lt;/code&gt;，删除其整块儿内容即可&lt;/p&gt;
&lt;p&gt;配置完成，保存并退出编辑器&lt;/p&gt;
&lt;h4 id=&quot;启动-MaxScale&quot;&gt;&lt;a href=&quot;#启动-MaxScale&quot; class=&quot;headerlink&quot; title=&quot;启动 MaxScale&quot;&gt;&lt;/a&gt;启动 MaxScale&lt;/h4&gt;&lt;p&gt;执行启动命令&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;maxscale --config=/etc/maxscale.cnf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查看 MaxScale 的响应端口是否已经就绪&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;netstat -ntelp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/maxscale_05.png&quot; alt=&quot;Maxscale&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4006 是连接 MaxScale 时使用的端口&lt;/li&gt;
&lt;li&gt;6603 是 MaxScale 管理器的端口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;登录 MaxScale 管理器，查看一下数据库连接状态，默认的用户名和密码是 admin/mariadb&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;maxadmin --user=admin --password=mariadb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MaxScale&amp;gt; list servers&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/maxscale_06.png&quot; alt=&quot;Maxscale&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，MaxScale 已经连接到了 master 和 slave&lt;/p&gt;
&lt;h4 id=&quot;测试&quot;&gt;&lt;a href=&quot;#测试&quot; class=&quot;headerlink&quot; title=&quot;测试&quot;&gt;&lt;/a&gt;测试&lt;/h4&gt;&lt;p&gt;先在 master 上创建一个测试用户&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; grant ALL PRIVILEGES on *.* to rtest@&quot;%&quot; Identified by &quot;111111&quot;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用 Mysql 客户端到连接 MaxScale&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql -h MaxScale所在的IP -P 4006 -u rtest -p111111&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;执行查看数据库服务器名的操作来知道当前实际所在的数据库&lt;br&gt;&lt;img src=&quot;/images/maxscale_07.png&quot; alt=&quot;Maxscale&quot;&gt;&lt;/p&gt;
&lt;p&gt;开启事务后，就自动路由到了 master，普通的查询操作，是在 slave上&lt;/p&gt;
&lt;p&gt;MaxScale 的配置完成了&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;来源：杜亦舒&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MaxScale-是干什么的？&quot;&gt;&lt;a href=&quot;#MaxScale-是干什么的？&quot; class=&quot;headerlink&quot; title=&quot;MaxScale 是干什么的？&quot;&gt;&lt;/a&gt;MaxScale 是干什么的？&lt;/h2&gt;&lt;p&gt;配置好了 Mysql 的主从复制结构后，我们希望实现读写分离，把读操作分散到从服务器中，并且对多个从服务器能实现负载均衡&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;读写分离&lt;/strong&gt;和&lt;strong&gt;负载均衡&lt;/strong&gt;是 Mysql 集群的基础需求，&lt;strong&gt;MaxScale&lt;/strong&gt; 就可以帮着我们方便的实现这些功能&lt;br&gt;&lt;img src=&quot;/images/maxscale_01.png&quot; alt=&quot;Maxscale&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;MaxScale-的基础构成&quot;&gt;&lt;a href=&quot;#MaxScale-的基础构成&quot; class=&quot;headerlink&quot; title=&quot;MaxScale 的基础构成&quot;&gt;&lt;/a&gt;MaxScale 的基础构成&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;MaxScale 是 Mysql 的兄弟公司 MariaDB 开发的，现在已经发展得非常成熟&lt;/li&gt;
&lt;li&gt;MaxScale 是插件式结构，允许用户开发适合自己的插件&lt;/li&gt;
&lt;li&gt;MaxScale 目前提供的插件功能分为&lt;strong&gt;5类&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;认证插件&quot;&gt;&lt;a href=&quot;#认证插件&quot; class=&quot;headerlink&quot; title=&quot;认证插件&quot;&gt;&lt;/a&gt;认证插件&lt;/h3&gt;&lt;p&gt;提供了登录认证功能，MaxScale 会读取并缓存数据库中 user 表中的信息，当有连接进来时，先从缓存信息中进行验证，如果没有此用户，会从后端数据库中更新信息，再次进行验证&lt;/p&gt;
&lt;h3 id=&quot;协议插件&quot;&gt;&lt;a href=&quot;#协议插件&quot; class=&quot;headerlink&quot; title=&quot;协议插件&quot;&gt;&lt;/a&gt;协议插件&lt;/h3&gt;&lt;p&gt;包括客户端连接协议，和连接数据库的协议&lt;/p&gt;
&lt;h3 id=&quot;路由插件&quot;&gt;&lt;a href=&quot;#路由插件&quot; class=&quot;headerlink&quot; title=&quot;路由插件&quot;&gt;&lt;/a&gt;路由插件&lt;/h3&gt;&lt;p&gt;决定如何把客户端的请求转发给后端数据库服务器，读写分离和负载均衡的功能就是由这个模块实现的&lt;/p&gt;
&lt;h3 id=&quot;监控插件&quot;&gt;&lt;a href=&quot;#监控插件&quot; class=&quot;headerlink&quot; title=&quot;监控插件&quot;&gt;&lt;/a&gt;监控插件&lt;/h3&gt;&lt;p&gt;对各个数据库服务器进行监控，例如发现某个数据库服务器响应很慢，那么就不向其转发请求了&lt;/p&gt;
&lt;h3 id=&quot;日志和过滤插件&quot;&gt;&lt;a href=&quot;#日志和过滤插件&quot; class=&quot;headerlink&quot; title=&quot;日志和过滤插件&quot;&gt;&lt;/a&gt;日志和过滤插件&lt;/h3&gt;&lt;p&gt;提供简单的数据库防火墙功能，可以对SQL进行过滤和容错&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://icyxp.github.io/categories/mysql/"/>
    
      <category term="读写分离" scheme="http://icyxp.github.io/categories/mysql/%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/"/>
    
    
      <category term="mysql" scheme="http://icyxp.github.io/tags/mysql/"/>
    
      <category term="maxscale" scheme="http://icyxp.github.io/tags/maxscale/"/>
    
      <category term="中间件" scheme="http://icyxp.github.io/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>双机高可用-负载均衡-MySQL(读写分离、主从自动切换)架构设计</title>
    <link href="http://icyxp.github.io//blog/2016/08/ha-load-balance-mysql-master-slave-architecture.html"/>
    <id>http://icyxp.github.io//blog/2016/08/ha-load-balance-mysql-master-slave-architecture.html</id>
    <published>2016-08-09T02:00:00.000Z</published>
    <updated>2016-08-09T02:45:01.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;架构简介&quot;&gt;&lt;a href=&quot;#架构简介&quot; class=&quot;headerlink&quot; title=&quot;架构简介&quot;&gt;&lt;/a&gt;架构简介&lt;/h2&gt;&lt;p&gt;只有两台机器，需要实现其中一台死机之后另一台能接管这台机器的服务，并且在两台机器正常服务时，两台机器都能用上。如何设计这样的架构场景。&lt;br&gt;&lt;img src=&quot;/images/high_availability.png&quot; alt=&quot;High Availability&quot;&gt;&lt;/p&gt;
&lt;p&gt;此架构主要是由keepalived实现双机高可用，维护了一个外网VIP，一个内网VIP。正常情况时，外网VIP和内网VIP都绑定在server1服务器，web请求发送到server1的nginx，nginx对于静态资源请求就直接在本机检索并返回，对于php的动态请求，则负载均衡到server1和server2。对于SQL请求，会将此类请求发送到Atlas MySQL中间件，Atlas接收到请求之后，把涉及写操作的请求发送到内网VIP，读请求操作发送到mysql从，这样就实现了读写分离。&lt;/p&gt;
&lt;p&gt;当主服务器server1宕机时，keepalived检测到后，立即把外网VIP和内网VIP绑定到server2，并把server2的mysql切换成主库。此时由于外网VIP已经转移到了server2，web请求将发送给server2的nginx。nginx检测到server1宕机，不再把请求转发到server1的php-fpm。之后的sql请求照常发送给本地的atlas，atlas把写操作发送给内网VIP，读操作发送给mysql从，由于内网VIP已经绑定到server2了，server2的mysql同时接受写操作和读操作。&lt;/p&gt;
&lt;p&gt;当主服务器server1恢复后，server1的mysql自动设置为从，与server2的mysql主同步。keepalived不抢占server2的VIP，继续正常服务。&lt;/p&gt;
&lt;h2 id=&quot;架构要求&quot;&gt;&lt;a href=&quot;#架构要求&quot; class=&quot;headerlink&quot; title=&quot;架构要求&quot;&gt;&lt;/a&gt;架构要求&lt;/h2&gt;&lt;p&gt;要实现此架构，需要三个条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;服务器可以设置内网IP，并且设置的内网IP互通。&lt;/li&gt;
&lt;li&gt;服务器可以随意绑定IDC分配给我们使用的外网IP，即外网IP没有绑定MAC地址。&lt;/li&gt;
&lt;li&gt;MySQL服务器支持GTID，即MySQL-5.6.5以上版本。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;环境说明&quot;&gt;&lt;a href=&quot;#环境说明&quot; class=&quot;headerlink&quot; title=&quot;环境说明&quot;&gt;&lt;/a&gt;环境说明&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;对外VIP&lt;/strong&gt;：10.96.153.239&lt;br&gt;&lt;strong&gt;对内VIP&lt;/strong&gt;：192.168.1.150&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;描述&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;网卡1：eth0(公网IP)&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;网卡2：eth1(内网IP)&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;操作系统&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;server1&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;10.96.153.110&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;192.168.1.100&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Centos 6.X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;server2&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;10.96.153.114&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;192.168.1.101&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Centos 6.X&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;架构配置&quot;&gt;&lt;a href=&quot;#架构配置&quot; class=&quot;headerlink&quot; title=&quot;架构配置&quot;&gt;&lt;/a&gt;架构配置&lt;/h2&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;hosts设置&quot;&gt;&lt;a href=&quot;#hosts设置&quot; class=&quot;headerlink&quot; title=&quot;hosts设置&quot;&gt;&lt;/a&gt;hosts设置&lt;/h3&gt;&lt;p&gt;Server1与Server2 hosts设置如下&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# cat /etc/hosts&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;192.168.1.100 server1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;192.168.1.101 server2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;软件安装&quot;&gt;&lt;a href=&quot;#软件安装&quot; class=&quot;headerlink&quot; title=&quot;软件安装&quot;&gt;&lt;/a&gt;软件安装&lt;/h3&gt;&lt;p&gt;Nginx、PHP、MySQL、Memcached安装略&lt;/p&gt;
&lt;h3 id=&quot;解决session共享问题&quot;&gt;&lt;a href=&quot;#解决session共享问题&quot; class=&quot;headerlink&quot; title=&quot;解决session共享问题&quot;&gt;&lt;/a&gt;解决session共享问题&lt;/h3&gt;&lt;p&gt;php默认的session存储是在/tmp目录下，现在我们是用两台服务器作php请求的负载，这样会造成session分布在两台服务器的/tmp目录下，导致依赖于session的功能不正常。我们可以使用memcached来解决此问题。&lt;/p&gt;
&lt;p&gt;上一步我们已经安装好了memcached，现在只需要配置php.ini来使用memcached，配置如下，打开php.ini配置文件，修改为如下两行的值：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;session.save_handler = memcache&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;session.save_path = &quot;tcp://192.168.1.100:11211,tcp://192.168.1.101:11211&quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;之后重启php-fpm生效。&lt;/p&gt;
&lt;h3 id=&quot;Nginx配置&quot;&gt;&lt;a href=&quot;#Nginx配置&quot; class=&quot;headerlink&quot; title=&quot;Nginx配置&quot;&gt;&lt;/a&gt;Nginx配置&lt;/h3&gt;&lt;h4 id=&quot;Server1配置&quot;&gt;&lt;a href=&quot;#Server1配置&quot; class=&quot;headerlink&quot; title=&quot;Server1配置&quot;&gt;&lt;/a&gt;Server1配置&lt;/h4&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    upstream php-server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        server 192.168.1.101:9000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        server 127.0.0.1:9000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        keepalive 100;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        location ~ \.php$ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fastcgi_pass   php-server;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fastcgi_index  index.php;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            include        fastcgi_params;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Server2配置&quot;&gt;&lt;a href=&quot;#Server2配置&quot; class=&quot;headerlink&quot; title=&quot;Server2配置&quot;&gt;&lt;/a&gt;Server2配置&lt;/h4&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    upstream php-server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        server 192.168.1.100:9000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        server 127.0.0.1:9000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        keepalive 100;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        location ~ \.php$ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fastcgi_pass   php-server;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fastcgi_index  index.php;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            include        fastcgi_params;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这两个配置主要的作用是设置php请求的负载均衡。&lt;/p&gt;
&lt;h3 id=&quot;MySQL配置&quot;&gt;&lt;a href=&quot;#MySQL配置&quot; class=&quot;headerlink&quot; title=&quot;MySQL配置&quot;&gt;&lt;/a&gt;MySQL配置&lt;/h3&gt;&lt;h4 id=&quot;mysql-util安装&quot;&gt;&lt;a href=&quot;#mysql-util安装&quot; class=&quot;headerlink&quot; title=&quot;mysql util安装&quot;&gt;&lt;/a&gt;mysql util安装&lt;/h4&gt;&lt;p&gt;我们需要安装mysql util里的主从配置工具来实现主从切换。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget http://dev.mysql.com/get/Downloads/MySQLGUITools/mysql-utilities-1.5.3.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar xzf mysql-utilities-1.5.3.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; mysql-utilities-1.5.3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python setup.py build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python setup.py install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;mysql-my-cnf配置&quot;&gt;&lt;a href=&quot;#mysql-my-cnf配置&quot; class=&quot;headerlink&quot; title=&quot;mysql my.cnf配置&quot;&gt;&lt;/a&gt;mysql my.cnf配置&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;server1：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;[mysql]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;[...]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;protocol&lt;/span&gt; = tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;[...]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;[...]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;[mysqld]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;[...]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# BINARY LOGGING&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;log-bin&lt;/span&gt; = /usr/local/mysql/data/mysql-bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;expire-logs-days&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;binlog-format&lt;/span&gt; = row&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;log-slave-updates&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;gtid-mode&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;on&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;enforce-gtid-consistency&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;master-info-repository&lt;/span&gt; = TABLE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;relay-log-info-repository&lt;/span&gt; = TABLE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;server-id&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;report-host&lt;/span&gt; = server1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;report-port&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;3306&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;[...]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;server2：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;[mysql]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;[...]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;protocol&lt;/span&gt; = tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;[...]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;[mysqld]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;[...]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# BINARY LOGGING&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;log-bin&lt;/span&gt; = /usr/local/mysql/data/mysql-bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;expire-logs-days&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;binlog-format&lt;/span&gt; = row&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;log-slave-updates&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;gtid-mode&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;on&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;enforce-gtid-consistency&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;master-info-repository&lt;/span&gt; = TABLE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;relay-log-info-repository&lt;/span&gt; = TABLE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;server-id&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;report-host&lt;/span&gt; = server2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;report-port&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;3306&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;[...]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这两个配置主要是设置了binlog和启用gtid-mode，并且需要设置不同的server-id和report-host。&lt;/p&gt;
&lt;h4 id=&quot;开放root帐号远程权限&quot;&gt;&lt;a href=&quot;#开放root帐号远程权限&quot; class=&quot;headerlink&quot; title=&quot;开放root帐号远程权限&quot;&gt;&lt;/a&gt;开放root帐号远程权限&lt;/h4&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; grant all on *.* to &#39;root&#39;@&#39;192.168.1.%&#39; identified by &#39;Xp29at5F37&#39; with grant option;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; grant all on *.* to &#39;root&#39;@&#39;server1&#39; identified by &#39;Xp29at5F37&#39; with grant option;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; grant all on *.* to &#39;root&#39;@&#39;server2&#39; identified by &#39;Xp29at5F37&#39; with grant option;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; flush privileges;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;设置mysql主从&quot;&gt;&lt;a href=&quot;#设置mysql主从&quot; class=&quot;headerlink&quot; title=&quot;设置mysql主从&quot;&gt;&lt;/a&gt;设置mysql主从&lt;/h4&gt;&lt;p&gt;在任意一台执行如下命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysqlreplicate --master=root:Xp29at5F37@server1:3306 --slave=root:Xp29at5F37@server2:3306 --rpl-user=rpl:o67DhtaW&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# master on server1: … connected.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# slave on server2: … connected.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Checking for binary logging on master…&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Setting up replication…&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# …done.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;显示主从关系&quot;&gt;&lt;a href=&quot;#显示主从关系&quot; class=&quot;headerlink&quot; title=&quot;显示主从关系&quot;&gt;&lt;/a&gt;显示主从关系&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysqlrplshow --master=root:Xp29at5F37@server1 --discover-slaves-login=root:Xp29at5F37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# master on server1: … connected.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Finding slaves for master: server1:3306&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Replication Topology Graph&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server1:3306 (MASTER)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+— server2:3306 – (SLAVE)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;检查主从状态&quot;&gt;&lt;a href=&quot;#检查主从状态&quot; class=&quot;headerlink&quot; title=&quot;检查主从状态&quot;&gt;&lt;/a&gt;检查主从状态&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysqlrplcheck --master=root:Xp29at5F37@server1 --slave=root:Xp29at5F37@server2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# master on server1: … connected.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# slave on server2: … connected.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Test Description Status&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;—————————————————————————&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Checking &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; binary logging on master [pass]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Are there binlog exceptions? [pass]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Replication user exists? [pass]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Checking server_id values [pass]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Checking server_uuid values [pass]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Is slave connected to master? [pass]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Check master information file [pass]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Checking InnoDB compatibility [pass]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Checking storage engines compatibility [pass]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Checking lower_&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt;_table_names settings [pass]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Checking slave delay (seconds behind master) [pass]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# …done.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Keepalived配置&quot;&gt;&lt;a href=&quot;#Keepalived配置&quot; class=&quot;headerlink&quot; title=&quot;Keepalived配置&quot;&gt;&lt;/a&gt;Keepalived配置&lt;/h3&gt;&lt;h4 id=&quot;安装-两台都装&quot;&gt;&lt;a href=&quot;#安装-两台都装&quot; class=&quot;headerlink&quot; title=&quot;安装(两台都装)&quot;&gt;&lt;/a&gt;安装(两台都装)&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum -y install keepalived&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chkconfig keepalived on&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;keepalived配置-server1&quot;&gt;&lt;a href=&quot;#keepalived配置-server1&quot; class=&quot;headerlink&quot; title=&quot;keepalived配置(server1)&quot;&gt;&lt;/a&gt;keepalived配置(server1)&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# cat /etc/keepalived/keepalived.conf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vrrp_sync_group VG_1 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	group &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		inside_network&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		outside_network&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vrrp_instance inside_network &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	state BACKUP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	interface eth1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	virtual_router_id 51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	priority 101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	advert_int 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	authentication &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		auth_&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; PASS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		auth_pass 3489&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	virtual_ipaddress &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		192.168.1.150/24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	nopreempt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	notify /data/sh/mysqlfailover-server1.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vrrp_instance outside_network &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	state BACKUP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	interface eth0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	virtual_router_id 50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	priority 101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	advert_int 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	authentication &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	auth_&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; PASS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	auth_pass 3489&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	virtual_ipaddress &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		10.96.153.239/24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	nopreempt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;keepalived配置-server2&quot;&gt;&lt;a href=&quot;#keepalived配置-server2&quot; class=&quot;headerlink&quot; title=&quot;keepalived配置(server2)&quot;&gt;&lt;/a&gt;keepalived配置(server2)&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# cat /etc/keepalived/keepalived.conf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vrrp_sync_group VG_1 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	group &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		inside_network&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		outside_network&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vrrp_instance inside_network &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	state BACKUP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	interface eth1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	virtual_router_id 51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	priority 100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	advert_int 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	authentication &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		auth_&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; PASS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		auth_pass 3489&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	virtual_ipaddress &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		192.168.1.150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	notify /data/sh/mysqlfailover-server2.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vrrp_instance outside_network &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	state BACKUP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	interface eth0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	virtual_router_id 50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	priority 100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	advert_int 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	authentication &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		auth_&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; PASS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		auth_pass 3489&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	virtual_ipaddress &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		10.96.153.239/24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此keepalived配置需要注意的是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;两台server的state都设置为backup，server1增加nopreempt配置，并且server1 priority比server2高，这样用来实现当server1从宕机恢复时，不抢占VIP;&lt;/li&gt;
&lt;li&gt;server1设置notify /data/sh/mysqlfailover-server1.sh,server2设置notify /data/sh/mysqlfailover-server2.sh,作用是自动切换主从&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;/data/sh/mysqlfailover-server1.sh脚本内容：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sleep 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;state=&lt;span class=&quot;variable&quot;&gt;$3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;result=`mysql -h127.0.0.1 -P3306 -uroot -pXp29at5F37 &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;show slave status;&#39;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$result&lt;/span&gt;&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; ]] &amp;amp;&amp;amp; mysqlState=&lt;span class=&quot;string&quot;&gt;&quot;master&quot;&lt;/span&gt; || mysqlState=&lt;span class=&quot;string&quot;&gt;&quot;slave&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [[ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$state&lt;/span&gt;&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;MASTER&quot;&lt;/span&gt; ]];&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [[ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$mysqlState&lt;/span&gt;&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;slave&quot;&lt;/span&gt; ]];&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mysqlrpladmin --slave=root:Xp29at5F37@server1:3306 failover&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; [[ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$state&lt;/span&gt;&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;BACKUP&quot;&lt;/span&gt; ]];&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [[ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$mysqlState&lt;/span&gt;&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;master&quot;&lt;/span&gt; ]];&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mysqlreplicate --master=root:Xp29at5F37@server2:3306 --slave=root:Xp29at5F37@server1:3306 --rpl-user=rpl:o67DhtaW&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/proxy-read-only-backend-addresses.*/proxy-read-only-backend-addresses = 192.168.1.150:3306/&#39;&lt;/span&gt; /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/mysql-proxy/conf/my.cnf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql -h127.0.0.1 -P2345 -uuser -ppwd &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;REMOVE BACKEND 2;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;/data/sh/mysqlfailover-server2.sh脚本内容：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sleep 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;state=&lt;span class=&quot;variable&quot;&gt;$3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;result=`mysql -h127.0.0.1 -P3306 -uroot -pXp29at5F37 &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;show slave status;&#39;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$result&lt;/span&gt;&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; ]] &amp;amp;&amp;amp; mysqlState=&lt;span class=&quot;string&quot;&gt;&quot;master&quot;&lt;/span&gt; || mysqlState=&lt;span class=&quot;string&quot;&gt;&quot;slave&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [[ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$state&lt;/span&gt;&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;MASTER&quot;&lt;/span&gt; ]];&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [[ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$mysqlState&lt;/span&gt;&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;slave&quot;&lt;/span&gt; ]];&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mysqlrpladmin --slave=root:Xp29at5F37@server2:3306 failover&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; [[ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$state&lt;/span&gt;&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;BACKUP&quot;&lt;/span&gt; ]];&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [[ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$mysqlState&lt;/span&gt;&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;master&quot;&lt;/span&gt; ]];&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mysqlreplicate --master=root:Xp29at5F37@server1:3306 --slave=root:Xp29at5F37@server2:3306 --rpl-user=rpl:o67DhtaW&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/proxy-read-only-backend-addresses.*/proxy-read-only-backend-addresses = 192.168.1.150:3306/&#39;&lt;/span&gt; /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/mysql-proxy/conf/my.cnf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql -h127.0.0.1 -P2345 -uuser -ppwd &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;REMOVE BACKEND 2;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Atlas设置&quot;&gt;&lt;a href=&quot;#Atlas设置&quot; class=&quot;headerlink&quot; title=&quot;Atlas设置&quot;&gt;&lt;/a&gt;Atlas设置&lt;/h3&gt;&lt;h4 id=&quot;atlas安装（两台服务器）&quot;&gt;&lt;a href=&quot;#atlas安装（两台服务器）&quot; class=&quot;headerlink&quot; title=&quot;atlas安装（两台服务器）&quot;&gt;&lt;/a&gt;atlas安装（两台服务器）&lt;/h4&gt;&lt;p&gt;到这里下载最新版本，&lt;a href=&quot;https://github.com/Qihoo360/Atlas/releases&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Qihoo360/Atlas/releases&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget https://github.com/Qihoo360/Atlas/releases/download/2.2.1/Atlas-2.2.1.el6.x86_64.rpm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rpm -i Atlas-2.2.1.el6.x86_64.rpm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;atlas配置（两台服务器）&quot;&gt;&lt;a href=&quot;#atlas配置（两台服务器）&quot; class=&quot;headerlink&quot; title=&quot;atlas配置（两台服务器）&quot;&gt;&lt;/a&gt;atlas配置（两台服务器）&lt;/h4&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd /usr/local/mysql-proxy/conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp test.cnf my.cnf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vi my.cnf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#调整如下参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;proxy-backend-addresses = 192.168.1.150:3306&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;proxy-read-only-backend-addresses = 192.168.1.101:3306&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pwds = root:qtyU1btXOo074Itvx0UR9Q==&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;event-threads = 8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;注意&lt;/code&gt;&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;proxy-backend-addresse设置为内网VIP&lt;/li&gt;
&lt;li&gt;proxy-read-only-backend-addresses设置为server2的IP&lt;/li&gt;
&lt;li&gt;root:qtyU1btXOo074Itvx0UR9Q==设置数据库的用户和密码，密码是通过/usr/local/mysql-proxy/bin/encrypt Xp29at5F37生成。&lt;/li&gt;
&lt;li&gt;更详细参数解释请查看，&lt;a href=&quot;https://github.com/Qihoo360/Atlas/wiki/Atlas%E9%83%A8%E5%88%86%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atlas配置详解&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;启动atlas（两台服务器）&quot;&gt;&lt;a href=&quot;#启动atlas（两台服务器）&quot; class=&quot;headerlink&quot; title=&quot;启动atlas（两台服务器）&quot;&gt;&lt;/a&gt;启动atlas（两台服务器）&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/mysql-proxy/bin/mysql-proxy --defaults-file=/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/mysql-proxy/conf/my.cnf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;之后程序里配置mysql就配置127.0.0.1:1234就好。&lt;/p&gt;
&lt;h4 id=&quot;部署atlas自动维护脚本（两台服务器）&quot;&gt;&lt;a href=&quot;#部署atlas自动维护脚本（两台服务器）&quot; class=&quot;headerlink&quot; title=&quot;部署atlas自动维护脚本（两台服务器）&quot;&gt;&lt;/a&gt;部署atlas自动维护脚本（两台服务器）&lt;/h4&gt;&lt;p&gt;添加定时任务（如每2分钟运行一次）我们把脚本放在/data/sh/auto_maintain_atlas.sh,脚本内容为：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;count=`mysql -N -h127.0.0.1 -P2345 -uuser -ppwd &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;select * from backends;&quot;&lt;/span&gt; | wc &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [[ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$count&lt;/span&gt;&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt; ]];&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result=`mysql -hserver1 -P3306 -uroot -pXp29at5F37 &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;show slave status\G&#39;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$result&lt;/span&gt;&quot;&lt;/span&gt; | grep Slave_IO_State;&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        slaveIP=192.168.1.100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result=`mysql -hserver2 -P3306 -uroot -pXp29at5F37 &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;show slave status\G&#39;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        slaveIP=192.168.1.101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    slaveIORunning=`&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$result&lt;/span&gt;&quot;&lt;/span&gt; | awk -F&lt;span class=&quot;string&quot;&gt;&#39;:&#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;/Slave_IO_Running:/&amp;#123;print $2&amp;#125;&#39;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    slaveSQLRunning=`&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$result&lt;/span&gt;&quot;&lt;/span&gt; | awk -F&lt;span class=&quot;string&quot;&gt;&#39;:&#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;/Slave_SQL_Running:/&amp;#123;print $2&amp;#125;&#39;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    SlaveSQLRunning_State=`&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$result&lt;/span&gt;&quot;&lt;/span&gt; | awk -F&lt;span class=&quot;string&quot;&gt;&#39;:&#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;/Slave_SQL_Running_State:/&amp;#123;print $2&amp;#125;&#39;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [[ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$slaveIORunning&lt;/span&gt;&quot;&lt;/span&gt; =~ &lt;span class=&quot;string&quot;&gt;&quot;Yes&quot;&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$slaveSQLRunning&lt;/span&gt;&quot;&lt;/span&gt; =~ &lt;span class=&quot;string&quot;&gt;&quot;Yes&quot;&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$SlaveSQLRunning_State&lt;/span&gt;&quot;&lt;/span&gt; =~ &lt;span class=&quot;string&quot;&gt;&quot;Slave has read all relay log&quot;&lt;/span&gt; ]];&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mysql -h127.0.0.1 -P2345 -uuser -ppwd &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;add slave &lt;span class=&quot;variable&quot;&gt;$&amp;#123;slaveIP&amp;#125;&lt;/span&gt;:3306;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;为什么需要这个脚本呢？假设目前mysql主服务器在s1，s1宕机后，s2接管VIP，接着删除atlas中设置的slave backend，将mysql提升为主。过一段时间后，s1从宕机中恢复，这时候s1的mysql自动切换为从，接着删除atlas中设置的slave backend，开始连接s2的mysql主同步数据。到这个时候我们发现，已经不存在读写分离了，所有的sql都发送给了s2的mysql。auto_maintain_atlas.sh脚本就派上用场了，此脚本会定时的检查主从是否已经同步完成，如果完成就自动增加slave backend，这样读写分离又恢复了，完全不需要人工干预。&lt;/p&gt;
&lt;h3 id=&quot;测试&quot;&gt;&lt;a href=&quot;#测试&quot; class=&quot;headerlink&quot; title=&quot;测试&quot;&gt;&lt;/a&gt;测试&lt;/h3&gt;&lt;h4 id=&quot;测试keepalived是否工作正常&quot;&gt;&lt;a href=&quot;#测试keepalived是否工作正常&quot; class=&quot;headerlink&quot; title=&quot;测试keepalived是否工作正常&quot;&gt;&lt;/a&gt;测试keepalived是否工作正常&lt;/h4&gt;&lt;p&gt;我们来模拟server1宕机。&lt;br&gt;在server1上执行shutdown关机命令。&lt;br&gt;此时我们登录server2，执行ip addr命令，输出如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1: lo: mtu 16436 qdisc noqueue state UNKNOWN&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inet 127.0.0.1/8 scope host lo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inet6 ::1/128 scope host&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2: eth0: mtu 1500 qdisc pfifo_fast state UP qlen 1000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;link/ether 00:0c:29:81:9d:42 brd ff:ff:ff:ff:ff:ff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inet 10.96.153.114/24 brd 10.96.153.255 scope global eth0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inet 10.96.153.239/24 scope global secondary eth0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inet6 fe80::20c:29ff:fe81:9d42/64 scope link&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3: eth1: mtu 1500 qdisc pfifo_fast state UP qlen 1000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;link/ether 00:0c:29:81:9d:4c brd ff:ff:ff:ff:ff:ff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inet 192.168.1.101/24 brd 192.168.1.255 scope global eth1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inet 192.168.1.150/32 scope global eth1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inet6 fe80::20c:29ff:fe81:9d4c/64 scope link&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们看到对外VIP 10.96.153.239和对内IP 192.168.1.150已经转移到server2了，证明keepalived运行正常。&lt;/p&gt;
&lt;h4 id=&quot;测试是否自动切换了主从&quot;&gt;&lt;a href=&quot;#测试是否自动切换了主从&quot; class=&quot;headerlink&quot; title=&quot;测试是否自动切换了主从&quot;&gt;&lt;/a&gt;测试是否自动切换了主从&lt;/h4&gt;&lt;p&gt;登录server2的mysql服务器，执行show slave status;命令，如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; show slave status\G&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Empty &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们发现从状态已经为空，证明已经切换为主了。&lt;/p&gt;
&lt;h4 id=&quot;测试server1是否抢占VIP&quot;&gt;&lt;a href=&quot;#测试server1是否抢占VIP&quot; class=&quot;headerlink&quot; title=&quot;测试server1是否抢占VIP&quot;&gt;&lt;/a&gt;测试server1是否抢占VIP&lt;/h4&gt;&lt;p&gt;为什么要测试这个呢？如果server1恢复之后抢占了VIP，而我们的Atlas里后端设置的是VIP，这样server1启动之后，sql的写操作就会向server1的mysql发送，而server1的mysql数据是旧于server2的，所以这样会造成数据不一致，这个是非常重要的测试。&lt;br&gt;我们先来启动server1，之后执行ip addr，输出如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1: lo: mtu 16436 qdisc noqueue state UNKNOWN&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inet 127.0.0.1/8 scope host lo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inet6 ::1/128 scope host&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2: eth0: mtu 1500 qdisc pfifo_fast state UP qlen 1000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;link/ether 00:0c:29:f1:4f:4e brd ff:ff:ff:ff:ff:ff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inet 10.96.153.110/24 brd 10.96.153.255 scope global eth0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inet6 fe80::20c:29ff:fef1:4f4e/64 scope link&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3: eth1: mtu 1500 qdisc pfifo_fast state UP qlen 1000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;link/ether 00:0c:29:f1:4f:58 brd ff:ff:ff:ff:ff:ff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inet 192.168.1.100/24 brd 192.168.1.255 scope global eth1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inet6 fe80::20c:29ff:fef1:4f58/64 scope link&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们看到，server1并没有抢占VIP，测试正常。不过另人郁闷的是，在虚拟机的环境并没有测试成功，不知道为什么。&lt;/p&gt;
&lt;h4 id=&quot;测试server2的atlas是否已经删除slave-backend&quot;&gt;&lt;a href=&quot;#测试server2的atlas是否已经删除slave-backend&quot; class=&quot;headerlink&quot; title=&quot;测试server2的atlas是否已经删除slave backend&quot;&gt;&lt;/a&gt;测试server2的atlas是否已经删除slave backend&lt;/h4&gt;&lt;p&gt;我们测试这个是为了保证atlas已经没有slave backend，也就是没有从库的设置了，否则当server1恢复时，有可能会把读请求发送给server1的mysql，造成读取了旧数据的问题。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@server1 ~]&lt;span class=&quot;comment&quot;&gt;# mysql -h127.0.0.1 -P2345 -uuser -ppwd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select * from backends;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+————-+——————–+——-+——+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| backend_ndx | address | state | &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+————-+——————–+——-+——+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| 1 | 192.168.1.150:3306 | up | rw |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+————-+——————–+——-+——+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 rows &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果看到只有一个后端，证明运作正常。&lt;/p&gt;
&lt;h4 id=&quot;测试server1-mysql是否设置为从&quot;&gt;&lt;a href=&quot;#测试server1-mysql是否设置为从&quot; class=&quot;headerlink&quot; title=&quot;测试server1 mysql是否设置为从&quot;&gt;&lt;/a&gt;测试server1 mysql是否设置为从&lt;/h4&gt;&lt;p&gt;serve1恢复后，登录server1的mysql服务器，执行show slave status;命令，如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; show slave status\G&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*************************** 1. row ***************************&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Slave_IO_State: Opening tables&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Master_Host: server1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Master_User: rpl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Master_Port: 3306&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Connect_Retry: 60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Master_Log_File: mysql-bin.000015&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Read_Master_Log_Pos: 48405991&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Relay_Log_File: mysql-relay-bin.000002&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Relay_Log_Pos: 361&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Relay_Master_Log_File: mysql-bin.000015&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Slave_IO_Running: Yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Slave_SQL_Running: yes&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;测试是否自动恢复读写分离&quot;&gt;&lt;a href=&quot;#测试是否自动恢复读写分离&quot; class=&quot;headerlink&quot; title=&quot;测试是否自动恢复读写分离&quot;&gt;&lt;/a&gt;测试是否自动恢复读写分离&lt;/h4&gt;&lt;p&gt;server1恢复后一段时间，我们可以看是读写分离是否已经恢复。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@server1 ~]&lt;span class=&quot;comment&quot;&gt;# mysql -h127.0.0.1 -P2345 -uuser -ppwd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Warning: Using a password on the &lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt; line interface can be insecure.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Welcome to the MySQL monitor. Commands end with ; or \g.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Your MySQL connection id is 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Server version: 5.0.99-agent-admin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Copyright (c) 2000, 2014, Oracle and/or its affiliates. All rights reserved.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Oracle is a registered trademark of Oracle Corporation and/or its&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;affiliates. Other names may be trademarks of their respective&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;owners.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type ‘&lt;span class=&quot;built_in&quot;&gt;help&lt;/span&gt;;’ or ‘\h’ &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; help. Type ‘\c’ to clear the current input statement.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select * from backends;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+————-+——————–+——-+——+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| backend_ndx | address | state | &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+————-+——————–+——-+——+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| 1 | 192.168.1.150:3306 | up | rw |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| 2 | 192.168.1.100:3306 | up | ro |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+————-+——————–+——-+——+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 rows &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们看到server1已经被添加为slave backend了。这表示已经成功恢复读写分离。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;来自：&lt;a href=&quot;https://www.centos.bz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.centos.bz&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;架构简介&quot;&gt;&lt;a href=&quot;#架构简介&quot; class=&quot;headerlink&quot; title=&quot;架构简介&quot;&gt;&lt;/a&gt;架构简介&lt;/h2&gt;&lt;p&gt;只有两台机器，需要实现其中一台死机之后另一台能接管这台机器的服务，并且在两台机器正常服务时，两台机器都能用上。如何设计这样的架构场景。&lt;br&gt;&lt;img src=&quot;/images/high_availability.png&quot; alt=&quot;High Availability&quot;&gt;&lt;/p&gt;
&lt;p&gt;此架构主要是由keepalived实现双机高可用，维护了一个外网VIP，一个内网VIP。正常情况时，外网VIP和内网VIP都绑定在server1服务器，web请求发送到server1的nginx，nginx对于静态资源请求就直接在本机检索并返回，对于php的动态请求，则负载均衡到server1和server2。对于SQL请求，会将此类请求发送到Atlas MySQL中间件，Atlas接收到请求之后，把涉及写操作的请求发送到内网VIP，读请求操作发送到mysql从，这样就实现了读写分离。&lt;/p&gt;
&lt;p&gt;当主服务器server1宕机时，keepalived检测到后，立即把外网VIP和内网VIP绑定到server2，并把server2的mysql切换成主库。此时由于外网VIP已经转移到了server2，web请求将发送给server2的nginx。nginx检测到server1宕机，不再把请求转发到server1的php-fpm。之后的sql请求照常发送给本地的atlas，atlas把写操作发送给内网VIP，读操作发送给mysql从，由于内网VIP已经绑定到server2了，server2的mysql同时接受写操作和读操作。&lt;/p&gt;
&lt;p&gt;当主服务器server1恢复后，server1的mysql自动设置为从，与server2的mysql主同步。keepalived不抢占server2的VIP，继续正常服务。&lt;/p&gt;
&lt;h2 id=&quot;架构要求&quot;&gt;&lt;a href=&quot;#架构要求&quot; class=&quot;headerlink&quot; title=&quot;架构要求&quot;&gt;&lt;/a&gt;架构要求&lt;/h2&gt;&lt;p&gt;要实现此架构，需要三个条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;服务器可以设置内网IP，并且设置的内网IP互通。&lt;/li&gt;
&lt;li&gt;服务器可以随意绑定IDC分配给我们使用的外网IP，即外网IP没有绑定MAC地址。&lt;/li&gt;
&lt;li&gt;MySQL服务器支持GTID，即MySQL-5.6.5以上版本。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;环境说明&quot;&gt;&lt;a href=&quot;#环境说明&quot; class=&quot;headerlink&quot; title=&quot;环境说明&quot;&gt;&lt;/a&gt;环境说明&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;对外VIP&lt;/strong&gt;：10.96.153.239&lt;br&gt;&lt;strong&gt;对内VIP&lt;/strong&gt;：192.168.1.150&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;描述&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;网卡1：eth0(公网IP)&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;网卡2：eth1(内网IP)&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;操作系统&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;server1&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;10.96.153.110&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;192.168.1.100&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Centos 6.X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;server2&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;10.96.153.114&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;192.168.1.101&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Centos 6.X&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;架构配置&quot;&gt;&lt;a href=&quot;#架构配置&quot; class=&quot;headerlink&quot; title=&quot;架构配置&quot;&gt;&lt;/a&gt;架构配置&lt;/h2&gt;
    
    </summary>
    
      <category term="高可用" scheme="http://icyxp.github.io/categories/%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    
      <category term="负载均衡" scheme="http://icyxp.github.io/categories/%E9%AB%98%E5%8F%AF%E7%94%A8/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
      <category term="读写分离" scheme="http://icyxp.github.io/categories/%E9%AB%98%E5%8F%AF%E7%94%A8/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/"/>
    
    
      <category term="mysql" scheme="http://icyxp.github.io/tags/mysql/"/>
    
      <category term="keepalived" scheme="http://icyxp.github.io/tags/keepalived/"/>
    
      <category term="atlas" scheme="http://icyxp.github.io/tags/atlas/"/>
    
  </entry>
  
  <entry>
    <title>使用lsyncd实时同步文件</title>
    <link href="http://icyxp.github.io//blog/2016/07/lsyncd.html"/>
    <id>http://icyxp.github.io//blog/2016/07/lsyncd.html</id>
    <published>2016-07-15T09:30:00.000Z</published>
    <updated>2016-07-15T09:57:50.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Lysncd 实际上是lua语言封装了 inotify 和 rsync 工具，采用了 Linux 内核（2.6.13 及以后）里的 inotify 触发机制，然后通过rsync去差异同步，达到实时的效果。我认为它最令人称道的特性是，完美解决了 inotify + rsync海量文件同步带来的文件频繁发送文件列表的问题 —— 通过时间延迟或累计触发事件次数实现。另外，它的配置方式很简单，lua本身就是一种配置语言，可读性非常强。lsyncd也有多种工作模式可以选择，本地目录cp，本地目录rsync，远程目录rsyncssh。&lt;/p&gt;
&lt;p&gt;实现简单高效的本地目录同步备份（网络存储挂载也当作本地目录），一个命令搞定。&lt;/p&gt;
&lt;p&gt;github地址：&lt;a href=&quot;https://github.com/axkibe/lsyncd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/axkibe/lsyncd&lt;/a&gt; &lt;/p&gt;
&lt;h2 id=&quot;使用-lsyncd-本地目录实时备份&quot;&gt;&lt;a href=&quot;#使用-lsyncd-本地目录实时备份&quot; class=&quot;headerlink&quot; title=&quot;使用 lsyncd 本地目录实时备份&quot;&gt;&lt;/a&gt;使用 lsyncd 本地目录实时备份&lt;/h2&gt;&lt;p&gt;这一节实现的功能是，本地目录source实时同步到另一个目录target，而在source下有大量的文件，并且有部分目录和临时文件不需要同步。&lt;/p&gt;
&lt;h3 id=&quot;安装lsyncd&quot;&gt;&lt;a href=&quot;#安装lsyncd&quot; class=&quot;headerlink&quot; title=&quot;安装lsyncd&quot;&gt;&lt;/a&gt;安装lsyncd&lt;/h3&gt;&lt;p&gt;安装&lt;code&gt;lsyncd&lt;/code&gt;极为简单，已经收录在ubuntu的官方镜像源里，直接通过&lt;code&gt;apt-get install lsyncd&lt;/code&gt;就可以。&lt;br&gt;在Redhat系（我的环境是CentOS 6.2 x86_64 ），可以手动去下载 &lt;a href=&quot;ftp://195.220.108.108/linux/fedora/linux/updates/21/x86_64/l/lsyncd-2.1.5-6.fc21.x86_64.rpm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;lsyncd-2.1.5-6.fc21.x86_64.rpm&lt;/a&gt;，但首先你得安装两个依赖&lt;code&gt;yum install lua lua-devel&lt;/code&gt;。也可以通过在线安装，需要&lt;code&gt;epel-release&lt;/code&gt;扩展包：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install lsyncd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;源码编译安装&lt;/strong&gt;&lt;br&gt;从源码编译安装可以使用最新版的lsyncd程序，但必须要相应的依赖库文件和编译工具：&lt;code&gt;yum install lua lua-devel asciidoc cmake&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;从 &lt;a href=&quot;http://code.google.com/p/lsyncd/downloads/list&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;googlecode lsyncd&lt;/a&gt; 上下载的&lt;code&gt;lsyncd-2.1.5.tar.gz&lt;/code&gt;，直接&lt;code&gt;./configure、make &amp;amp;&amp;amp; make install&lt;/code&gt;就可以了。&lt;/p&gt;
&lt;p&gt;从github上下载&lt;a href=&quot;https://github.com/axkibe/lsyncd/archive/master.zip&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;lsyncd-master.zip&lt;/a&gt; 的2.1.5版本使用的是 cmake 编译工具，无法&lt;code&gt;./configure&lt;/code&gt;：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;uzip lsyncd-master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; lsyncd-master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cmake -DCMAKE_INSTALL_PREFIX=/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/lsyncd-2.1.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make &amp;amp;&amp;amp; make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我这个版本编译时有个小bug，如果按照&lt;code&gt;INSTALL&lt;/code&gt;在    &lt;code&gt;build&lt;/code&gt;目录中make，会提示：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[100%] Generating doc/lsyncd.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Updating the manpage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a2x: failed: &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; file not found: doc/lsyncd.1.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make[2]: *** [doc/lsyncd.1] Error 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make[1]: *** [CMakeFiles/manpage.dir/all] Error 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make: *** [all] Error 2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;解决办法是要么直接在解压目录下cmake，不要&lt;code&gt;mkdir build&lt;/code&gt;，要么在&lt;code&gt;CMakeList.txt&lt;/code&gt;中搜索doc字符串，在前面加上&lt;code&gt;${PROJECT_SOURCE_DIR}&lt;/code&gt;。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;lsyncd-conf&quot;&gt;&lt;a href=&quot;#lsyncd-conf&quot; class=&quot;headerlink&quot; title=&quot;lsyncd.conf&quot;&gt;&lt;/a&gt;lsyncd.conf&lt;/h3&gt;&lt;p&gt;下面都是在编译安装的情况下操作。&lt;/p&gt;
&lt;h4 id=&quot;lsyncd同步配置&quot;&gt;&lt;a href=&quot;#lsyncd同步配置&quot; class=&quot;headerlink&quot; title=&quot;lsyncd同步配置&quot;&gt;&lt;/a&gt;lsyncd同步配置&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# cd /usr/local/lsyncd-2.1.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# mkdir etc var&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# vi etc/lsyncd.conf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;settings &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    logfile      =&lt;span class=&quot;string&quot;&gt;&quot;/usr/local/lsyncd-2.1.5/var/lsyncd.log&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    statusFile   =&lt;span class=&quot;string&quot;&gt;&quot;/usr/local/lsyncd-2.1.5/var/lsyncd.status&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    inotifyMode  = &lt;span class=&quot;string&quot;&gt;&quot;CloseWrite&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    maxProcesses = 7,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -- nodaemon =&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sync &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    default.rsync,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;    = &lt;span class=&quot;string&quot;&gt;&quot;/tmp/src&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    target    = &lt;span class=&quot;string&quot;&gt;&quot;/tmp/dest&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -- excludeFrom = &lt;span class=&quot;string&quot;&gt;&quot;/etc/rsyncd.d/rsync_exclude.lst&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rsync     = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        binary    = &lt;span class=&quot;string&quot;&gt;&quot;/usr/bin/rsync&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        archive   = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        compress  = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        verbose   = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;到这启动 lsycnd 就可以完成实时同步了，默认的许多参数可以满足绝大部分需求，非常简单。&lt;/p&gt;
&lt;h4 id=&quot;lsyncd-conf配置选项说明&quot;&gt;&lt;a href=&quot;#lsyncd-conf配置选项说明&quot; class=&quot;headerlink&quot; title=&quot;lsyncd.conf配置选项说明&quot;&gt;&lt;/a&gt;lsyncd.conf配置选项说明&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;settings&lt;/strong&gt;&lt;br&gt;里面是全局设置，&lt;code&gt;--&lt;/code&gt;开头表示注释，下面是几个常用选项说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;logfile&lt;/code&gt; 定义日志文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stausFile&lt;/code&gt; 定义状态文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nodaemon=true&lt;/code&gt; 表示不启用守护模式，默认&lt;/li&gt;
&lt;li&gt;&lt;code&gt;statusInterval&lt;/code&gt; 将lsyncd的状态写入上面的statusFile的间隔，默认10秒&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inotifyMode&lt;/code&gt; 指定inotify监控的事件，默认是&lt;code&gt;CloseWrite&lt;/code&gt;，还可以是&lt;code&gt;Modify&lt;/code&gt;或&lt;code&gt;CloseWrite or Modify&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maxProcesses&lt;/code&gt; 同步进程的最大个数。假如同时有20个文件需要同步，而&lt;code&gt;maxProcesses = 8&lt;/code&gt;，则最大能看到有8个rysnc进程&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maxDelays&lt;/code&gt; 累计到多少所监控的事件激活一次同步，即使后面的&lt;code&gt;delay&lt;/code&gt;延迟时间还未到&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;sync&lt;/strong&gt;&lt;br&gt;里面是定义同步参数，可以继续使用&lt;code&gt;maxDelays&lt;/code&gt;来重写settings的全局变量。一般第一个参数指定lsyncd以什么模式运行：&lt;code&gt;rsync&lt;/code&gt;、&lt;code&gt;rsyncssh&lt;/code&gt;、&lt;code&gt;direct&lt;/code&gt;三种模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;default.rsync&lt;/code&gt;：本地目录间同步，使用rsync，也可以达到使用ssh形式的远程rsync效果，或daemon方式连接远程rsyncd进程；&lt;br&gt;&lt;code&gt;default.direct&lt;/code&gt; ：本地目录间同步，使用&lt;code&gt;cp&lt;/code&gt;、&lt;code&gt;rm&lt;/code&gt;等命令完成差异文件备份；&lt;br&gt;&lt;code&gt;default.rsyncssh&lt;/code&gt; ：同步到远程主机目录，rsync的ssh模式，需要使用key来认证&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;source&lt;/code&gt; 同步的源目录，使用绝对路径。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;target&lt;/code&gt; 定义目的地址.对应不同的模式有几种写法：&lt;br&gt;&lt;code&gt;/tmp/dest&lt;/code&gt; ：本地目录同步，可用于&lt;code&gt;direct&lt;/code&gt;和&lt;code&gt;rsync&lt;/code&gt;模式&lt;br&gt;&lt;code&gt;172.29.88.223:/tmp/dest&lt;/code&gt; ：同步到远程服务器目录，可用于&lt;code&gt;rsync&lt;/code&gt;和&lt;code&gt;rsyncssh&lt;/code&gt;模式，拼接的命令类似于&lt;code&gt;/usr/bin/rsync -ltsd --delete --include-from=- --exclude=* SOURCE TARGET&lt;/code&gt;，剩下的就是rsync的内容了，比如指定username，免密码同步&lt;br&gt;&lt;code&gt;172.29.88.223::module&lt;/code&gt; ：同步到远程服务器目录，用于&lt;code&gt;rsync&lt;/code&gt;模式&lt;br&gt;三种模式的示例会在后面给出。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;init&lt;/code&gt; 这是一个优化选项，当&lt;code&gt;init = false&lt;/code&gt;，只同步进程启动以后发生改动事件的文件，原有的目录即使有差异也不会同步。默认是&lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;delay&lt;/code&gt; 累计事件，等待rsync同步延时时间，默认15秒（最大累计到1000个不可合并的事件）。也就是15s内监控目录下发生的改动，会累积到一次rsync同步，避免过于频繁的同步。（可合并的意思是，15s内两次修改了同一文件，最后只同步最新的文件）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;excludeFrom&lt;/code&gt; 排除选项，后面指定排除的列表文件，如&lt;code&gt;excludeFrom = &amp;quot;/etc/lsyncd.exclude&amp;quot;&lt;/code&gt;，如果是简单的排除，可以使用&lt;code&gt;exclude = LIST&lt;/code&gt;。&lt;br&gt;这里的排除规则写法与原生rsync有点不同，更为简单：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;监控路径里的任何部分匹配到一个文本，都会被排除，例如&lt;code&gt;/bin/foo/bar&lt;/code&gt;可以匹配规则&lt;code&gt;foo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如果规则以斜线&lt;code&gt;/&lt;/code&gt;开头，则从头开始要匹配全部&lt;/li&gt;
&lt;li&gt;如果规则以&lt;code&gt;/&lt;/code&gt;结尾，则要匹配监控路径的末尾&lt;/li&gt;
&lt;li&gt;&lt;code&gt;?&lt;/code&gt;匹配任何字符，但不包括&lt;code&gt;/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*&lt;/code&gt;匹配0或多个字符，但不包括&lt;code&gt;/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;**&lt;/code&gt;匹配0或多个字符，可以是&lt;code&gt;/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;delete&lt;/code&gt; 为了保持target与souce完全同步，Lsyncd默认会&lt;code&gt;delete = true&lt;/code&gt;来允许同步删除。它除了&lt;code&gt;false&lt;/code&gt;，还有&lt;code&gt;startup&lt;/code&gt;、&lt;code&gt;running&lt;/code&gt;值，请参考 &lt;a href=&quot;https://github.com/axkibe/lsyncd/wiki/Lsyncd%202.1.x%20%E2%80%96%20Layer%204%20Config%20%E2%80%96%20Default%20Behavior&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Lsyncd 2.1.x ‖ Layer 4 Config ‖ Default Behavior&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;rsync&lt;/strong&gt;&lt;br&gt;（提示一下，&lt;code&gt;delete&lt;/code&gt;和&lt;code&gt;exclude&lt;/code&gt;本来都是&lt;strong&gt;rsync&lt;/strong&gt;的选项，上面是配置在sync中的，我想这样做的原因是为了减少rsync的开销）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;bwlimit&lt;/code&gt; 限速，单位kb/s，与rsync相同（这么重要的选项在文档里竟然没有标出）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compress&lt;/code&gt; 压缩传输默认为true。在带宽与cpu负载之间权衡，本地目录同步可以考虑把它设为&lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;perms&lt;/code&gt; 默认保留文件权限。&lt;/li&gt;
&lt;li&gt;其它rsync的选项&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其它还有rsyncssh模式独有的配置项，如&lt;code&gt;host&lt;/code&gt;、&lt;code&gt;targetdir&lt;/code&gt;、&lt;code&gt;rsync_path&lt;/code&gt;、&lt;code&gt;password_file&lt;/code&gt;，见后文示例。&lt;code&gt;rsyncOps={&amp;quot;-avz&amp;quot;,&amp;quot;--delete&amp;quot;}&lt;/code&gt;这样的写法在2.1.*版本已经不支持。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;lsyncd.conf&lt;/code&gt;可以有多个&lt;code&gt;sync&lt;/code&gt;，各自的source，各自的target，各自的模式，互不影响。&lt;/p&gt;
&lt;h3 id=&quot;启动lsyncd&quot;&gt;&lt;a href=&quot;#启动lsyncd&quot; class=&quot;headerlink&quot; title=&quot;启动lsyncd&quot;&gt;&lt;/a&gt;启动lsyncd&lt;/h3&gt;&lt;p&gt;使用命令加载配置文件，启动守护进程，自动同步目录操作。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lsyncd -log Exec /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/lsyncd-2.1.5/etc/lsyncd.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;lsyncd-conf其它模式示例&quot;&gt;&lt;a href=&quot;#lsyncd-conf其它模式示例&quot; class=&quot;headerlink&quot; title=&quot;lsyncd.conf其它模式示例&quot;&gt;&lt;/a&gt;lsyncd.conf其它模式示例&lt;/h3&gt;&lt;p&gt;以下配置本人都已经过验证可行，必须根据实际需要裁剪配置：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;settings &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    logfile =&lt;span class=&quot;string&quot;&gt;&quot;/usr/local/lsyncd-2.1.5/var/lsyncd.log&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    statusFile =&lt;span class=&quot;string&quot;&gt;&quot;/usr/local/lsyncd-2.1.5/var/lsyncd.status&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    inotifyMode = &lt;span class=&quot;string&quot;&gt;&quot;CloseWrite&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    maxProcesses = 8,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-- I. 本地目录同步，direct：cp/rm/mv。 适用：500+万文件，变动不大&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sync &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    default.direct,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;    = &lt;span class=&quot;string&quot;&gt;&quot;/tmp/src&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    target    = &lt;span class=&quot;string&quot;&gt;&quot;/tmp/dest&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    delay = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    maxProcesses = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-- II. 本地目录同步，rsync模式：rsync&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sync &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    default.rsync,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;    = &lt;span class=&quot;string&quot;&gt;&quot;/tmp/src&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    target    = &lt;span class=&quot;string&quot;&gt;&quot;/tmp/dest1&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    excludeFrom = &lt;span class=&quot;string&quot;&gt;&quot;/etc/rsyncd.d/rsync_exclude.lst&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rsync     = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        binary = &lt;span class=&quot;string&quot;&gt;&quot;/usr/bin/rsync&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        archive = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        compress = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bwlimit   = 2000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-- III. 远程目录同步，rsync模式 + rsyncd daemon&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sync &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    default.rsync,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;    = &lt;span class=&quot;string&quot;&gt;&quot;/tmp/src&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    target    = &lt;span class=&quot;string&quot;&gt;&quot;syncuser@172.29.88.223::module1&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    delete=&lt;span class=&quot;string&quot;&gt;&quot;running&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    exclude = &amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;.*&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;.tmp&quot;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    delay = 30,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rsync     = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        binary = &lt;span class=&quot;string&quot;&gt;&quot;/usr/bin/rsync&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        archive = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        compress = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        verbose   = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        password_file = &lt;span class=&quot;string&quot;&gt;&quot;/etc/rsyncd.d/rsync.pwd&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _extra    = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;--bwlimit=200&quot;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-- IV. 远程目录同步，rsync模式 + ssh shell&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sync &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    default.rsync,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;    = &lt;span class=&quot;string&quot;&gt;&quot;/tmp/src&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    target    = &lt;span class=&quot;string&quot;&gt;&quot;172.29.88.223:/tmp/dest&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -- target    = &lt;span class=&quot;string&quot;&gt;&quot;root@172.29.88.223:/remote/dest&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -- 上面target，注意如果是普通用户，必须拥有写权限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    maxDelays = 5,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    delay = 30,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -- init = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rsync     = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        binary = &lt;span class=&quot;string&quot;&gt;&quot;/usr/bin/rsync&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        archive = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        compress = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bwlimit   = 2000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        -- rsh = &lt;span class=&quot;string&quot;&gt;&quot;/usr/bin/ssh -p 22 -o StrictHostKeyChecking=no&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        -- 如果要指定其它端口，请用上面的rsh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-- V. 远程目录同步，rsync模式 + rsyncssh，效果与上面相同&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sync &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    default.rsyncssh,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;    = &lt;span class=&quot;string&quot;&gt;&quot;/tmp/src2&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    host      = &lt;span class=&quot;string&quot;&gt;&quot;172.29.88.223&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    targetdir = &lt;span class=&quot;string&quot;&gt;&quot;/remote/dir&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    excludeFrom = &lt;span class=&quot;string&quot;&gt;&quot;/etc/rsyncd.d/rsync_exclude.lst&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -- maxDelays = 5,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    delay = 0,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -- init = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rsync    = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        binary = &lt;span class=&quot;string&quot;&gt;&quot;/usr/bin/rsync&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        archive = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        compress = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        verbose   = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _extra = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;--bwlimit=2000&quot;&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ssh      = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        port  =  1234&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的内容几乎涵盖了所有同步的模式，其中第III个要求像rsync一样配置rsyncd服务端，见本文开头。第IV、V配置ssh方式同步，达到的效果相同，但实际同步时你会发现每次同步都会提示输入ssh的密码，可以通过以下方法解决：&lt;/p&gt;
&lt;p&gt;在远端被同步的服务器上开启ssh无密码登录，请注意用户身份：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;user$ ssh-keygen -t rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;一路回车...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/.ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user$ cat id_rsa.pub &amp;gt;&amp;gt; authorized_keys&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;把&lt;code&gt;id_rsa&lt;/code&gt;私钥拷贝到执行lsyncd的机器上&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;user$ chmod 600 ~/.ssh/id_rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;测试能否无密码登录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user$ ssh user@172.29.88.223&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;lsyncd的其它功能&quot;&gt;&lt;a href=&quot;#lsyncd的其它功能&quot; class=&quot;headerlink&quot; title=&quot;lsyncd的其它功能&quot;&gt;&lt;/a&gt;lsyncd的其它功能&lt;/h2&gt;&lt;p&gt;&lt;code&gt;lsyncd&lt;/code&gt;的功能不仅仅是同步，官方手册 &lt;a href=&quot;https://github.com/axkibe/lsyncd/wiki/Lsyncd%202.1.x%20%E2%80%96%20Layer%202%20Config%20%E2%80%96%20Advanced%20onAction&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Lsyncd 2.1.x ‖ Layer 2 Config ‖ Advanced onAction&lt;/a&gt; 高级功能提到，还可以监控某个目录下的文件，根据触发的事件自己定义要执行的命令，example是监控某个某个目录，只要是有jpg、gif、png格式的文件参数，就把它们转成pdf，然后同步到另一个目录。正好在我运维的一个项目中有这个需求，现在都是在java代码里转换，还容易出现异常，通过lsyncd可以代替这样的功能。但，门槛在于要会一点点lua语言（根据官方example还是可以写出来）。&lt;/p&gt;
&lt;p&gt;另外偶然想到个问题，同时设置了&lt;code&gt;maxDelays&lt;/code&gt;和&lt;code&gt;delay&lt;/code&gt;，当监控目录一直没有文件变化了，也会发生同步操作，虽然没有可rsync的文件。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;来源：&lt;a href=&quot;http://seanlook.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://seanlook.com/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Lysncd 实际上是lua语言封装了 inotify 和 rsync 工具，采用了 Linux 内核（2.6.13 及以后）里的 inotify 触发机制，然后通过rsync去差异同步，达到实时的效果。我认为它最令人称道的特性是，完美解决了 inotify + rsync海量文件同步带来的文件频繁发送文件列表的问题 —— 通过时间延迟或累计触发事件次数实现。另外，它的配置方式很简单，lua本身就是一种配置语言，可读性非常强。lsyncd也有多种工作模式可以选择，本地目录cp，本地目录rsync，远程目录rsyncssh。&lt;/p&gt;
&lt;p&gt;实现简单高效的本地目录同步备份（网络存储挂载也当作本地目录），一个命令搞定。&lt;/p&gt;
&lt;p&gt;github地址：&lt;a href=&quot;https://github.com/axkibe/lsyncd&quot;&gt;https://github.com/axkibe/lsyncd&lt;/a&gt; &lt;/p&gt;
&lt;h2 id=&quot;使用-lsyncd-本地目录实时备份&quot;&gt;&lt;a href=&quot;#使用-lsyncd-本地目录实时备份&quot; class=&quot;headerlink&quot; title=&quot;使用 lsyncd 本地目录实时备份&quot;&gt;&lt;/a&gt;使用 lsyncd 本地目录实时备份&lt;/h2&gt;&lt;p&gt;这一节实现的功能是，本地目录source实时同步到另一个目录target，而在source下有大量的文件，并且有部分目录和临时文件不需要同步。&lt;/p&gt;
&lt;h3 id=&quot;安装lsyncd&quot;&gt;&lt;a href=&quot;#安装lsyncd&quot; class=&quot;headerlink&quot; title=&quot;安装lsyncd&quot;&gt;&lt;/a&gt;安装lsyncd&lt;/h3&gt;&lt;p&gt;安装&lt;code&gt;lsyncd&lt;/code&gt;极为简单，已经收录在ubuntu的官方镜像源里，直接通过&lt;code&gt;apt-get install lsyncd&lt;/code&gt;就可以。&lt;br&gt;在Redhat系（我的环境是CentOS 6.2 x86_64 ），可以手动去下载 &lt;a href=&quot;ftp://195.220.108.108/linux/fedora/linux/updates/21/x86_64/l/lsyncd-2.1.5-6.fc21.x86_64.rpm&quot;&gt;lsyncd-2.1.5-6.fc21.x86_64.rpm&lt;/a&gt;，但首先你得安装两个依赖&lt;code&gt;yum install lua lua-devel&lt;/code&gt;。也可以通过在线安装，需要&lt;code&gt;epel-release&lt;/code&gt;扩展包：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install lsyncd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;源码编译安装&lt;/strong&gt;&lt;br&gt;从源码编译安装可以使用最新版的lsyncd程序，但必须要相应的依赖库文件和编译工具：&lt;code&gt;yum install lua lua-devel asciidoc cmake&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;从 &lt;a href=&quot;http://code.google.com/p/lsyncd/downloads/list&quot;&gt;googlecode lsyncd&lt;/a&gt; 上下载的&lt;code&gt;lsyncd-2.1.5.tar.gz&lt;/code&gt;，直接&lt;code&gt;./configure、make &amp;amp;&amp;amp; make install&lt;/code&gt;就可以了。&lt;/p&gt;
&lt;p&gt;从github上下载&lt;a href=&quot;https://github.com/axkibe/lsyncd/archive/master.zip&quot;&gt;lsyncd-master.zip&lt;/a&gt; 的2.1.5版本使用的是 cmake 编译工具，无法&lt;code&gt;./configure&lt;/code&gt;：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;uzip lsyncd-master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; lsyncd-master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cmake -DCMAKE_INSTALL_PREFIX=/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/lsyncd-2.1.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make &amp;amp;&amp;amp; make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我这个版本编译时有个小bug，如果按照&lt;code&gt;INSTALL&lt;/code&gt;在    &lt;code&gt;build&lt;/code&gt;目录中make，会提示：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[100%] Generating doc/lsyncd.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Updating the manpage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a2x: failed: &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; file not found: doc/lsyncd.1.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make[2]: *** [doc/lsyncd.1] Error 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make[1]: *** [CMakeFiles/manpage.dir/all] Error 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make: *** [all] Error 2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;解决办法是要么直接在解压目录下cmake，不要&lt;code&gt;mkdir build&lt;/code&gt;，要么在&lt;code&gt;CMakeList.txt&lt;/code&gt;中搜索doc字符串，在前面加上&lt;code&gt;${PROJECT_SOURCE_DIR}&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="实时同步" scheme="http://icyxp.github.io/categories/%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5/"/>
    
    
      <category term="lsyncd" scheme="http://icyxp.github.io/tags/lsyncd/"/>
    
      <category term="同步" scheme="http://icyxp.github.io/tags/%E5%90%8C%E6%AD%A5/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库开发规范</title>
    <link href="http://icyxp.github.io//blog/2016/07/mysql-mysql-develop-standard.html"/>
    <id>http://icyxp.github.io//blog/2016/07/mysql-mysql-develop-standard.html</id>
    <published>2016-07-15T07:15:00.000Z</published>
    <updated>2017-07-26T13:06:13.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;命名规范&quot;&gt;&lt;a href=&quot;#命名规范&quot; class=&quot;headerlink&quot; title=&quot;命名规范&quot;&gt;&lt;/a&gt;命名规范&lt;/h2&gt;&lt;h3 id=&quot;库名、表名、字段名必须使用小写字母，并采用下划线分割&quot;&gt;&lt;a href=&quot;#库名、表名、字段名必须使用小写字母，并采用下划线分割&quot; class=&quot;headerlink&quot; title=&quot;库名、表名、字段名必须使用小写字母，并采用下划线分割&quot;&gt;&lt;/a&gt;库名、表名、字段名必须使用小写字母，并采用下划线分割&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;MySQL有配置参数lower_case_table_names=1，即库表名以小写存储，大小写不敏感。如果是0，则库表名以实际情况存储，大小写敏感；如果是2，以实际情况存储，但以小写比较。&lt;/li&gt;
&lt;li&gt;如果大小写混合使用，可能存在abc，Abc，ABC等多个表共存，容易导致混乱。&lt;/li&gt;
&lt;li&gt;字段名显示区分大小写，但实际使⽤时不区分，即不可以建立两个名字一样但大小写不一样的字段。&lt;/li&gt;
&lt;li&gt;为了统一规范， 库名、表名、字段名使用小写字母。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;库名以-d-开头，表名以-t-开头，字段名以-f-开头&quot;&gt;&lt;a href=&quot;#库名以-d-开头，表名以-t-开头，字段名以-f-开头&quot; class=&quot;headerlink&quot; title=&quot;库名以 d 开头，表名以 t 开头，字段名以 f_ 开头&quot;&gt;&lt;/a&gt;库名以 d 开头，表名以 t 开头，字段名以 f_ 开头&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;比如表 &lt;code&gt;t_crm_relation&lt;/code&gt;，中间的 crm 代表业务模块名&lt;/li&gt;
&lt;li&gt;视图以&lt;code&gt;view_&lt;/code&gt;开头，事件以&lt;code&gt;event_&lt;/code&gt;开头，触发器以&lt;code&gt;trig_&lt;/code&gt;开头，存储过程以&lt;code&gt;proc_&lt;/code&gt;开头，函数以&lt;code&gt;func_&lt;/code&gt;开头&lt;/li&gt;
&lt;li&gt;普通索引以&lt;code&gt;idx_col1_col2&lt;/code&gt;命名，唯一索引以&lt;code&gt;uk_col1_col2&lt;/code&gt;命名（可去掉f_公共部分）。如 &lt;code&gt;idx_companyid_corpid_contacttime&lt;/code&gt;(f_company_id, f_corp_id, f_contact_time)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;库名、表名、字段名禁止超过32个字符，需见名知意&quot;&gt;&lt;a href=&quot;#库名、表名、字段名禁止超过32个字符，需见名知意&quot; class=&quot;headerlink&quot; title=&quot;库名、表名、字段名禁止超过32个字符，需见名知意&quot;&gt;&lt;/a&gt;库名、表名、字段名禁止超过32个字符，需见名知意&lt;/h3&gt;&lt;p&gt;库名、表名、字段名支持最多64个字符，但为了统一规范、易于辨识以及减少传输量，禁止超过32个字符&lt;/p&gt;
&lt;h3 id=&quot;临时库、表名须以tmp加日期为后缀&quot;&gt;&lt;a href=&quot;#临时库、表名须以tmp加日期为后缀&quot; class=&quot;headerlink&quot; title=&quot;临时库、表名须以tmp加日期为后缀&quot;&gt;&lt;/a&gt;临时库、表名须以tmp加日期为后缀&lt;/h3&gt;&lt;p&gt;如 t_crm_relation_tmp0425。备份表也类似，形如 &lt;code&gt;_bak20160425&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;按日期时间分表须符合-YYYY-MM-DD-格式&quot;&gt;&lt;a href=&quot;#按日期时间分表须符合-YYYY-MM-DD-格式&quot; class=&quot;headerlink&quot; title=&quot;按日期时间分表须符合_YYYY[MM][DD]格式&quot;&gt;&lt;/a&gt;按日期时间分表须符合_YYYY[MM][DD]格式&lt;/h3&gt;&lt;p&gt;这也是为将来有可能分表做准备的，比如&lt;code&gt;t_crm_ec_record_201403&lt;/code&gt;，但像 t_crm_contact_at201506就打破了这种规范。&lt;br&gt;不具有时间特性的，直接以 &lt;code&gt;t_tbname_001&lt;/code&gt; 这样的方式命名。&lt;/p&gt;
&lt;h2 id=&quot;库表基础规范&quot;&gt;&lt;a href=&quot;#库表基础规范&quot; class=&quot;headerlink&quot; title=&quot;库表基础规范&quot;&gt;&lt;/a&gt;库表基础规范&lt;/h2&gt;&lt;h3 id=&quot;使用Innodb存储引擎&quot;&gt;&lt;a href=&quot;#使用Innodb存储引擎&quot; class=&quot;headerlink&quot; title=&quot;使用Innodb存储引擎&quot;&gt;&lt;/a&gt;使用Innodb存储引擎&lt;/h3&gt;&lt;p&gt;5.5版本开始mysql默认存储引擎就是InnoDB，5.7版本开始，系统表都放弃MyISAM了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;表字符集统一使用UTF8&quot;&gt;&lt;a href=&quot;#表字符集统一使用UTF8&quot; class=&quot;headerlink&quot; title=&quot;表字符集统一使用UTF8&quot;&gt;&lt;/a&gt;表字符集统一使用UTF8&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;UTF8字符集存储汉字占用3个字节，存储英文字符占用一个字节&lt;/li&gt;
&lt;li&gt;校对字符集使用默认的 utf8_general_ci&lt;/li&gt;
&lt;li&gt;连接的客户端也使用utf8，建立连接时指定charset或SET NAMES UTF8;。（对于已经在项目中长期使用latin1的，救不了了）&lt;/li&gt;
&lt;li&gt;如果遇到EMOJ等表情符号的存储需求，可申请使用UTF8MB4字符集&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;所有表都要添加注释&quot;&gt;&lt;a href=&quot;#所有表都要添加注释&quot; class=&quot;headerlink&quot; title=&quot;所有表都要添加注释&quot;&gt;&lt;/a&gt;所有表都要添加注释&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;尽量给字段也添加注释&lt;/li&gt;
&lt;li&gt;类status型需指明主要值的含义，如”0-离线，1-在线”&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;控制单表字段数量&quot;&gt;&lt;a href=&quot;#控制单表字段数量&quot; class=&quot;headerlink&quot; title=&quot;控制单表字段数量&quot;&gt;&lt;/a&gt;控制单表字段数量&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;单表字段数上限30左右，再多的话考虑垂直分表，一是冷热数据分离，二是大字段分离，三是常在一起做条件和返回列的不分离。&lt;/li&gt;
&lt;li&gt;表字段控制少而精，可以提高IO效率，内存缓存更多有效数据，从而提高响应速度和并发能力，后续 alter table 也更快。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;所有表都必须要显式指定主键&quot;&gt;&lt;a href=&quot;#所有表都必须要显式指定主键&quot; class=&quot;headerlink&quot; title=&quot;所有表都必须要显式指定主键&quot;&gt;&lt;/a&gt;所有表都必须要显式指定主键&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;主键尽量采用自增方式，InnoDB表实际是一棵索引组织表，顺序存储可以提高存取效率，充分利用磁盘空间。还有对一些复杂查询可能需要自连接来优化时需要用到。&lt;/li&gt;
&lt;li&gt;需要全局唯一主键时，使用外部发号器ticket server（建设中）&lt;/li&gt;
&lt;li&gt;如果没有主键或唯一索引，update/delete是通过所有字段来定位操作的行，相当于每行就是一次全表扫描&lt;/li&gt;
&lt;li&gt;少数情况可以使用联合唯一主键，需与DBA协商&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;不强制使用外键参考&quot;&gt;&lt;a href=&quot;#不强制使用外键参考&quot; class=&quot;headerlink&quot; title=&quot;不强制使用外键参考&quot;&gt;&lt;/a&gt;不强制使用外键参考&lt;/h3&gt;&lt;p&gt;即使2个表的字段有明确的外键参考关系，也不使用 FOREIGN KEY ，因为新纪录会去主键表做校验，影响性能。&lt;/p&gt;
&lt;h3 id=&quot;适度使用存储过程、视图，禁止使用触发器、事件&quot;&gt;&lt;a href=&quot;#适度使用存储过程、视图，禁止使用触发器、事件&quot; class=&quot;headerlink&quot; title=&quot;适度使用存储过程、视图，禁止使用触发器、事件&quot;&gt;&lt;/a&gt;适度使用存储过程、视图，禁止使用触发器、事件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;存储过程（procedure）虽然可以简化业务端代码，在传统企业写复杂逻辑时可能会用到，而在互联网企业变更是很频繁的，在分库分表的情况下要升级一个存储过程相当麻烦。又因为它是不记录log的，所以也不方便debug性能问题。如果使用过程，一定考虑如果执行失败的情况。&lt;/li&gt;
&lt;li&gt;使用视图一定程度上也是为了降低代码里SQL的复杂度，但有时候为了视图的通用性会损失性能（比如返回不必要的字段）。&lt;/li&gt;
&lt;li&gt;触发器（trigger）也是同样，但也不应该通过它去约束数据的强一致性，mysql只支持“基于行的触发”，也就是说，触发器始终是针对一条记录的，而不是针对整个sql语句的，如果变更的数据集非常大的话，效率会很低。掩盖一条sql背后的工作，一旦出现问题将是灾难性的，但又很难快速分析和定位。再者需要ddl时无法使用pt-osc工具。放在transaction执行。&lt;/li&gt;
&lt;li&gt;事件（event）也是一种偷懒的表现，目前已经遇到数次由于定时任务执行失败影响业务的情况，而且mysql无法对它做失败预警。建立专门的 job scheduler 平台。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;单表数据量控制在5000w以内&quot;&gt;&lt;a href=&quot;#单表数据量控制在5000w以内&quot; class=&quot;headerlink&quot; title=&quot;单表数据量控制在5000w以内&quot;&gt;&lt;/a&gt;单表数据量控制在5000w以内&lt;/h3&gt;&lt;h3 id=&quot;数据库中不允许存储明文密码&quot;&gt;&lt;a href=&quot;#数据库中不允许存储明文密码&quot; class=&quot;headerlink&quot; title=&quot;数据库中不允许存储明文密码&quot;&gt;&lt;/a&gt;数据库中不允许存储明文密码&lt;/h3&gt;&lt;h2 id=&quot;字段规范&quot;&gt;&lt;a href=&quot;#字段规范&quot; class=&quot;headerlink&quot; title=&quot;字段规范&quot;&gt;&lt;/a&gt;字段规范&lt;/h2&gt;&lt;h3 id=&quot;char、varchar、text等字符串类型定义&quot;&gt;&lt;a href=&quot;#char、varchar、text等字符串类型定义&quot; class=&quot;headerlink&quot; title=&quot;char、varchar、text等字符串类型定义&quot;&gt;&lt;/a&gt;char、varchar、text等字符串类型定义&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;对于长度基本固定的列，如果该列恰好更新又特别频繁，适合char&lt;/li&gt;
&lt;li&gt;varchar虽然存储变长字符串，但不可太小也不可太大。UTF8最多能存21844个汉字，或65532个英文&lt;/li&gt;
&lt;li&gt;varbinary(M)保存的是二进制字符串，它保存的是字节而不是字符，所以没有字符集的概念，M长度0-255（字节）。只用于排序或比较时大小写敏感的类型，不包括密码存储&lt;/li&gt;
&lt;li&gt;TEXT类型与VARCHAR都类似，存储可变长度，最大限制也是2^16，但是它20bytes以后的内容是在数据页以外的空间存储（row_format=dynamic），对它的使用需要多一次寻址，没有默认值。&lt;br&gt;一般用于存放容量平均都很大、操作没有其它字段那样频繁的值。&lt;br&gt;网上部分文章说要避免使用text和blob，要知道如果纯用varchar可能会导致行溢出，效果差不多，但因为每行占用字节数过多，会导致buffer_pool能缓存的数据行、页下降。另外text和blob上面一般不会去建索引，而是利用sphinx之类的第三方全文搜索引擎，如果确实要创建（前缀）索引，那就会影响性能。凡事看具体场景。&lt;br&gt;另外尽可能把text/blob拆到另一个表中&lt;/li&gt;
&lt;li&gt;BLOB可以看出varbinary的扩展版本，内容以二进制字符串存储，无字符集，区分大小写，有一种经常提但不用的场景：不要在数据库里存储图片。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;int、tinyint、decimal等数字类型定义&quot;&gt;&lt;a href=&quot;#int、tinyint、decimal等数字类型定义&quot; class=&quot;headerlink&quot; title=&quot;int、tinyint、decimal等数字类型定义&quot;&gt;&lt;/a&gt;int、tinyint、decimal等数字类型定义&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用tinyint来代替 enum和boolean&lt;br&gt;ENUM类型在需要修改或增加枚举值时，需要在线DDL，成本较高；ENUM列值如果含有数字类型，可能会引起默认值混淆&lt;br&gt;tinyint使用1个字节，一般用于status,type,flag的列&lt;/li&gt;
&lt;li&gt;建议使用 UNSIGNED 存储非负数值&lt;br&gt;相比不使用 unsigned，可以扩大一倍使用数值范围&lt;/li&gt;
&lt;li&gt;int使用固定4个字节存储，int(11)与int(4)只是显示宽度的区别&lt;/li&gt;
&lt;li&gt;使用Decimal 代替float/double存储精确浮点数&lt;br&gt;对于货币、金额这样的类型，使用decimal，如 decimal(9,2)。float默认只能能精确到6位有效数字&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;timestamp与datetime选择&quot;&gt;&lt;a href=&quot;#timestamp与datetime选择&quot; class=&quot;headerlink&quot; title=&quot;timestamp与datetime选择&quot;&gt;&lt;/a&gt;timestamp与datetime选择&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;datetime 和 timestamp类型所占的存储空间不同，前者8个字节，后者4个字节，这样造成的后果是两者能表示的时间范围不同。前者范围为1000-01-01 00:00:00 ~ 9999-12-31 23:59:59，后者范围为 1970-01-01 08:00:01 到 2038-01-19 11:14:07 。所以 TIMESTAMP 支持的范围比 DATATIME 要小。&lt;/li&gt;
&lt;li&gt;timestamp可以在insert/update行时，自动更新时间字段（如 f_set_time timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP），但一个表只能有一个这样的定义。&lt;/li&gt;
&lt;li&gt;timestamp显示与时区有关，内部总是以 UTC 毫秒 来存的。还受到严格模式的限制&lt;/li&gt;
&lt;li&gt;优先使用timestamp，datetime也没问题&lt;/li&gt;
&lt;li&gt;where条件里不要对时间列上使用时间函数&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;建议字段都定义为NOT-NULL&quot;&gt;&lt;a href=&quot;#建议字段都定义为NOT-NULL&quot; class=&quot;headerlink&quot; title=&quot;建议字段都定义为NOT NULL&quot;&gt;&lt;/a&gt;建议字段都定义为NOT NULL&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;如果是索引字段，一定要定义为not null 。因为null值会影响cordinate统计，影响优化器对索引的选择&lt;/li&gt;
&lt;li&gt;如果不能保证insert时一定有值过来，定义时使用default ‘’ ，或 0&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;同一意义的字段定义必须相同&quot;&gt;&lt;a href=&quot;#同一意义的字段定义必须相同&quot; class=&quot;headerlink&quot; title=&quot;同一意义的字段定义必须相同&quot;&gt;&lt;/a&gt;同一意义的字段定义必须相同&lt;/h3&gt;&lt;p&gt;比如不同表中都有 f_user_id 字段，那么它的类型、字段长度要设计成一样&lt;/p&gt;
&lt;h2 id=&quot;索引规范&quot;&gt;&lt;a href=&quot;#索引规范&quot; class=&quot;headerlink&quot; title=&quot;索引规范&quot;&gt;&lt;/a&gt;索引规范&lt;/h2&gt;&lt;h3 id=&quot;任何新的select-update-delete上线，都要先explain，看索引使用情况&quot;&gt;&lt;a href=&quot;#任何新的select-update-delete上线，都要先explain，看索引使用情况&quot; class=&quot;headerlink&quot; title=&quot;任何新的select,update,delete上线，都要先explain，看索引使用情况&quot;&gt;&lt;/a&gt;任何新的select,update,delete上线，都要先explain，看索引使用情况&lt;/h3&gt;&lt;p&gt;尽量避免extra列出现：Using File Sort，Using Temporary，rows超过1000的要谨慎上线。&lt;br&gt;&lt;strong&gt;&lt;code&gt;explain解读&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt;：ALL, index, range, ref, eq_ref, const, system, NULL（从左到右，性能从差到好）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;possible_keys&lt;/code&gt;：指出MySQL能使用哪个索引在表中找到记录，查询涉及到的字段上若存在索引，则该索引将被列出，但不一定被查询使用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;key&lt;/code&gt;：表示MySQL实际决定使用的键（索引）&lt;br&gt;如果没有选择索引，键是NULL。要想强制MySQL使用或忽视possible_keys列中的索引，在查询中使用FORCE INDEX、USE INDEX或者IGNORE INDEX&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ref&lt;/code&gt;：表示选择 key 列上的索引，哪些列或常量被用于查找索引列上的值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rows&lt;/code&gt;：根据表统计信息及索引选用情况，估算的找到所需的记录所需要读取的行数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Extra&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Using temporary&lt;/code&gt;：表示MySQL需要使用临时表来存储结果集，常见于排序和分组查询&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Using filesort&lt;/code&gt;：MySQL中无法利用索引完成的排序操作称为“文件排序”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;索引个数限制&quot;&gt;&lt;a href=&quot;#索引个数限制&quot; class=&quot;headerlink&quot; title=&quot;索引个数限制&quot;&gt;&lt;/a&gt;索引个数限制&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;索引是双刃剑，会增加维护负担，增大IO压力，索引占用空间是成倍增加的&lt;/li&gt;
&lt;li&gt;单张表的索引数量控制在5个以内，或不超过表字段个数的20%。若单张表多个字段在查询需求上都要单独用到索引，需要经过DBA评估。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;避免冗余索引&quot;&gt;&lt;a href=&quot;#避免冗余索引&quot; class=&quot;headerlink&quot; title=&quot;避免冗余索引&quot;&gt;&lt;/a&gt;避免冗余索引&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;InnoDB表是一棵索引组织表，主键是和数据放在一起的聚集索引，普通索引最终指向的是主键地址，所以把主键做最后一列是多余的。如f_crm_id作为主键，联合索引(f_user_id,f_crm_id)上的f_crm_id就完全多余&lt;/li&gt;
&lt;li&gt;(a,b,c)、(a,b)，后者为冗余索引。可以利用前缀索引来达到加速目的，减轻维护负担&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;没有特殊要求，使用自增id作为主键&quot;&gt;&lt;a href=&quot;#没有特殊要求，使用自增id作为主键&quot; class=&quot;headerlink&quot; title=&quot;没有特殊要求，使用自增id作为主键&quot;&gt;&lt;/a&gt;没有特殊要求，使用自增id作为主键&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;主键是一种聚集索引，顺序写入。组合唯一索引作为主键的话，是随机写入，适合写少读多的表&lt;/li&gt;
&lt;li&gt;主键不允许更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;索引尽量建在选择性高的列上&quot;&gt;&lt;a href=&quot;#索引尽量建在选择性高的列上&quot; class=&quot;headerlink&quot; title=&quot;索引尽量建在选择性高的列上&quot;&gt;&lt;/a&gt;索引尽量建在选择性高的列上&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;不在低基数列上建立索引，例如性别、类型。但有一种情况，idx_feedbackid_type (f_feedback_id,f_type)，如果经常用 f_type=1 比较，而且能过滤掉90%行，那这个组合索引就值得创建。有时候同样的查询语句，由于条件取值不同导致使用不同的索引，也是这个道理。&lt;/li&gt;
&lt;li&gt;索引选择性计算方法（基数 ÷ 数据行数）&lt;br&gt;Selectivity = Cardinality / Total Rows = select count(distinct col1)/count(*) from tbname，越接近1说明col1上使用索引的过滤效果越好&lt;/li&gt;
&lt;li&gt;走索引扫描行数超过30%时，改全表扫描&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;最左前缀原则&quot;&gt;&lt;a href=&quot;#最左前缀原则&quot; class=&quot;headerlink&quot; title=&quot;最左前缀原则&quot;&gt;&lt;/a&gt;最左前缀原则&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;mysql使用联合索引时，从左向右匹配，遇到断开或者范围查询时，无法用到后续的索引列&lt;br&gt;比如索引idx_c1_c2_c3 (c1,c2,c3)，相当于创建了(c1)、(c1,c2)、(c1,c2,c3)三个索引，where条件包含上面三种情况的字段比较则可以用到索引，但像 where c1=a and c3=c 只能用到c1列的索引，像 c2=b and c3=c等情况就完全用不到这个索引&lt;/li&gt;
&lt;li&gt;遇到范围查询(&amp;gt;、&amp;lt;、between、like)也会停止索引匹配，比如 c1=a and c2 &amp;gt; 2 and c3=c，只有c1,c2列上的比较能用到索引，(c1,c2,c3)排列的索引才可能会都用上&lt;/li&gt;
&lt;li&gt;where条件里面字段的顺序与索引顺序无关，mysql优化器会自动调整顺序&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;前缀索引&quot;&gt;&lt;a href=&quot;#前缀索引&quot; class=&quot;headerlink&quot; title=&quot;前缀索引&quot;&gt;&lt;/a&gt;前缀索引&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;对超过30个字符长度的列创建索引时，考虑使用前缀索引，如 idx_cs_guid2 (f_cs_guid(26))表示截取前26个字符做索引，既可以提高查找效率，也可以节省空间&lt;/li&gt;
&lt;li&gt;前缀索引也有它的缺点是，如果在该列上 ORDER BY 或 GROUP BY 时无法使用索引，也不能把它们用作覆盖索引(Covering Index)&lt;/li&gt;
&lt;li&gt;如果在varbinary或blob这种以二进制存储的列上建立前缀索引，要考虑字符集，括号里表示的是字节数&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;合理使用覆盖索引减少IO&quot;&gt;&lt;a href=&quot;#合理使用覆盖索引减少IO&quot; class=&quot;headerlink&quot; title=&quot;合理使用覆盖索引减少IO&quot;&gt;&lt;/a&gt;合理使用覆盖索引减少IO&lt;/h3&gt;&lt;p&gt;INNODB存储引擎中，secondary index(非主键索引，又称为辅助索引、二级索引)没有直接存储行地址，而是存储主键值。&lt;br&gt;如果用户需要查询secondary index中所不包含的数据列，则需要先通过secondary index查找到主键值，然后再通过主键查询到其他数据列，因此需要查询两次。覆盖索引则可以在一个索引中获取所有需要的数据列，从而避免回表进行二次查找，节省IO因此效率较高。&lt;br&gt;例如SELECT email，uid FROM user_email WHERE uid=xx，如果uid不是主键，适当时候可以将索引添加为index(uid，email)，以获得性能提升。&lt;/p&gt;
&lt;h3 id=&quot;尽量不要在频繁更新的列上创建索引&quot;&gt;&lt;a href=&quot;#尽量不要在频繁更新的列上创建索引&quot; class=&quot;headerlink&quot; title=&quot;尽量不要在频繁更新的列上创建索引&quot;&gt;&lt;/a&gt;尽量不要在频繁更新的列上创建索引&lt;/h3&gt;&lt;p&gt;如不在定义了 ON UPDATE CURRENT_STAMP 的列上创建索引，维护成本太高（好在mysql有insert buffer，会合并索引的插入）&lt;/p&gt;
&lt;h2 id=&quot;SQL设计&quot;&gt;&lt;a href=&quot;#SQL设计&quot; class=&quot;headerlink&quot; title=&quot;SQL设计&quot;&gt;&lt;/a&gt;SQL设计&lt;/h2&gt;&lt;h3 id=&quot;杜绝直接-SELECT-读取全部字段&quot;&gt;&lt;a href=&quot;#杜绝直接-SELECT-读取全部字段&quot; class=&quot;headerlink&quot; title=&quot;杜绝直接 SELECT * 读取全部字段&quot;&gt;&lt;/a&gt;杜绝直接 SELECT * 读取全部字段&lt;/h3&gt;&lt;p&gt;即使需要所有字段，减少网络带宽消耗，能有效利用覆盖索引，表结构变更对程序基本无影响&lt;/p&gt;
&lt;h3 id=&quot;能确定返回结果只有一条时，使用-limit-1&quot;&gt;&lt;a href=&quot;#能确定返回结果只有一条时，使用-limit-1&quot; class=&quot;headerlink&quot; title=&quot;能确定返回结果只有一条时，使用 limit 1&quot;&gt;&lt;/a&gt;能确定返回结果只有一条时，使用 limit 1&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;在保证数据不会有误的前提下&lt;/strong&gt;，能确定结果集数量时，多使用limit，尽快的返回结果。&lt;/p&gt;
&lt;h3 id=&quot;小心隐式类型转换&quot;&gt;&lt;a href=&quot;#小心隐式类型转换&quot; class=&quot;headerlink&quot; title=&quot;小心隐式类型转换&quot;&gt;&lt;/a&gt;小心隐式类型转换&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;转换规则&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a. 两个参数至少有一个是 NULL 时，比较的结果也是 NULL，例外是使用 &amp;lt;=&amp;gt; 对两个 NULL 做比较时会返回 1，这两种情况都不需要做类型转换&lt;br&gt;b. 两个参数都是字符串，会按照字符串来比较，不做类型转换&lt;br&gt;c. 两个参数都是整数，按照整数来比较，不做类型转换&lt;br&gt;d. 十六进制的值和非数字做比较时，会被当做二进制串&lt;br&gt;e. 有一个参数是 TIMESTAMP 或 DATETIME，并且另外一个参数是常量，常量会被转换为 timestamp&lt;br&gt;f. 有一个参数是 decimal 类型，如果另外一个参数是 decimal 或者整数，会将整数转换为 decimal 后进行比较，如果另外一个参数是浮点数，则会把 decimal 转换为浮点数进行比较&lt;br&gt;g. 所有其他情况下，两个参数都会被转换为浮点数再进行比较。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果一个索引建立在string类型上，如果这个字段和一个int类型的值比较，符合第 g 条。如f_phone定义的类型是varchar，但where使用f_phone in (098890)，两个参数都会被当成成浮点型。发生这个隐式转换并不是最糟的，最糟的是string转换后的float，mysql无法使用索引，这才导致了性能问题。如果是 f_user_id = ‘1234567’ 的情况，符合第 b 条,直接把数字当字符串比较。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;禁止在where条件列上使用函数&quot;&gt;&lt;a href=&quot;#禁止在where条件列上使用函数&quot; class=&quot;headerlink&quot; title=&quot;禁止在where条件列上使用函数&quot;&gt;&lt;/a&gt;禁止在where条件列上使用函数&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;会导致索引失效，如lower(email)，f_qq % 4。可放到右边的常量上计算&lt;/li&gt;
&lt;li&gt;返回小结果集不是很大的情况下，可以对返回列使用函数，简化程序开发&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;使用like模糊匹配，-不要放首位&quot;&gt;&lt;a href=&quot;#使用like模糊匹配，-不要放首位&quot; class=&quot;headerlink&quot; title=&quot;使用like模糊匹配，%不要放首位&quot;&gt;&lt;/a&gt;使用like模糊匹配，%不要放首位&lt;/h3&gt;&lt;p&gt;会导致索引失效，有这种搜索需求是，考虑其它方案，如sphinx全文搜索&lt;/p&gt;
&lt;h3 id=&quot;涉及到复杂sql时，务必先参考已有索引设计，先explain&quot;&gt;&lt;a href=&quot;#涉及到复杂sql时，务必先参考已有索引设计，先explain&quot; class=&quot;headerlink&quot; title=&quot;涉及到复杂sql时，务必先参考已有索引设计，先explain&quot;&gt;&lt;/a&gt;涉及到复杂sql时，务必先参考已有索引设计，先explain&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;简单SQL拆分，不以代码处理复杂为由。&lt;/li&gt;
&lt;li&gt;比如 OR 条件： f_phone=’10000’ or f_mobile=’10000’，两个字段各自有索引，但只能用到其中一个。可以拆分成2个sql，或者union all。&lt;/li&gt;
&lt;li&gt;先explain的好处是可以为了利用索引，增加更多查询限制条件&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;使用join时，where条件尽量使用充分利用同一表上的索引&quot;&gt;&lt;a href=&quot;#使用join时，where条件尽量使用充分利用同一表上的索引&quot; class=&quot;headerlink&quot; title=&quot;使用join时，where条件尽量使用充分利用同一表上的索引&quot;&gt;&lt;/a&gt;使用join时，where条件尽量使用充分利用同一表上的索引&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;如 select t1.a,t2.b * from t1,t2 and t1.a=t2.a and t1.b=123 and t2.c= 4 ，如果t1.c与t2.c字段相同，那么t1上的索引(b,c)就只用到b了。此时如果把where条件中的t2.c=4改成t1.c=4，那么可以用到完整的索引&lt;/li&gt;
&lt;li&gt;这种情况可能会在字段冗余设计（反范式）时出现&lt;/li&gt;
&lt;li&gt;正确选取inner join和left join&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;少用子查询，改用join&quot;&gt;&lt;a href=&quot;#少用子查询，改用join&quot; class=&quot;headerlink&quot; title=&quot;少用子查询，改用join&quot;&gt;&lt;/a&gt;少用子查询，改用join&lt;/h3&gt;&lt;p&gt;小于5.6版本时，子查询效率很低，不像Oracle那样先计算子查询后外层查询。5.6版本开始得到优化&lt;/p&gt;
&lt;h3 id=&quot;考虑使用union-all，少使用union，注意考虑去重&quot;&gt;&lt;a href=&quot;#考虑使用union-all，少使用union，注意考虑去重&quot; class=&quot;headerlink&quot; title=&quot;考虑使用union all，少使用union，注意考虑去重&quot;&gt;&lt;/a&gt;考虑使用union all，少使用union，注意考虑去重&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;union all不去重，而少了排序操作，速度相对比union要快，如果没有去重的需求，优先使用union all&lt;/li&gt;
&lt;li&gt;如果UNION结果中有使用limit，在2个子SQL可能有许多返回值的情况下，各自加上limit。如果还有order by，请找DBA。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;IN的内容尽量不超过200个&quot;&gt;&lt;a href=&quot;#IN的内容尽量不超过200个&quot; class=&quot;headerlink&quot; title=&quot;IN的内容尽量不超过200个&quot;&gt;&lt;/a&gt;IN的内容尽量不超过200个&lt;/h3&gt;&lt;p&gt;超过500个值使用批量的方式，否则一次执行会影响数据库的并发能力，因为单SQL只能且一直占用单CPU，而且可能导致主从复制延迟&lt;/p&gt;
&lt;h3 id=&quot;拒绝大事务&quot;&gt;&lt;a href=&quot;#拒绝大事务&quot; class=&quot;headerlink&quot; title=&quot;拒绝大事务&quot;&gt;&lt;/a&gt;拒绝大事务&lt;/h3&gt;&lt;p&gt;比如在一个事务里进行多个select，多个update，如果是高频事务，会严重影响MySQL并发能力，因为事务持有的锁等资源只在事务rollback/commit时才能释放。但同时也要权衡数据写入的一致性。&lt;/p&gt;
&lt;h3 id=&quot;避免使用is-null-is-not-null这样的比较&quot;&gt;&lt;a href=&quot;#避免使用is-null-is-not-null这样的比较&quot; class=&quot;headerlink&quot; title=&quot;避免使用is null, is not null这样的比较&quot;&gt;&lt;/a&gt;避免使用is null, is not null这样的比较&lt;/h3&gt;&lt;h3 id=&quot;order-by-limit&quot;&gt;&lt;a href=&quot;#order-by-limit&quot; class=&quot;headerlink&quot; title=&quot;order by .. limit&quot;&gt;&lt;/a&gt;order by .. limit&lt;/h3&gt;&lt;p&gt;这种查询更多的是通过索引去优化，但order by的字段有讲究，比如主键id与f_time都是顺序递增，那就可以考虑order by id而非 f_time 。&lt;/p&gt;
&lt;h3 id=&quot;c1-lt-a-order-by-c2&quot;&gt;&lt;a href=&quot;#c1-lt-a-order-by-c2&quot; class=&quot;headerlink&quot; title=&quot;c1 &amp;lt; a order by c2&quot;&gt;&lt;/a&gt;c1 &amp;lt; a order by c2&lt;/h3&gt;&lt;p&gt;与上面不同的是，order by之前有个范围查询，由前面的内容可知，用不到类似(c1,c2)的索引，但是可以利用(c2,c1)索引。另外还可以改写成join的方式实现。&lt;/p&gt;
&lt;h3 id=&quot;分页优化&quot;&gt;&lt;a href=&quot;#分页优化&quot; class=&quot;headerlink&quot; title=&quot;分页优化&quot;&gt;&lt;/a&gt;分页优化&lt;/h3&gt;&lt;p&gt;建议使用合理的分页方式以提高分页效率，大页情况下不使用跳跃式分页&lt;br&gt;假如有类似下面分页语句:&lt;br&gt;SELECT FROM table1 ORDER BY ftime DESC LIMIT 10000,10;&lt;br&gt;这种分页方式会导致大量的io，因为MySQL使用的是提前读取策略。&lt;br&gt;推荐分页方式：&lt;br&gt;&lt;code&gt;SELECT FROM table1 WHERE ftime &amp;lt; last_time ORDER BY ftime DESC LIMIT 10&lt;/code&gt;&lt;br&gt;即传入上一次分页的界值&lt;/p&gt;
&lt;p&gt;SELECT * FROM table as t1 inner JOIN (SELECT id FROM table ORDER BY time LIMIT 10000，10) as t2 ON t1.id=t2.id&lt;/p&gt;
&lt;h3 id=&quot;count计数&quot;&gt;&lt;a href=&quot;#count计数&quot; class=&quot;headerlink&quot; title=&quot;count计数&quot;&gt;&lt;/a&gt;count计数&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;首先count()、count(1)、count(col1)是有区别的，count()表示整个结果集有多少条记录，count(1)表示结果集里以primary key统计数量，绝大多数情况下count()与count(1)效果一样的，但count(col1)表示的是结果集里 col1 列 NOT null 的记录数。优先采用count()&lt;/li&gt;
&lt;li&gt;大数据量count是消耗资源的操作，甚至会拖慢整个库，查询性能问题无法解决的，应从产品设计上进行重构。例如当频繁需要count的查询，考虑使用汇总表&lt;/li&gt;
&lt;li&gt;遇到distinct的情况，group by方式可能效率更高。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;delete-update语句改成select再explain&quot;&gt;&lt;a href=&quot;#delete-update语句改成select再explain&quot; class=&quot;headerlink&quot; title=&quot;delete,update语句改成select再explain&quot;&gt;&lt;/a&gt;delete,update语句改成select再explain&lt;/h3&gt;&lt;p&gt;select最多导致数据库慢，写操作才是锁表的罪魁祸首&lt;/p&gt;
&lt;h3 id=&quot;减少与数据库交互的次数，尽量采用批量SQL语句&quot;&gt;&lt;a href=&quot;#减少与数据库交互的次数，尽量采用批量SQL语句&quot; class=&quot;headerlink&quot; title=&quot;减少与数据库交互的次数，尽量采用批量SQL语句&quot;&gt;&lt;/a&gt;减少与数据库交互的次数，尽量采用批量SQL语句&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;INSERT ... ON DUPLICATE KEY UPDATE ...&lt;/code&gt;，插入行后会导致在一个UNIQUE索引或PRIMARY KEY中出现重复值，则执行旧行UPDATE，如果不重复则直接插入，影响1行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;REPLACE INTO&lt;/code&gt;类似，但它是冲突时删除旧行。&lt;code&gt;INSERT IGNORE&lt;/code&gt;相反，保留旧行，丢弃要插入的新行。&lt;/li&gt;
&lt;li&gt;INSERT INTO VALUES(),(),()，合并插入。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;杜绝危险SQL&quot;&gt;&lt;a href=&quot;#杜绝危险SQL&quot; class=&quot;headerlink&quot; title=&quot;杜绝危险SQL&quot;&gt;&lt;/a&gt;杜绝危险SQL&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;去掉where 1=1 这样无意义或恒真的条件，如果遇到update/delete或遭到sql注入就恐怖了&lt;/li&gt;
&lt;li&gt;SQL中不允许出现DDL语句。一般也不给予create/alter这类权限，但阿里云RDS只区分读写用户&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;行为规范&quot;&gt;&lt;a href=&quot;#行为规范&quot; class=&quot;headerlink&quot; title=&quot;行为规范&quot;&gt;&lt;/a&gt;行为规范&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;不允许在DBA不知情的情况下导现网数据&lt;/li&gt;
&lt;li&gt;大批量更新，如修复数据，避开高峰期，并通知DBA。直接执行sql的由运维或DBA同事操作&lt;/li&gt;
&lt;li&gt;及时处理已下线业务的SQL&lt;/li&gt;
&lt;li&gt;复杂sql上线审核&lt;/li&gt;
&lt;li&gt;重要项目的数据库方案选型和设计必须提前通知DBA参与&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;原文地址：&lt;a href=&quot;http://seanlook.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://seanlook.com/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;命名规范&quot;&gt;&lt;a href=&quot;#命名规范&quot; class=&quot;headerlink&quot; title=&quot;命名规范&quot;&gt;&lt;/a&gt;命名规范&lt;/h2&gt;&lt;h3 id=&quot;库名、表名、字段名必须使用小写字母，并采用下划线分割&quot;&gt;&lt;a href=&quot;#库名、表名、字段名必须使用小写字母，并采用下划线分割&quot; class=&quot;headerlink&quot; title=&quot;库名、表名、字段名必须使用小写字母，并采用下划线分割&quot;&gt;&lt;/a&gt;库名、表名、字段名必须使用小写字母，并采用下划线分割&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;MySQL有配置参数lower_case_table_names=1，即库表名以小写存储，大小写不敏感。如果是0，则库表名以实际情况存储，大小写敏感；如果是2，以实际情况存储，但以小写比较。&lt;/li&gt;
&lt;li&gt;如果大小写混合使用，可能存在abc，Abc，ABC等多个表共存，容易导致混乱。&lt;/li&gt;
&lt;li&gt;字段名显示区分大小写，但实际使⽤时不区分，即不可以建立两个名字一样但大小写不一样的字段。&lt;/li&gt;
&lt;li&gt;为了统一规范， 库名、表名、字段名使用小写字母。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;库名以-d-开头，表名以-t-开头，字段名以-f-开头&quot;&gt;&lt;a href=&quot;#库名以-d-开头，表名以-t-开头，字段名以-f-开头&quot; class=&quot;headerlink&quot; title=&quot;库名以 d 开头，表名以 t 开头，字段名以 f_ 开头&quot;&gt;&lt;/a&gt;库名以 d 开头，表名以 t 开头，字段名以 f_ 开头&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;比如表 &lt;code&gt;t_crm_relation&lt;/code&gt;，中间的 crm 代表业务模块名&lt;/li&gt;
&lt;li&gt;视图以&lt;code&gt;view_&lt;/code&gt;开头，事件以&lt;code&gt;event_&lt;/code&gt;开头，触发器以&lt;code&gt;trig_&lt;/code&gt;开头，存储过程以&lt;code&gt;proc_&lt;/code&gt;开头，函数以&lt;code&gt;func_&lt;/code&gt;开头&lt;/li&gt;
&lt;li&gt;普通索引以&lt;code&gt;idx_col1_col2&lt;/code&gt;命名，唯一索引以&lt;code&gt;uk_col1_col2&lt;/code&gt;命名（可去掉f_公共部分）。如 &lt;code&gt;idx_companyid_corpid_contacttime&lt;/code&gt;(f_company_id, f_corp_id, f_contact_time)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;库名、表名、字段名禁止超过32个字符，需见名知意&quot;&gt;&lt;a href=&quot;#库名、表名、字段名禁止超过32个字符，需见名知意&quot; class=&quot;headerlink&quot; title=&quot;库名、表名、字段名禁止超过32个字符，需见名知意&quot;&gt;&lt;/a&gt;库名、表名、字段名禁止超过32个字符，需见名知意&lt;/h3&gt;&lt;p&gt;库名、表名、字段名支持最多64个字符，但为了统一规范、易于辨识以及减少传输量，禁止超过32个字符&lt;/p&gt;
&lt;h3 id=&quot;临时库、表名须以tmp加日期为后缀&quot;&gt;&lt;a href=&quot;#临时库、表名须以tmp加日期为后缀&quot; class=&quot;headerlink&quot; title=&quot;临时库、表名须以tmp加日期为后缀&quot;&gt;&lt;/a&gt;临时库、表名须以tmp加日期为后缀&lt;/h3&gt;&lt;p&gt;如 t_crm_relation_tmp0425。备份表也类似，形如 &lt;code&gt;_bak20160425&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;按日期时间分表须符合-YYYY-MM-DD-格式&quot;&gt;&lt;a href=&quot;#按日期时间分表须符合-YYYY-MM-DD-格式&quot; class=&quot;headerlink&quot; title=&quot;按日期时间分表须符合_YYYY[MM][DD]格式&quot;&gt;&lt;/a&gt;按日期时间分表须符合_YYYY[MM][DD]格式&lt;/h3&gt;&lt;p&gt;这也是为将来有可能分表做准备的，比如&lt;code&gt;t_crm_ec_record_201403&lt;/code&gt;，但像 t_crm_contact_at201506就打破了这种规范。&lt;br&gt;不具有时间特性的，直接以 &lt;code&gt;t_tbname_001&lt;/code&gt; 这样的方式命名。&lt;/p&gt;
&lt;h2 id=&quot;库表基础规范&quot;&gt;&lt;a href=&quot;#库表基础规范&quot; class=&quot;headerlink&quot; title=&quot;库表基础规范&quot;&gt;&lt;/a&gt;库表基础规范&lt;/h2&gt;&lt;h3 id=&quot;使用Innodb存储引擎&quot;&gt;&lt;a href=&quot;#使用Innodb存储引擎&quot; class=&quot;headerlink&quot; title=&quot;使用Innodb存储引擎&quot;&gt;&lt;/a&gt;使用Innodb存储引擎&lt;/h3&gt;&lt;p&gt;5.5版本开始mysql默认存储引擎就是InnoDB，5.7版本开始，系统表都放弃MyISAM了。&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://icyxp.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://icyxp.github.io/tags/mysql/"/>
    
      <category term="规范" scheme="http://icyxp.github.io/tags/%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>Advanced MySQL Query Tuning</title>
    <link href="http://icyxp.github.io//blog/2016/07/mysql-mysql-query.html"/>
    <id>http://icyxp.github.io//blog/2016/07/mysql-mysql-query.html</id>
    <published>2016-07-15T03:30:00.000Z</published>
    <updated>2016-07-15T03:30:34.000Z</updated>
    
    <content type="html">&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/3HLJJcJmM9KLGT&quot; width=&quot;100%&quot; height=&quot;550&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen&gt; &lt;/iframe&gt;

&lt;p&gt;Youtube: &lt;a href=&quot;https://www.youtube.com/watch?v=TPFibi2G_oo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.youtube.com/watch?v=TPFibi2G_oo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Percona webinars上有许多类似的分享，传送门： &lt;a href=&quot;https://www.percona.com/resources/webinars&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.percona.com/resources/webinars&lt;/a&gt; 。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/3HLJJcJmM9KLGT&quot; width=&quot;100%&quot; height=&quot;550&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginh
    
    </summary>
    
      <category term="mysql" scheme="http://icyxp.github.io/categories/mysql/"/>
    
    
      <category term="mysql query" scheme="http://icyxp.github.io/tags/mysql-query/"/>
    
  </entry>
  
  <entry>
    <title>nginx配置location与rewrite规则教程</title>
    <link href="http://icyxp.github.io//blog/2016/07/nginx-localtion-rewrite.html"/>
    <id>http://icyxp.github.io//blog/2016/07/nginx-localtion-rewrite.html</id>
    <published>2016-07-15T02:30:00.000Z</published>
    <updated>2016-07-15T03:14:47.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;location教程&quot;&gt;&lt;a href=&quot;#location教程&quot; class=&quot;headerlink&quot; title=&quot;location教程&quot;&gt;&lt;/a&gt;location教程&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;location  = / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 精确匹配 / ，主机名后面不能带任何字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration A ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location  / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 因为所有的地址都以 / 开头，所以这条规则将匹配到所有请求&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 但是正则和最长字符串会优先匹配&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration B ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location /documents/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 只有后面的正则表达式没有匹配到时，这一条才会采用这一条&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration C ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location ~ /documents/Abc &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 只有后面的正则表达式没有匹配到时，这一条才会采用这一条&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration CC ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location ^~ /images/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 匹配任何以 /images/ 开头的地址，匹配符合以后，停止往下搜索正则，采用这一条。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration D ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location ~* \.(gif|jpg|jpeg)$ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 匹配所有以 gif,jpg或jpeg 结尾的请求&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 然而，所有请求 /images/ 下的图片会被 config D 处理，因为 ^~ 到达不了这一条正则&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration E ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location /images/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 字符匹配到 /images/，继续往下，会发现 ^~ 存在&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration F ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location /images/abc &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 最长字符匹配到 /images/abc，继续往下，会发现 ^~ 存在&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # F与G的放置顺序是没有关系的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration G ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location ~ /images/abc/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 只有去掉 config D 才有效：先最长匹配 config G 开头的地址，继续往下搜索，匹配到这一条正则，采用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration H ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location ~* /js/.*/\.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;已=开头表示精确匹配&lt;br&gt;如 A 中只匹配根目录结尾的请求，后面不能带任何字符串。&lt;/li&gt;
&lt;li&gt;^~ 开头表示uri以某个常规字符串开头，不是正则匹配&lt;/li&gt;
&lt;li&gt;~ 开头表示区分大小写的正则匹配&lt;/li&gt;
&lt;li&gt;~* 开头表示不区分大小写的正则匹配&lt;/li&gt;
&lt;li&gt;/ 通用匹配, 如果没有其它匹配,任何请求都会匹配到&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;顺序&amp;amp;&amp;amp;优先级&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(location =) &amp;gt; (location 完整路径) &amp;gt; (location ^~ 路径) &amp;gt; (location ~,~* 正则顺序) &amp;gt; (location 部分起始路径) &amp;gt; (/)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;按照上面的location写法，以下的匹配示例成立：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;/ —&amp;gt; config A&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;精确完全匹配，即使/index.html也匹配不了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/downloads/download.html —&amp;gt; config B&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;匹配B以后，往下没有任何匹配，采用B&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/images/1.gif —&amp;gt; configuration D&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;匹配到F，往下匹配到D，停止往下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/images/abc/def —&amp;gt; config D&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最长匹配到G，往下匹配D，停止往下&lt;br&gt;你可以看到 任何以/images/开头的都会匹配到D并停止，FG写在这里是没有任何意义的，H是永远轮不到的，这里只是为了说明匹配顺序&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/documents/document.html —&amp;gt; config C&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;匹配到C，往下没有任何匹配，采用C&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/documents/1.jpg —&amp;gt; configuration E&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;匹配到C，往下正则匹配到E&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/documents/Abc.jpg —&amp;gt; config CC&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最长匹配到C，往下正则顺序匹配到CC，不会往下到E&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;实际使用建议&quot;&gt;&lt;a href=&quot;#实际使用建议&quot; class=&quot;headerlink&quot; title=&quot;实际使用建议&quot;&gt;&lt;/a&gt;实际使用建议&lt;/h3&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;所以实际使用中，个人觉得至少有三个匹配规则定义，如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#直接匹配网站根，通过域名访问网站首页比较频繁，使用这个会加速处理，官网如是说。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#这里是直接转发给后端应用服务器了，也可以是一个静态首页&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 第一个必选规则&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location = / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_pass http://tomcat:8080/index&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 第二个必选规则是处理静态文件请求，这是nginx作为http服务器的强项&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 有两种配置模式，目录匹配或后缀匹配,任选其一或搭配使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location ^~ /static/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root /webroot/static/;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location ~* \.(gif|jpg|jpeg|png|css|js|ico)$ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root /webroot/res/;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#第三个规则就是通用规则，用来转发动态请求到后端应用服务器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#非静态文件请求就默认是动态请求，自己根据实际把握&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#毕竟目前的一些框架的流行，带.php,.jsp后缀的情况很少了&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_pass http://tomcat:8080/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Rewrite教程&quot;&gt;&lt;a href=&quot;#Rewrite教程&quot; class=&quot;headerlink&quot; title=&quot;Rewrite教程&quot;&gt;&lt;/a&gt;Rewrite教程&lt;/h2&gt;&lt;p&gt;rewrite功能就是，使用nginx提供的全局变量或自己设置的变量，结合正则表达式和标志位实现url重写以及重定向。rewrite只能放在&lt;code&gt;server{},location{},if{}&lt;/code&gt;中，并且只能对域名后边的除去传递的参数外的字符串起作用，例如 &lt;code&gt;http://seanlook.com/a/we/index.php?id=1&amp;amp;u=str&lt;/code&gt; 只对&lt;code&gt;/a/we/index.php&lt;/code&gt;重写。语法&lt;code&gt;rewrite regex replacement [flag];&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果相对域名或参数字符串起作用，可以使用全局变量匹配，也可以使用proxy_pass反向代理。&lt;/p&gt;
&lt;p&gt;表明看rewrite和location功能有点像，都能实现跳转，主要区别在于rewrite是在同一域名内更改获取资源的路径，而location是对一类路径做控制访问或反向代理，可以proxy_pass到其他机器。很多情况下rewrite也会写在location里，它们的执行顺序是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;执行server块的rewrite指令&lt;/li&gt;
&lt;li&gt;执行location匹配&lt;/li&gt;
&lt;li&gt;执行选定的location中的rewrite指令&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果其中某步URI被重写，则重新循环执行1-3，直到找到真实存在的文件；循环超过10次，则返回500 Internal Server Error错误。&lt;/p&gt;
&lt;h3 id=&quot;flag标志位&quot;&gt;&lt;a href=&quot;#flag标志位&quot; class=&quot;headerlink&quot; title=&quot;flag标志位&quot;&gt;&lt;/a&gt;flag标志位&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;last&lt;/code&gt; : 相当于Apache的[L]标记，表示完成rewrite&lt;/li&gt;
&lt;li&gt;&lt;code&gt;break&lt;/code&gt;: 停止执行当前虚拟主机的后续rewrite指令集&lt;/li&gt;
&lt;li&gt;&lt;code&gt;redirect&lt;/code&gt; : 返回302临时重定向，地址栏会显示跳转后的地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;permanent&lt;/code&gt; : 返回301永久重定向，地址栏会显示跳转后的地址&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为301和302不能简单的只返回状态码，还必须有重定向的URL，这就是return指令无法返回301,302的原因了。这里 last 和 break 区别有点难以理解：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;last一般写在server和if中，而break一般使用在location中&lt;/li&gt;
&lt;li&gt;last不终止重写后的url匹配，即新的url会再从server走一遍匹配流程，而break终止重写后的匹配&lt;/li&gt;
&lt;li&gt;break和last都能组织继续执行后面的rewrite指令&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;if指令与全局变量&quot;&gt;&lt;a href=&quot;#if指令与全局变量&quot; class=&quot;headerlink&quot; title=&quot;if指令与全局变量&quot;&gt;&lt;/a&gt;if指令与全局变量&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;if判断指令&lt;/strong&gt;&lt;br&gt;语法为&lt;code&gt;if(condition){...}&lt;/code&gt;，对给定的条件condition进行判断。如果为真，大括号内的rewrite指令将被执行，if条件(conditon)可以是如下任何内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当表达式只是一个变量时，如果值为空或任何以0开头的字符串都会当做false&lt;/li&gt;
&lt;li&gt;直接比较变量和内容时，使用&lt;code&gt;=&lt;/code&gt;或&lt;code&gt;!=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~&lt;/code&gt;正则表达式匹配，&lt;code&gt;~*&lt;/code&gt;不区分大小写的匹配，&lt;code&gt;!~&lt;/code&gt;区分大小写的不匹配&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;和&lt;code&gt;!-f&lt;/code&gt;用来判断是否存在文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;和&lt;code&gt;!-d&lt;/code&gt;用来判断是否存在目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e&lt;/code&gt;和&lt;code&gt;!-e&lt;/code&gt;用来判断是否存在文件或目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x&lt;/code&gt;和&lt;code&gt;!-x&lt;/code&gt;用来判断文件是否可执行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;例如：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if ($http_user_agent ~ MSIE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rewrite ^(.*)$ /msie/$1 break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; #如果UA包含&quot;MSIE&quot;，rewrite请求到/msid/目录下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ($http_cookie ~* &quot;id=([^;]+)(?:;|$)&quot;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    set $id $1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125; #如果cookie匹配正则，设置变量$id等于正则引用部分&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ($request_method = POST) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return 405;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; #如果提交方法为POST，则返回状态405（Method not allowed）。return不能返回301,302&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ($slow) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    limit_rate 10k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; #限速，$slow可以通过 set 指令设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (!-f $request_filename)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_pass  http://127.0.0.1; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; #如果请求的文件名不存在，则反向代理到localhost 。这里的break也是停止rewrite检查&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ($args ~ post=140)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rewrite ^ http://example.com/ permanent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; #如果query string中包含&quot;post=140&quot;，永久重定向到example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location ~* \.(gif|jpg|png|swf|flv)$ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    valid_referers none blocked www.jefflei.com www.leizhenfang.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if ($invalid_referer) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return 404;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; #防盗链&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;全局变量&lt;/strong&gt;&lt;br&gt;下面是可以用作if判断的全局变量&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$args&lt;/code&gt;： #这个变量等于请求行中的参数，同&lt;code&gt;$query_string&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$content_length&lt;/code&gt; ： 请求头中的Content-length字段。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$content_type&lt;/code&gt; ： 请求头中的Content-Type字段。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$document_root&lt;/code&gt; ： 当前请求在root指令中指定的值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$host&lt;/code&gt; ： 请求主机头字段，否则为服务器名称。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$http_user_agent&lt;/code&gt; ： 客户端agent信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$http_cookie&lt;/code&gt; ： 客户端cookie信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$limit_rate&lt;/code&gt; ： 这个变量可以限制连接速率。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$request_method&lt;/code&gt; ： 客户端请求的动作，通常为GET或POST。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$remote_addr&lt;/code&gt; ： 客户端的IP地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$remote_port&lt;/code&gt; ： 客户端的端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$remote_user&lt;/code&gt; ： 已经经过Auth Basic Module验证的用户名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$request_filename&lt;/code&gt; ： 当前请求的文件路径，由root或alias指令与URI请求生成。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$scheme&lt;/code&gt; ： HTTP方法（如http，https）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$server_protocol&lt;/code&gt; ： 请求使用的协议，通常是HTTP/1.0或HTTP/1.1。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$server_addr&lt;/code&gt; ： 服务器地址，在完成一次系统调用后可以确定这个值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$server_name&lt;/code&gt; ： 服务器名称。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$server_port&lt;/code&gt; ： 请求到达服务器的端口号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$request_uri&lt;/code&gt; ： 包含请求参数的原始URI，不包含主机名，如：”/foo/bar.php?arg=baz”。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$uri&lt;/code&gt; ： 不带请求参数的当前URI，$uri不包含主机名，如”/foo/bar.html”。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$document_uri&lt;/code&gt; ： 与$uri相同。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例：&lt;code&gt;http://localhost:88/test1/test2/test.php&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$host&lt;/code&gt;：localhost&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$server_port&lt;/code&gt;：88&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$request_uri&lt;/code&gt;：&lt;a href=&quot;http://localhost:88/test1/test2/test.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:88/test1/test2/test.php&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$document_uri&lt;/code&gt;：/test1/test2/test.php&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$document_root&lt;/code&gt;：/var/www/html&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$request_filename&lt;/code&gt;：/var/www/html/test1/test2/test.php&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;常用正则&quot;&gt;&lt;a href=&quot;#常用正则&quot; class=&quot;headerlink&quot; title=&quot;常用正则&quot;&gt;&lt;/a&gt;常用正则&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt; ： 匹配除换行符以外的任意字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;?&lt;/code&gt; ： 重复0次或1次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt; ： 重复1次或更多次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*&lt;/code&gt; ： 重复0次或更多次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\d&lt;/code&gt; ：匹配数字&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^&lt;/code&gt; ： 匹配字符串的开始&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$&lt;/code&gt; ： 匹配字符串的介绍&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{n}&lt;/code&gt; ： 重复n次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{n,}&lt;/code&gt; ： 重复n次或更多次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[c]&lt;/code&gt; ： 匹配单个字符c&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[a-z]&lt;/code&gt; ： 匹配a-z小写字母的任意一个&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;小括号&lt;code&gt;()&lt;/code&gt;之间匹配的内容，可以在后面通过&lt;code&gt;$1&lt;/code&gt;来引用，&lt;code&gt;$2&lt;/code&gt;表示的是前面第二个&lt;code&gt;()&lt;/code&gt;里的内容。正则里面容易让人困惑的是&lt;code&gt;\&lt;/code&gt;转义特殊字符。&lt;/p&gt;
&lt;h3 id=&quot;rewrite实例&quot;&gt;&lt;a href=&quot;#rewrite实例&quot; class=&quot;headerlink&quot; title=&quot;rewrite实例&quot;&gt;&lt;/a&gt;rewrite实例&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;例1：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;http&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 定义image日志格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;log_format&lt;/span&gt; imagelog &lt;span class=&quot;string&quot;&gt;&#39;[&lt;span class=&quot;variable&quot;&gt;$time_local&lt;/span&gt;] &#39;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$image_file&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$image_type&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$body_bytes_sent&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$status&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 开启重写日志&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;rewrite_log&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;on&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;section&quot;&gt;server&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;root&lt;/span&gt; /home/www;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;location&lt;/span&gt; / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;# 重写规则信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attribute&quot;&gt;error_log&lt;/span&gt; logs/rewrite.log &lt;span class=&quot;literal&quot;&gt;notice&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;# 注意这里要用‘’单引号引起来，避免&amp;#123;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attribute&quot;&gt;rewrite&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;^/images/([a-z]&amp;#123;2&amp;#125;)/([a-z0-9]&amp;#123;5&amp;#125;)/(.*)\.(png|jpg|gif)$&#39;&lt;/span&gt; /data?file=&lt;span class=&quot;variable&quot;&gt;$3&lt;/span&gt;.&lt;span class=&quot;variable&quot;&gt;$4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;# 注意不能在上面这条规则后面加上“last”参数，否则下面的set指令不会执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attribute&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$image_file&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attribute&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$image_type&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;location&lt;/span&gt; /data &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;# 指定针对图片的日志格式，来分析图片类型和大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attribute&quot;&gt;access_log&lt;/span&gt; logs/images.log mian;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attribute&quot;&gt;root&lt;/span&gt; /data/images;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;# 应用前面定义的变量。判断首先文件在不在，不在再判断目录在不在，如果还不在就跳转到最后一个url里&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attribute&quot;&gt;try_files&lt;/span&gt; /&lt;span class=&quot;variable&quot;&gt;$arg_file&lt;/span&gt; /image404.html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;location&lt;/span&gt; = /image404.html &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;# 图片不存在返回特定的信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attribute&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;404&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;image not found\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;对形如&lt;code&gt;/images/ef/uh7b3/test.png&lt;/code&gt;的请求，重写到&lt;code&gt;/data?file=test.png&lt;/code&gt;，于是匹配到&lt;code&gt;location /data&lt;/code&gt;，先看&lt;code&gt;/data/images/test.png&lt;/code&gt;文件存不存在，如果存在则正常响应，如果不存在则重写&lt;code&gt;tryfiles&lt;/code&gt;到新的&lt;code&gt;image404 location&lt;/code&gt;，直接返回404状态码。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;例2：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;rewrite&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt; ^/images/(.*)_(\d+)x(\d+)\.(png|jpg|gif)$&lt;/span&gt; /resizer/&lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt;.&lt;span class=&quot;variable&quot;&gt;$4&lt;/span&gt;?width=&lt;span class=&quot;variable&quot;&gt;$2&lt;/span&gt;&amp;amp;height=&lt;span class=&quot;variable&quot;&gt;$3&lt;/span&gt;? &lt;span class=&quot;literal&quot;&gt;last&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;对形如&lt;code&gt;/images/bla_500x400.jpg&lt;/code&gt;的文件请求，重写到&lt;code&gt;/resizer/bla.jpg?width=500&amp;amp;height=400&lt;/code&gt;地址，并会继续尝试匹配location。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;来源：&lt;a href=&quot;http://seanlook.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://seanlook.com/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;location教程&quot;&gt;&lt;a href=&quot;#location教程&quot; class=&quot;headerlink&quot; title=&quot;location教程&quot;&gt;&lt;/a&gt;location教程&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;location  = / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 精确匹配 / ，主机名后面不能带任何字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration A ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location  / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 因为所有的地址都以 / 开头，所以这条规则将匹配到所有请求&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 但是正则和最长字符串会优先匹配&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration B ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location /documents/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 只有后面的正则表达式没有匹配到时，这一条才会采用这一条&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration C ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location ~ /documents/Abc &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 只有后面的正则表达式没有匹配到时，这一条才会采用这一条&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration CC ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location ^~ /images/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 匹配任何以 /images/ 开头的地址，匹配符合以后，停止往下搜索正则，采用这一条。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration D ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location ~* \.(gif|jpg|jpeg)$ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 匹配所有以 gif,jpg或jpeg 结尾的请求&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 然而，所有请求 /images/ 下的图片会被 config D 处理，因为 ^~ 到达不了这一条正则&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration E ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location /images/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 字符匹配到 /images/，继续往下，会发现 ^~ 存在&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration F ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location /images/abc &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 最长字符匹配到 /images/abc，继续往下，会发现 ^~ 存在&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # F与G的放置顺序是没有关系的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration G ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location ~ /images/abc/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 只有去掉 config D 才有效：先最长匹配 config G 开头的地址，继续往下搜索，匹配到这一条正则，采用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration H ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location ~* /js/.*/\.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;已=开头表示精确匹配&lt;br&gt;如 A 中只匹配根目录结尾的请求，后面不能带任何字符串。&lt;/li&gt;
&lt;li&gt;^~ 开头表示uri以某个常规字符串开头，不是正则匹配&lt;/li&gt;
&lt;li&gt;~ 开头表示区分大小写的正则匹配&lt;/li&gt;
&lt;li&gt;~* 开头表示不区分大小写的正则匹配&lt;/li&gt;
&lt;li&gt;/ 通用匹配, 如果没有其它匹配,任何请求都会匹配到&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="nginx" scheme="http://icyxp.github.io/categories/nginx/"/>
    
    
      <category term="nginx-localtion" scheme="http://icyxp.github.io/tags/nginx-localtion/"/>
    
      <category term="nginx-rewrite" scheme="http://icyxp.github.io/tags/nginx-rewrite/"/>
    
  </entry>
  
  <entry>
    <title>MySQL事务隔离级别</title>
    <link href="http://icyxp.github.io//blog/2016/07/mysql-mysql-transaction-level.html"/>
    <id>http://icyxp.github.io//blog/2016/07/mysql-mysql-transaction-level.html</id>
    <published>2016-07-11T09:21:00.000Z</published>
    <updated>2016-07-11T09:23:50.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;四类隔离级别&quot;&gt;&lt;a href=&quot;#四类隔离级别&quot; class=&quot;headerlink&quot; title=&quot;四类隔离级别&quot;&gt;&lt;/a&gt;四类隔离级别&lt;/h2&gt;&lt;p&gt;SQL标准定义了4类隔离级别，包括了一些具体规则，用来限定事务内外的哪些改变是可见的，哪些是不可见的。低级别的隔离级一般支持更高的并发处理，并拥有更低的系统开销。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read Uncommitted（读取未提交内容）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在该隔离级别，所有事务都可以看到其他未提交事务的执行结果。本隔离级别很少用于实际应用，因为它的性能也不比其他级别好多少。读取未提交的数据，也被称之为脏读（Dirty Read）。 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read Committed（读取提交内容）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是大多数数据库系统的默认隔离级别（但不是MySQL默认的）。它满足了隔离的简单定义：一个事务只能看见已经提交事务所做的改变。这种隔离级别 也支持所谓的不可重复读（Nonrepeatable Read），因为同一事务的其他实例在该实例处理其间可能会有新的commit，所以同一select可能返回不同结果。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repeatable Read（可重读）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是MySQL的默认事务隔离级别，它确保同一事务的多个实例在并发读取数据时，会看到同样的数据行。不过理论上，这会导致另一个棘手的问题：幻读 （Phantom Read）。简单的说，幻读指当用户读取某一范围的数据行时，另一个事务又在该范围内插入了新行，当用户再读取该范围的数据行时，会发现有新的“幻影” 行。InnoDB和Falcon存储引擎通过多版本并发控制（MVCC，Multiversion Concurrency Control）机制解决了该问题。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Serializable（可串行化）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是最高的隔离级别，它通过强制事务排序，使之不可能相互冲突，从而解决幻读问题。简言之，它是在每个读的数据行上加上共享锁。在这个级别，可能导致大量的超时现象和锁竞争。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;隔离级别与一致性&quot;&gt;&lt;a href=&quot;#隔离级别与一致性&quot; class=&quot;headerlink&quot; title=&quot;隔离级别与一致性&quot;&gt;&lt;/a&gt;隔离级别与一致性&lt;/h2&gt;&lt;p&gt;这四种隔离级别采取不同的锁类型来实现，若读取的是同一个数据的话，就容易发生问题。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;脏读(Drity Read)：某个事务已更新一份数据，另一个事务在此时读取了同一份数据，由于某些原因，前一个RollBack了操作，则后一个事务所读取的数据就会是不正确的。&lt;/li&gt;
&lt;li&gt;不可重复读(Non-repeatable read):在一个事务的两次查询之中数据不一致，这可能是两次查询过程中间插入了一个事务更新的原有的数据。&lt;/li&gt;
&lt;li&gt;幻读(Phantom Read):在一个事务的两次查询中数据笔数不一致，例如有一个事务查询了几列(Row)数据，而另一个事务却在此时插入了新的几列数据，先前的事务在接下来的查询中，就会发现有几列数据是它先前所没有的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在MySQL中，实现了这四种隔离级别，分别有可能产生问题如下所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;隔离级别&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;脏读&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;不可重复读&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;幻读&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;读未提交(Read Uncommitted)&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;yes&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;yes&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;读已提交(Read Committed)&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;no&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;yes&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;可重复读(Repeatable Read)&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;no&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;no&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;可串行化(Serializable)&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;no&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;no&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;设置当前隔离级别&quot;&gt;&lt;a href=&quot;#设置当前隔离级别&quot; class=&quot;headerlink&quot; title=&quot;设置当前隔离级别&quot;&gt;&lt;/a&gt;设置当前隔离级别&lt;/h2&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- 取消autocommit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; autocommit=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;variables&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;%autocommit%&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- 查看隔离级别&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; @@global.tx_isolation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; @@session.tx_isolation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; @@tx_isolation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;variables&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;%iso%&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;comment&quot;&gt;---------------+-----------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Variable_name | Value           |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;comment&quot;&gt;---------------+-----------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| tx_isolation  | REPEATABLE-READ |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;comment&quot;&gt;---------------+-----------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;variables&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;%iso%&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;comment&quot;&gt;---------------+-----------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Variable_name | Value           |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;comment&quot;&gt;---------------+-----------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| tx_isolation  | REPEATABLE-READ |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;comment&quot;&gt;---------------+-----------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- 设置隔离级别&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SESSION&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TRANSACTION&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;ISOLATION&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;LEVEL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;read&lt;/span&gt; uncommitted;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SESSION&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TRANSACTION&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;ISOLATION&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;LEVEL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;read&lt;/span&gt; committed;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SESSION&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TRANSACTION&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;ISOLATION&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;LEVEL&lt;/span&gt; repeatable &lt;span class=&quot;keyword&quot;&gt;read&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SESSION&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TRANSACTION&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;ISOLATION&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;LEVEL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;serializable&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- 事务操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;transaction&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; text.tx;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;transaction&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; text.tx;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;update&lt;/span&gt; text.tx &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;num&lt;/span&gt; =&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;into&lt;/span&gt; text.tx(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;num&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;rollback&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;my-cnf设置&quot;&gt;&lt;a href=&quot;#my-cnf设置&quot; class=&quot;headerlink&quot; title=&quot;my.cnf设置&quot;&gt;&lt;/a&gt;my.cnf设置&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# MySQL支持4种事务隔离级别，他们分别是：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# READ-UNCOMMITTED, READ-COMMITTED, REPEATABLE-READ, SERIALIZABLE.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 如没有指定，MySQL默认采用的是REPEATABLE-READ，ORACLE默认的是READ-COMMITTED&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;transaction_isolation = REPEATABLE-READ&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;四类隔离级别&quot;&gt;&lt;a href=&quot;#四类隔离级别&quot; class=&quot;headerlink&quot; title=&quot;四类隔离级别&quot;&gt;&lt;/a&gt;四类隔离级别&lt;/h2&gt;&lt;p&gt;SQL标准定义了4类隔离级别，包括了一些具体规则，用来限定事务内外的哪些改变是可见的，哪些是不可见的。低级别的隔离级一般支持更高的并发处理，并拥有更低的系统开销。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read Uncommitted（读取未提交内容）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在该隔离级别，所有事务都可以看到其他未提交事务的执行结果。本隔离级别很少用于实际应用，因为它的性能也不比其他级别好多少。读取未提交的数据，也被称之为脏读（Dirty Read）。 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read Committed（读取提交内容）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是大多数数据库系统的默认隔离级别（但不是MySQL默认的）。它满足了隔离的简单定义：一个事务只能看见已经提交事务所做的改变。这种隔离级别 也支持所谓的不可重复读（Nonrepeatable Read），因为同一事务的其他实例在该实例处理其间可能会有新的commit，所以同一select可能返回不同结果。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repeatable Read（可重读）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是MySQL的默认事务隔离级别，它确保同一事务的多个实例在并发读取数据时，会看到同样的数据行。不过理论上，这会导致另一个棘手的问题：幻读 （Phantom Read）。简单的说，幻读指当用户读取某一范围的数据行时，另一个事务又在该范围内插入了新行，当用户再读取该范围的数据行时，会发现有新的“幻影” 行。InnoDB和Falcon存储引擎通过多版本并发控制（MVCC，Multiversion Concurrency Control）机制解决了该问题。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Serializable（可串行化）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是最高的隔离级别，它通过强制事务排序，使之不可能相互冲突，从而解决幻读问题。简言之，它是在每个读的数据行上加上共享锁。在这个级别，可能导致大量的超时现象和锁竞争。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://icyxp.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://icyxp.github.io/tags/mysql/"/>
    
      <category term="事务" scheme="http://icyxp.github.io/tags/%E4%BA%8B%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>MySQL为什么需要一个自增主键</title>
    <link href="http://icyxp.github.io//blog/2016/07/mysql-mysql-auto-increment-primary-key.html"/>
    <id>http://icyxp.github.io//blog/2016/07/mysql-mysql-auto-increment-primary-key.html</id>
    <published>2016-07-04T09:38:00.000Z</published>
    <updated>2016-08-18T01:54:45.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;主键&quot;&gt;&lt;a href=&quot;#主键&quot; class=&quot;headerlink&quot; title=&quot;主键&quot;&gt;&lt;/a&gt;主键&lt;/h2&gt;&lt;p&gt;表中每一行都应该有可以唯一标识自己的一列（或一组列）。&lt;/p&gt;
&lt;p&gt;一个顾客可以使用顾客编号列，而订单可以使用订单ID，雇员可以使用雇员ID 或 雇员社会保险号。&lt;/p&gt;
&lt;p&gt;主键（primary key） 一列（或一组列），其值能够唯一区分表中的每个行。&lt;br&gt;唯一标识表中每行的这个列（或这组列）称为主键。&lt;strong&gt;&lt;code&gt;没有主键，更新或删除表中特定行很困难，因为没有安全的方法保证只涉及相关的行。&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;虽然并不总是都需要主键，但大多数数据库设计人员都应保证他们创建的每个表有一个主键，以便于以后数据操纵和管理&lt;/p&gt;
&lt;p&gt;表中的任何列都可以作为主键，只要它满足一下条件:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;任何两行都不具有相同的主键值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;每个行都必须具有一个主键值（主键列不允许NULL值）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;主键值规范：这里列出的规则是MySQL本身强制实施的。&lt;/p&gt;
&lt;p&gt;主键的最好习惯：&lt;br&gt;除MySQL强制实施的规则外，应该坚持的几个普遍认为的最好习惯为:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;plain&quot;&gt;1、不更新主键列的值
2、不重用主键列的值
3、不在主键列中使用可能会更改的值（例如，如果使用一个名字作为主键以标识某个供应商，应该供应商合并和更改其名字时，必须更改这个主键）
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;总之：不应该使用一个具有意义的column（id 本身并不保存表 有意义信息） 作为主键，并且一个表必须要有一个主键，为方便扩展、松耦合，高可用的系统做铺垫。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;无特殊需求下Innodb建议使用与业务无关的自增ID作为主键&quot;&gt;&lt;a href=&quot;#无特殊需求下Innodb建议使用与业务无关的自增ID作为主键&quot; class=&quot;headerlink&quot; title=&quot;无特殊需求下Innodb建议使用与业务无关的自增ID作为主键&quot;&gt;&lt;/a&gt;无特殊需求下Innodb建议使用与业务无关的自增ID作为主键&lt;/h3&gt;&lt;p&gt;InnoDB引擎使用聚集索引，数据记录本身被存于主索引（一颗B+Tree）的叶子节点上。这就要求同一个叶子节点内（大小为一个内存页或磁盘页）的各条数据记录按主键顺序存放，因此每当有一条新的记录插入时，MySQL会根据其主键将其插入适当的节点和位置，如果页面达到装载因子（InnoDB默认为15/16），则开辟一个新的页（节点）&lt;/p&gt;
&lt;p&gt;1、如果表使用自增主键，那么每次插入新的记录，记录就会顺序添加到当前索引节点的后续位置，当一页写满，就会自动开辟一个新的页。如下图所示：&lt;br&gt;&lt;img src=&quot;/images/mysql_aipk_1.jpg&quot; alt=&quot;mysql_primary_key&quot;&gt;&lt;br&gt;这样就会形成一个紧凑的索引结构，近似顺序填满。&lt;strong&gt;&lt;code&gt;由于每次插入时也不需要移动已有数据，因此效率很高，也不会增加很多开销在维护索引上。&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2、 如果使用非自增主键（如果身份证号或学号等），由于每次插入主键的值近似于随机，因此每次新纪录都要被插到现有索引页得中间某个位置：&lt;br&gt;&lt;img src=&quot;/images/mysql_aipk_2.jpg&quot; alt=&quot;mysql_primary_key&quot;&gt;&lt;br&gt;&lt;strong&gt;&lt;code&gt;此时MySQL不得不为了将新记录插到合适位置而移动数据，甚至目标页面可能已经被回写到磁盘上而从缓存中清掉，此时又要从磁盘上读回来，这增加了很多开销，同时频繁的移动、分页操作造成了大量的碎片。&lt;/code&gt;&lt;/strong&gt;得到了不够紧凑的索引结构，后续不得不通过OPTIMIZE TABLE来重建表并优化填充页面。&lt;/p&gt;
&lt;p&gt;在使用InnoDB存储引擎时，如果没有特别的需要，请永远使用一个与业务无关的自增字段作为主键。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;mysql 在频繁的更新、删除操作，会产生碎片。而含碎片比较大的表，查询效率会降低。此时需对表进行优化，这样才会使查询变得更有效率。&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;主键&quot;&gt;&lt;a href=&quot;#主键&quot; class=&quot;headerlink&quot; title=&quot;主键&quot;&gt;&lt;/a&gt;主键&lt;/h2&gt;&lt;p&gt;表中每一行都应该有可以唯一标识自己的一列（或一组列）。&lt;/p&gt;
&lt;p&gt;一个顾客可以使用顾客编号列，而订单可以使用订单ID，雇员可以使用雇员ID 或 雇员社会保险号。&lt;/p&gt;
&lt;p&gt;主键（primary key） 一列（或一组列），其值能够唯一区分表中的每个行。&lt;br&gt;唯一标识表中每行的这个列（或这组列）称为主键。&lt;strong&gt;&lt;code&gt;没有主键，更新或删除表中特定行很困难，因为没有安全的方法保证只涉及相关的行。&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;虽然并不总是都需要主键，但大多数数据库设计人员都应保证他们创建的每个表有一个主键，以便于以后数据操纵和管理&lt;/p&gt;
&lt;p&gt;表中的任何列都可以作为主键，只要它满足一下条件:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;任何两行都不具有相同的主键值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;每个行都必须具有一个主键值（主键列不允许NULL值）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;主键值规范：这里列出的规则是MySQL本身强制实施的。&lt;/p&gt;
&lt;p&gt;主键的最好习惯：&lt;br&gt;除MySQL强制实施的规则外，应该坚持的几个普遍认为的最好习惯为:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;plain&quot;&gt;1、不更新主键列的值
2、不重用主键列的值
3、不在主键列中使用可能会更改的值（例如，如果使用一个名字作为主键以标识某个供应商，应该供应商合并和更改其名字时，必须更改这个主键）
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;总之：不应该使用一个具有意义的column（id 本身并不保存表 有意义信息） 作为主键，并且一个表必须要有一个主键，为方便扩展、松耦合，高可用的系统做铺垫。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://icyxp.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://icyxp.github.io/tags/mysql/"/>
    
      <category term="主键" scheme="http://icyxp.github.io/tags/%E4%B8%BB%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>Zephir安装和初体验</title>
    <link href="http://icyxp.github.io//blog/2016/06/zephir-zephir-02.html"/>
    <id>http://icyxp.github.io//blog/2016/06/zephir-zephir-02.html</id>
    <published>2016-06-30T14:23:00.000Z</published>
    <updated>2016-07-04T12:51:08.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Zephir安装&quot;&gt;&lt;a href=&quot;#Zephir安装&quot; class=&quot;headerlink&quot; title=&quot;Zephir安装&quot;&gt;&lt;/a&gt;Zephir安装&lt;/h2&gt;&lt;h3 id=&quot;环境依赖&quot;&gt;&lt;a href=&quot;#环境依赖&quot; class=&quot;headerlink&quot; title=&quot;环境依赖&quot;&gt;&lt;/a&gt;环境依赖&lt;/h3&gt;&lt;p&gt;Zephir主要依赖于下面环境&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gcc &amp;gt;= 4.x/clang &amp;gt;= 3.x&lt;/li&gt;
&lt;li&gt;re2c 0.13或更高版本&lt;/li&gt;
&lt;li&gt;gnu 3.81或更高版本&lt;/li&gt;
&lt;li&gt;autoconf 2.31或更高版本&lt;/li&gt;
&lt;li&gt;automake 1.14或更高版本&lt;/li&gt;
&lt;li&gt;libpcre3&lt;/li&gt;
&lt;li&gt;php开发工具-phpize&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你使用Ubuntu，你可以安装所需要的包&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install git gcc make re2c php5 php5-json php5-dev libpcre3-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;由于Zephir是用PHP编写的，所以你需要安装php&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ php -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PHP 5.6.5 (cli) (built: Jan 24 2015 20:04:31)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Copyright (c) 1997-2014 The PHP Group&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Zend Engine v2.6.0, Copyright (c) 1998-2014 Zend Technologies&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;with Zend OPcache v7.0.4-dev, Copyright (c) 1999-2014, by Zend Technologies&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;同时也必须确保安装了PHP开发库&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ phpize -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Configuring &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PHP Api Version:         20131106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Zend Module Api No:      20131226&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Zend Extension Api No:   220131226&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;安装Zephir&quot;&gt;&lt;a href=&quot;#安装Zephir&quot; class=&quot;headerlink&quot; title=&quot;安装Zephir&quot;&gt;&lt;/a&gt;安装Zephir&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载最新稳定版&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运行Zephir安装程序(编译/创建解析器)&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; zephir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ./install-json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ./install -c&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;测试安装&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;zephir &lt;span class=&quot;built_in&quot;&gt;help&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;会得到如下返回&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; _____              __    _&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/__  /  ___  ____  / /_  (_)____&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  / /  / _ \/ __ \/ __ \/ / ___/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; / /__/  __/ /_/ / / / / / /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/____/\___/ .___/_/ /_/_/_/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         /_/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Zephir version 0.9.2a-dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Usage: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt; [options]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Available commands:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    install             Installs the extension (requires root password)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    builddev            Generate/Compile/Install a Zephir extension &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; development mode&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;help&lt;/span&gt;                Displays this &lt;span class=&quot;built_in&quot;&gt;help&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    build               Generate/Compile/Install a Zephir extension&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    compile             Compile a Zephir extension&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stubs               Generates extension PHP stubs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    version             Shows the Zephir version&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init [namespace]    Initializes a Zephir extension&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fullclean           Cleans the generated object files &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; compilation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    api [--theme-path=/path][--output-directory=/path][--theme-options=&amp;#123;json&amp;#125;|/path]Generates a HTML API&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    generate            Generates C code from the Zephir code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    clean               Cleans the generated object files &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; compilation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Options:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt;([a-z0-9\-]+)     Enables compiler optimizations&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -fno-([a-z0-9\-]+)  Disables compiler optimizations&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -w([a-z0-9\-]+)     Turns a warning on&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -W([a-z0-9\-]+)     Turns a warning off&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Zephir初体验&quot;&gt;&lt;a href=&quot;#Zephir初体验&quot; class=&quot;headerlink&quot; title=&quot;Zephir初体验&quot;&gt;&lt;/a&gt;Zephir初体验&lt;/h2&gt;&lt;p&gt;还记得在开篇那个Helloword例子吗？我们先来简单介绍一下Zephir编译机制，在用例子介绍一下Zephir的语法。&lt;/p&gt;
&lt;h3 id=&quot;编译-解释&quot;&gt;&lt;a href=&quot;#编译-解释&quot; class=&quot;headerlink&quot; title=&quot;编译/解释&quot;&gt;&lt;/a&gt;编译/解释&lt;/h3&gt;&lt;p&gt;每一种语言都会有它们的”Hello World!”例子，对于Zehpir来说也不例外，下面的这个引导例子列举了许多它重要的特性。&lt;/p&gt;
&lt;p&gt;Zephir的代码必须放置在类中。Zephir是基于面向对象类/框架打造的。所以代码放置在类的外面是不允许的。另外，一个命名空间也是必须的。&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Test&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Hello&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;say&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;一但这个类被编译完成，它会产生下面的一段C代码（gcc/clang/vc++编译）&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;EPHIR_INIT_CLASS(Test_Hello) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ZEPHIR_REGISTER_CLASS(Test, Hello, hello, test_hello_method_entry, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; SUCCESS;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PHP_METHOD(Test_Hello, say) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    php_printf(&lt;span class=&quot;string&quot;&gt;&quot;%s&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;事实上，使用Zephir的开发者无需懂得C语言，如果你有使用编译器，或者php内部的构造，或者C语言本身的经验， 在使用Zephir的时候你将会感到更加的清晰。&lt;/p&gt;
&lt;h3 id=&quot;Zephir初试&quot;&gt;&lt;a href=&quot;#Zephir初试&quot; class=&quot;headerlink&quot; title=&quot;Zephir初试&quot;&gt;&lt;/a&gt;Zephir初试&lt;/h3&gt;&lt;p&gt;在接下来的例子中，我们将会尽详细的描述，以便你知道是怎么回事。 我们的目标是让你感觉一下到底Zephir是怎么样的一个东西。 随便我们将会详细的探索Zephir的新特性。    &lt;/p&gt;
&lt;p&gt;下面的例子很简单，它提供一个类和一个函数，检测一个数组的类型&lt;/p&gt;
&lt;p&gt;让我们认真的检查下面的代码，开始认真的的学习Zephir. 这几行代码包括了很多详细的东西，我们将会慢慢的解释。&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Test&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * MyTest (test/mytest.zep)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyTest&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;someMethod&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;/* 变量必须声明 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; myArray;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 int i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 &lt;span class=&quot;comment&quot;&gt;/*创建一个数组 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 let myArray = [&lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100.25&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 &lt;span class=&quot;comment&quot;&gt;/* 数组有多少个元素*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 let length = count(myArray);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 &lt;span class=&quot;comment&quot;&gt;/* 打印值类型 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; i &amp;lt; length &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		     &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; typeof myArray[i], &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		     let i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; myArray;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在函数中，第一行使用了’var’ 和 ‘int’ 关键词来声明一个函数内的私有变量。 在函数中的每一个变量必须事先声明它们自己的类型。这些声明并不是随意的，它帮助编译器来报告给你关于 错误的变量，或者变量的使用是否超出的它的范围，通常它会在最后抛出错误。&lt;/p&gt;
&lt;p&gt;动态的变量必须以关键词’var’来声明。这些变量可以被指定或再指定成不同的变量类型。另一方面，’i’ and ‘length’使用了整数的静态变量，在执行程序的过程中，它只能改变值，而不能改变变量的类型。&lt;/p&gt;
&lt;p&gt;与PHP不同的是，你不用在变量的前面加上($)符号。&lt;/p&gt;
&lt;p&gt;Zephir的注释和Java, C#, C++等等一些语言的一样。&lt;/p&gt;
&lt;p&gt;默认的，变量是不变的，意思是说Zephir期望大部分的变量保持不变。变量保持它们原始的值不变可以优化成静态常量。 如果需要改变变量的值，请使用关键词’let’&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 创建一个数组 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let myArray = [&lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100.25&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;默认的，数组是一种象PHP一样的动态变量，它包含了许多不同类型的值。令人吃惊的是，PHP内部的函数可以在Zephir中使用，在下面的例子中，’count’ 函数被使用了，编辑器可以以最佳的状态来执行，因为它已经知道了数组的长度了。&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*数组有多少个元素 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let length = count(myArray);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;同样的，我们可以使用花括号来控制程序的流程.&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; i &amp;lt; length &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; typeof myArray[i], &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    let i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;PHP的变量总是动态的，函数总是返回的是可变的动态变量，这就意味着如果一个静态变量在Zphir中被返回了，在PHP的调用中 你得到的却是一个动态变量。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;请注意！内存是在编译器中自动管理的，所以你没有必要像C语言一样去分配和释放内存。&lt;/strong&gt; 这和PHP是很相似的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Zephir安装&quot;&gt;&lt;a href=&quot;#Zephir安装&quot; class=&quot;headerlink&quot; title=&quot;Zephir安装&quot;&gt;&lt;/a&gt;Zephir安装&lt;/h2&gt;&lt;h3 id=&quot;环境依赖&quot;&gt;&lt;a href=&quot;#环境依赖&quot; class=&quot;headerlink&quot; title=&quot;环境依赖&quot;&gt;&lt;/a&gt;环境依赖&lt;/h3&gt;&lt;p&gt;Zephir主要依赖于下面环境&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gcc &amp;gt;= 4.x/clang &amp;gt;= 3.x&lt;/li&gt;
&lt;li&gt;re2c 0.13或更高版本&lt;/li&gt;
&lt;li&gt;gnu 3.81或更高版本&lt;/li&gt;
&lt;li&gt;autoconf 2.31或更高版本&lt;/li&gt;
&lt;li&gt;automake 1.14或更高版本&lt;/li&gt;
&lt;li&gt;libpcre3&lt;/li&gt;
&lt;li&gt;php开发工具-phpize&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你使用Ubuntu，你可以安装所需要的包&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install git gcc make re2c php5 php5-json php5-dev libpcre3-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;由于Zephir是用PHP编写的，所以你需要安装php&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ php -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PHP 5.6.5 (cli) (built: Jan 24 2015 20:04:31)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Copyright (c) 1997-2014 The PHP Group&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Zend Engine v2.6.0, Copyright (c) 1998-2014 Zend Technologies&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;with Zend OPcache v7.0.4-dev, Copyright (c) 1999-2014, by Zend Technologies&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;同时也必须确保安装了PHP开发库&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ phpize -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Configuring &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PHP Api Version:         20131106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Zend Module Api No:      20131226&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Zend Extension Api No:   220131226&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="zephir" scheme="http://icyxp.github.io/categories/zephir/"/>
    
    
      <category term="zephir" scheme="http://icyxp.github.io/tags/zephir/"/>
    
      <category term="php扩展" scheme="http://icyxp.github.io/tags/php%E6%89%A9%E5%B1%95/"/>
    
  </entry>
  
</feed>
