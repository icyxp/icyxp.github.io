<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CloudNative 架构</title>
  <subtitle>CloudNative|云原生应用架构|云原生架构|容器化架构|微服务架构|平台架构|基础架构</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://icyxp.github.io/"/>
  <updated>2020-05-11T09:01:15.000Z</updated>
  <id>http://icyxp.github.io/</id>
  
  <author>
    <name>icyboy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>调试golang的bug以及性能问题的实践方法</title>
    <link href="http://icyxp.github.io//blog/2020/05/go-debug-practice.html"/>
    <id>http://icyxp.github.io//blog/2020/05/go-debug-practice.html</id>
    <published>2020-05-11T10:00:00.000Z</published>
    <updated>2020-05-11T09:01:15.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;场景1：-如何分析程序的运行时间与CPU利用率情况？&quot;&gt;&lt;a href=&quot;#场景1：-如何分析程序的运行时间与CPU利用率情况？&quot; class=&quot;headerlink&quot; title=&quot;场景1： 如何分析程序的运行时间与CPU利用率情况？&quot;&gt;&lt;/a&gt;场景1： 如何分析程序的运行时间与CPU利用率情况？&lt;/h2&gt;&lt;h3 id=&quot;shell内置time指令&quot;&gt;&lt;a href=&quot;#shell内置time指令&quot; class=&quot;headerlink&quot; title=&quot;shell内置time指令&quot;&gt;&lt;/a&gt;shell内置time指令&lt;/h3&gt;&lt;p&gt;这个方法不算新颖，但是确很实用。 time是Unix/Linux内置多命令，使用时一般不用传过多参数，直接跟上需要调试多程序即可。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ time go run &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;2.go &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;&amp;#123;&amp;#123;0 0&amp;#125; 张三 0&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;real    0m0.843s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user    0m0.216s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sys 0m0.389s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面是使用time对 &lt;code&gt;go run test2.go&lt;/code&gt; 对执行程序坐了性能分析，得到3个指标。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;real&lt;/code&gt;：从程序开始到结束，实际度过的时间；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;user&lt;/code&gt;：程序在用户态度过的时间；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sys&lt;/code&gt;：程序在内核态度过的时间&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般情况下 &lt;code&gt;real&lt;/code&gt; &amp;gt;= &lt;code&gt;user&lt;/code&gt; + &lt;code&gt;sys&lt;/code&gt;，因为系统还有其它进程(切换其他进程中间对于本进程回有空白期)。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;usr-bin-time指令&quot;&gt;&lt;a href=&quot;#usr-bin-time指令&quot; class=&quot;headerlink&quot; title=&quot;/usr/bin/time指令&quot;&gt;&lt;/a&gt;/usr/bin/time指令&lt;/h3&gt;&lt;p&gt;这个指令比内置的time更加详细一些，使用的时候需要用绝对路径，而且要加上参数 &lt;code&gt;-v&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ /usr/bin/time -v go run &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;2.go  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Command being timed: &lt;span class=&quot;string&quot;&gt;&quot;go run test2.go&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    User time (seconds): 0.12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System time (seconds): 0.06&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Percent of CPU this job got: 115%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Average shared text size (kbytes): 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Average unshared data size (kbytes): 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Average stack size (kbytes): 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Average total size (kbytes): 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Maximum resident &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; size (kbytes): 41172&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Average resident &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; size (kbytes): 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Major (requiring I/O) page faults: 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Minor (reclaiming a frame) page faults: 15880&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Voluntary context switches: 897&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Involuntary context switches: 183&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Swaps: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    File system inputs: 256&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    File system outputs: 2664&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Socket messages sent: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Socket messages received: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Signals delivered: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Page size (bytes): 4096&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Exit status: 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到这里的功能要强大多了，除了之前的信息外，还包括了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU占用率；&lt;/li&gt;
&lt;li&gt;内存使用情况；&lt;/li&gt;
&lt;li&gt;Page Fault 情况；&lt;/li&gt;
&lt;li&gt;进程切换情况；&lt;/li&gt;
&lt;li&gt;文件系统IO；&lt;/li&gt;
&lt;li&gt;Socket 使用情况；&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;场景2：-如何分析golang程序的内存使用情况？&quot;&gt;&lt;a href=&quot;#场景2：-如何分析golang程序的内存使用情况？&quot; class=&quot;headerlink&quot; title=&quot;场景2： 如何分析golang程序的内存使用情况？&quot;&gt;&lt;/a&gt;场景2： 如何分析golang程序的内存使用情况？&lt;/h2&gt;&lt;h3 id=&quot;内存占用情况查看&quot;&gt;&lt;a href=&quot;#内存占用情况查看&quot; class=&quot;headerlink&quot; title=&quot;内存占用情况查看&quot;&gt;&lt;/a&gt;内存占用情况查看&lt;/h3&gt;&lt;p&gt;我们先写一段demo例子代码&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;log&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;runtime&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//slice 会动态扩容，用slice来做堆内存申请&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    container := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;([]&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Println(&lt;span class=&quot;string&quot;&gt;&quot; ===&amp;gt; loop begin.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;; i++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        container = &lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(container, i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Println(&lt;span class=&quot;string&quot;&gt;&quot; ===&amp;gt; loop end.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Println(&lt;span class=&quot;string&quot;&gt;&quot;Start.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    test()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Println(&lt;span class=&quot;string&quot;&gt;&quot;force gc.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    runtime.GC() &lt;span class=&quot;comment&quot;&gt;//强制调用gc回收&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Println(&lt;span class=&quot;string&quot;&gt;&quot;Done.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time.Sleep(&lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt; * time.Second) &lt;span class=&quot;comment&quot;&gt;//睡眠，保持程序不退出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;编译&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$go&lt;/span&gt; build -o snippet_mem &amp;amp;&amp;amp; ./snippet_mem&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后在./snippet_mem进程没有执行完，我们再开一个窗口，通过 &lt;code&gt;top&lt;/code&gt; 命令查看进程的内存占用情况&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$top&lt;/span&gt; -p $(pidof snippet_mem)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;得到结果如下：&lt;br&gt;&lt;img src=&quot;/images/go/godebug_1.png&quot; alt=&quot;go debug top&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们看出来，没有退出的snippet_mem进程有约830m的内存被占用。&lt;/p&gt;
&lt;p&gt;直观上来说，这个程序在 &lt;code&gt;test()&lt;/code&gt; 函数执行完后，切片 &lt;code&gt;contaner&lt;/code&gt; 的内存应该被释放，不应该占用830M那么大。&lt;/p&gt;
&lt;p&gt;下面让我们使用GODEBUG来分析程序的内存使用情况。&lt;/p&gt;
&lt;h3 id=&quot;GODEBUG与gctrace&quot;&gt;&lt;a href=&quot;#GODEBUG与gctrace&quot; class=&quot;headerlink&quot; title=&quot;GODEBUG与gctrace&quot;&gt;&lt;/a&gt;GODEBUG与gctrace&lt;/h3&gt;&lt;h4 id=&quot;用法&quot;&gt;&lt;a href=&quot;#用法&quot; class=&quot;headerlink&quot; title=&quot;用法&quot;&gt;&lt;/a&gt;用法&lt;/h4&gt;&lt;p&gt;执行&lt;code&gt;snippet_mem&lt;/code&gt;程序之前添加环境变量&lt;code&gt;GODEBUG=&amp;#39;gctrace=1&amp;#39;&lt;/code&gt;来跟踪打印垃圾回收器信息&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ GODEBUG=&lt;span class=&quot;string&quot;&gt;&#39;gctrace=1&#39;&lt;/span&gt; ./snippet_mem&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;设置&lt;code&gt;gctrace=1&lt;/code&gt;会使得垃圾回收器在每次回收时汇总所回收内存的大小以及耗时，&lt;br&gt;并将这些内容汇总成单行内容打印到标准错误输出中。&lt;/p&gt;
&lt;h4 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gc &lt;span class=&quot;comment&quot;&gt;# @#s #%: #+#+# ms clock, #+#/#/#+# ms cpu, #-&amp;gt;#-&amp;gt;# MB, # MB goal, # P&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;含义&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gc &lt;span class=&quot;comment&quot;&gt;#        GC次数的编号，每次GC时递增&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;comment&quot;&gt;#s         距离程序开始执行时的时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#%          GC占用的执行时间百分比&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#+...+#     GC使用的时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-&amp;gt;#-&amp;gt;# MB  GC开始，结束，以及当前活跃堆内存的大小，单位M&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# MB goal   全局堆内存大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# P         使用processor的数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果每条信息最后，以&lt;code&gt;(forced)&lt;/code&gt;结尾，那么该信息是由&lt;code&gt;runtime.GC()&lt;/code&gt;调用触发&lt;/p&gt;
&lt;p&gt;我们来选择其中一行来解释一下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gc 17 @0.149s 1%: 0.004+36+0.003 ms clock, 0.009+0/0.051/36+0.006 ms cpu, 181-&amp;gt;181-&amp;gt;101 MB, 182 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该条信息含义如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gc 17&lt;/code&gt;: Gc 调试编号为17&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@0.149s&lt;/code&gt;: 此时程序已经执行了0.149s&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1%&lt;/code&gt;: 0.149s中其中gc模块占用了1%的时间&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0.004+36+0.003 ms clock&lt;/code&gt;: 垃圾回收的时间，分别为STW（stop-the-world）清扫的时间+并发标记和扫描的时间+STW标记的时间&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0.009+0/0.051/36+0.006 ms cpu&lt;/code&gt;: 垃圾回收占用cpu时间&lt;/li&gt;
&lt;li&gt;&lt;code&gt;181-&amp;gt;181-&amp;gt;101 MB&lt;/code&gt;: GC开始前堆内存181M， GC结束后堆内存181M，当前活跃的堆内存101M&lt;/li&gt;
&lt;li&gt;&lt;code&gt;182 MB goal&lt;/code&gt;: 全局堆内存大小&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2 P&lt;/code&gt;: 本次GC使用了2个P(调度器中的Processer)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;了解了GC的调试信息读法后，接下来我们来分析一下本次GC的结果。&lt;/p&gt;
&lt;p&gt;我们还是执行GODEBUG调试&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ GODEBUG=&lt;span class=&quot;string&quot;&gt;&#39;gctrace=1&#39;&lt;/span&gt; ./snippet_mem&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;结果如下:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2020/03/02 11:22:37 Start.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2020/03/02 11:22:37  ===&amp;gt; loop begin.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 1 @0.002s 5%: 0.14+0.45+0.002 ms clock, 0.29+0/0.042/0.33+0.005 ms cpu, 4-&amp;gt;4-&amp;gt;0 MB, 5 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 2 @0.003s 4%: 0.13+3.7+0.019 ms clock, 0.27+0/0.037/2.8+0.038 ms cpu, 4-&amp;gt;4-&amp;gt;2 MB, 5 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 3 @0.008s 3%: 0.002+1.1+0.001 ms clock, 0.005+0/0.083/1.0+0.003 ms cpu, 6-&amp;gt;6-&amp;gt;2 MB, 7 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 4 @0.010s 3%: 0.003+0.99+0.002 ms clock, 0.006+0/0.041/0.82+0.004 ms cpu, 5-&amp;gt;5-&amp;gt;2 MB, 6 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 5 @0.011s 4%: 0.079+0.80+0.003 ms clock, 0.15+0/0.046/0.51+0.006 ms cpu, 6-&amp;gt;6-&amp;gt;3 MB, 7 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 6 @0.013s 4%: 0.15+3.7+0.002 ms clock, 0.31+0/0.061/3.3+0.005 ms cpu, 8-&amp;gt;8-&amp;gt;8 MB, 9 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 7 @0.019s 3%: 0.004+2.5+0.005 ms clock, 0.008+0/0.051/2.1+0.010 ms cpu, 20-&amp;gt;20-&amp;gt;6 MB, 21 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 8 @0.023s 5%: 0.014+3.7+0.002 ms clock, 0.029+0.040/1.2/0+0.005 ms cpu, 15-&amp;gt;15-&amp;gt;8 MB, 16 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 9 @0.031s 4%: 0.003+1.6+0.001 ms clock, 0.007+0.094/0/0+0.003 ms cpu, 19-&amp;gt;19-&amp;gt;10 MB, 20 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 10 @0.034s 3%: 0.006+5.2+0.004 ms clock, 0.013+0/0.045/5.0+0.008 ms cpu, 24-&amp;gt;24-&amp;gt;13 MB, 25 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 11 @0.040s 3%: 0.12+2.6+0.002 ms clock, 0.24+0/0.043/2.5+0.004 ms cpu, 30-&amp;gt;30-&amp;gt;16 MB, 31 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 12 @0.043s 3%: 0.11+4.4+0.002 ms clock, 0.23+0/0.044/4.1+0.005 ms cpu, 38-&amp;gt;38-&amp;gt;21 MB, 39 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 13 @0.049s 3%: 0.008+10+0.040 ms clock, 0.017+0/0.045/10+0.080 ms cpu, 47-&amp;gt;47-&amp;gt;47 MB, 48 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 14 @0.070s 2%: 0.004+12+0.002 ms clock, 0.008+0/0.062/12+0.005 ms cpu, 122-&amp;gt;122-&amp;gt;41 MB, 123 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 15 @0.084s 2%: 0.11+11+0.038 ms clock, 0.22+0/0.064/3.9+0.076 ms cpu, 93-&amp;gt;93-&amp;gt;93 MB, 94 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 16 @0.122s 1%: 0.005+25+0.010 ms clock, 0.011+0/0.12/24+0.021 ms cpu, 238-&amp;gt;238-&amp;gt;80 MB, 239 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 17 @0.149s 1%: 0.004+36+0.003 ms clock, 0.009+0/0.051/36+0.006 ms cpu, 181-&amp;gt;181-&amp;gt;101 MB, 182 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 18 @0.187s 1%: 0.12+19+0.004 ms clock, 0.25+0/0.049/19+0.008 ms cpu, 227-&amp;gt;227-&amp;gt;126 MB, 228 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 19 @0.207s 1%: 0.096+27+0.004 ms clock, 0.19+0/0.077/0.73+0.009 ms cpu, 284-&amp;gt;284-&amp;gt;284 MB, 285 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 20 @0.287s 0%: 0.005+944+0.040 ms clock, 0.011+0/0.048/1.3+0.081 ms cpu, 728-&amp;gt;728-&amp;gt;444 MB, 729 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2020/03/02 11:22:38  ===&amp;gt; loop end.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2020/03/02 11:22:38 force gc.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 21 @1.236s 0%: 0.004+0.099+0.001 ms clock, 0.008+0/0.018/0.071+0.003 ms cpu, 444-&amp;gt;444-&amp;gt;0 MB, 888 MB goal, 2 P (forced)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2020/03/02 11:22:38 Done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GC forced&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 22 @122.455s 0%: 0.010+0.15+0.003 ms clock, 0.021+0/0.025/0.093+0.007 ms cpu, 0-&amp;gt;0-&amp;gt;0 MB, 4 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GC forced&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 23 @242.543s 0%: 0.007+0.075+0.002 ms clock, 0.014+0/0.022/0.085+0.004 ms cpu, 0-&amp;gt;0-&amp;gt;0 MB, 4 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GC forced&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 24 @362.545s 0%: 0.018+0.19+0.006 ms clock, 0.037+0/0.055/0.15+0.013 ms cpu, 0-&amp;gt;0-&amp;gt;0 MB, 4 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GC forced&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 25 @482.548s 0%: 0.012+0.25+0.005 ms clock, 0.025+0/0.025/0.11+0.010 ms cpu, 0-&amp;gt;0-&amp;gt;0 MB, 4 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GC forced&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 26 @602.551s 0%: 0.009+0.10+0.003 ms clock, 0.018+0/0.021/0.075+0.006 ms cpu, 0-&amp;gt;0-&amp;gt;0 MB, 4 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GC forced&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 27 @722.554s 0%: 0.012+0.30+0.005 ms clock, 0.025+0/0.15/0.22+0.011 ms cpu, 0-&amp;gt;0-&amp;gt;0 MB, 4 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GC forced&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc 28 @842.556s 0%: 0.027+0.18+0.003 ms clock, 0.054+0/0.11/0.14+0.006 ms cpu, 0-&amp;gt;0-&amp;gt;0 MB, 4 MB goal, 2 P&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h4&gt;&lt;p&gt;先看在&lt;code&gt;test()&lt;/code&gt;函数执行完后立即打印的&lt;code&gt;gc 21&lt;/code&gt;那行的信息。&lt;code&gt;444-&amp;gt;444-&amp;gt;0 MB, 888 MB goal&lt;/code&gt;表示垃圾回收器已经把&lt;code&gt;444M&lt;/code&gt;的内存标记为非活跃的内存。&lt;/p&gt;
&lt;p&gt;再看下一个记录&lt;code&gt;gc 22。0-&amp;gt;0-&amp;gt;0 MB, 4 MB goal&lt;/code&gt;表示垃圾回收器中的全局堆内存大小由&lt;code&gt;888M&lt;/code&gt;下降为&lt;code&gt;4M&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&quot;结论&quot;&gt;&lt;a href=&quot;#结论&quot; class=&quot;headerlink&quot; title=&quot;结论&quot;&gt;&lt;/a&gt;结论&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;在test()函数执行完后，demo程序中的切片容器所申请的堆空间都被垃圾回收器回收了&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;如果此时在&lt;code&gt;top&lt;/code&gt;指令查询内存的时候，如果依然先死800+MB，说明&lt;strong&gt;垃圾回收器回收了应用层的内存后，（可能）并不会立即将内存归还给系统&lt;/strong&gt;。具体分析原因可见：&lt;a href=&quot;https://segmentfault.com/a/1190000022472459&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;踩坑记：go服务内存暴涨&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;runtime-ReadMemStats&quot;&gt;&lt;a href=&quot;#runtime-ReadMemStats&quot; class=&quot;headerlink&quot; title=&quot;runtime.ReadMemStats&quot;&gt;&lt;/a&gt;runtime.ReadMemStats&lt;/h3&gt;&lt;p&gt;接下来我么换另一种方式查看内存的方式 利用 runtime库里的&lt;code&gt;ReadMemStats()&lt;/code&gt;方法&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// demo2.go&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;log&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;runtime&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;readMemStats&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ms runtime.MemStats&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    runtime.ReadMemStats(&amp;amp;ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Printf(&lt;span class=&quot;string&quot;&gt;&quot; ===&amp;gt; Alloc:%d(bytes) HeapIdle:%d(bytes) HeapReleased:%d(bytes)&quot;&lt;/span&gt;, ms.Alloc, ms.HeapIdle, ms.HeapReleased)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//slice 会动态扩容，用slice来做堆内存申请&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    container := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;([]&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Println(&lt;span class=&quot;string&quot;&gt;&quot; ===&amp;gt; loop begin.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;; i++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        container = &lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(container, i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( i == &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            readMemStats()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Println(&lt;span class=&quot;string&quot;&gt;&quot; ===&amp;gt; loop end.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Println(&lt;span class=&quot;string&quot;&gt;&quot; ===&amp;gt; [Start].&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    readMemStats()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    test()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    readMemStats()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Println(&lt;span class=&quot;string&quot;&gt;&quot; ===&amp;gt; [force gc].&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    runtime.GC() &lt;span class=&quot;comment&quot;&gt;//强制调用gc回收&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Println(&lt;span class=&quot;string&quot;&gt;&quot; ===&amp;gt; [Done].&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    readMemStats()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            readMemStats()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            time.Sleep(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; * time.Second)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time.Sleep(&lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt; * time.Second) &lt;span class=&quot;comment&quot;&gt;//睡眠，保持程序不退出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里我们， 封装了一个函数&lt;code&gt;readMemStats()&lt;/code&gt;，这里面主要是调用&lt;code&gt;runtime&lt;/code&gt;中的&lt;code&gt;ReadMemStats()&lt;/code&gt;方法获得内存信息，然后通过&lt;code&gt;log&lt;/code&gt;打印出来。&lt;/p&gt;
&lt;p&gt;我们执行一下代码并运行:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ go run demo2.go &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2020/03/02 18:21:17  ===&amp;gt; [Start].&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2020/03/02 18:21:17  ===&amp;gt; Alloc:71280(bytes) HeapIdle:66633728(bytes) HeapReleased:66600960(bytes)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2020/03/02 18:21:17  ===&amp;gt; loop begin.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2020/03/02 18:21:18  ===&amp;gt; Alloc:132535744(bytes) HeapIdle:336756736(bytes) HeapReleased:155721728(bytes)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2020/03/02 18:21:38  ===&amp;gt; loop end.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2020/03/02 18:21:38  ===&amp;gt; Alloc:598300600(bytes) HeapIdle:609181696(bytes) HeapReleased:434323456(bytes)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2020/03/02 18:21:38  ===&amp;gt; [force gc].&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2020/03/02 18:21:38  ===&amp;gt; [Done].&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2020/03/02 18:21:38  ===&amp;gt; Alloc:55840(bytes) HeapIdle:1207427072(bytes) HeapReleased:434266112(bytes)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2020/03/02 18:21:38  ===&amp;gt; Alloc:56656(bytes) HeapIdle:1207394304(bytes) HeapReleased:434266112(bytes)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2020/03/02 18:21:48  ===&amp;gt; Alloc:56912(bytes) HeapIdle:1207394304(bytes) HeapReleased:1206493184(bytes)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2020/03/02 18:21:58  ===&amp;gt; Alloc:57488(bytes) HeapIdle:1207394304(bytes) HeapReleased:1206493184(bytes)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2020/03/02 18:22:08  ===&amp;gt; Alloc:57616(bytes) HeapIdle:1207394304(bytes) HeapReleased:1206493184(bytes)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c2020/03/02 18:22:18  ===&amp;gt; Alloc:57744(bytes) HeapIdle:1207394304(bytes) HeapReleased:1206493184(by&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，打印&lt;code&gt;[Done].&lt;/code&gt;之后那条trace信息，Alloc已经下降，即内存已被垃圾回收器回收。在&lt;code&gt;2020/03/02 18:21:38&lt;/code&gt;和&lt;code&gt;2020/03/02 18:21:48&lt;/code&gt;的两条trace信息中，HeapReleased开始上升，即垃圾回收器把内存归还给系统。&lt;/p&gt;
&lt;p&gt;另外，MemStats还可以获取其它哪些信息以及字段的含义可以参见官方文档：&lt;a href=&quot;http://golang.org/pkg/runtime/#MemStats&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://golang.org/pkg/runtime/#MemStats&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;pprof工具&quot;&gt;&lt;a href=&quot;#pprof工具&quot; class=&quot;headerlink&quot; title=&quot;pprof工具&quot;&gt;&lt;/a&gt;pprof工具&lt;/h3&gt;&lt;p&gt;pprof工具支持网页上查看内存的使用情况，需要在代码中添加一个协程即可。&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;net/http&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _ &lt;span class=&quot;string&quot;&gt;&quot;net/http/pprof&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Println(http.ListenAndServe(&lt;span class=&quot;string&quot;&gt;&quot;0.0.0.0:10000&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;具体添加的完整代码如下：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//demo3.go&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;log&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;runtime&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;net/http&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _ &lt;span class=&quot;string&quot;&gt;&quot;net/http/pprof&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;readMemStats&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ms runtime.MemStats&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    runtime.ReadMemStats(&amp;amp;ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Printf(&lt;span class=&quot;string&quot;&gt;&quot; ===&amp;gt; Alloc:%d(bytes) HeapIdle:%d(bytes) HeapReleased:%d(bytes)&quot;&lt;/span&gt;, ms.Alloc, ms.HeapIdle, ms.HeapReleased)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//slice 会动态扩容，用slice来做堆内存申请&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    container := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;([]&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Println(&lt;span class=&quot;string&quot;&gt;&quot; ===&amp;gt; loop begin.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;; i++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        container = &lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(container, i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( i == &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            readMemStats()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Println(&lt;span class=&quot;string&quot;&gt;&quot; ===&amp;gt; loop end.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//启动pprof&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        log.Println(http.ListenAndServe(&lt;span class=&quot;string&quot;&gt;&quot;0.0.0.0:10000&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Println(&lt;span class=&quot;string&quot;&gt;&quot; ===&amp;gt; [Start].&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    readMemStats()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    test()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    readMemStats()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Println(&lt;span class=&quot;string&quot;&gt;&quot; ===&amp;gt; [force gc].&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    runtime.GC() &lt;span class=&quot;comment&quot;&gt;//强制调用gc回收&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Println(&lt;span class=&quot;string&quot;&gt;&quot; ===&amp;gt; [Done].&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    readMemStats()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            readMemStats()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            time.Sleep(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; * time.Second)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time.Sleep(&lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt; * time.Second) &lt;span class=&quot;comment&quot;&gt;//睡眠，保持程序不退出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们正常运行程序，然后同时打开浏览器，&lt;/p&gt;
&lt;p&gt;输入地址：&lt;a href=&quot;http://127.0.0.1:10000/debug/pprof/heap?debug=1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:10000/debug/pprof/heap?debug=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;浏览器的内容其中有一部分如下，记录了目前的内存情况&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# runtime.MemStats&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Alloc = 228248&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# TotalAlloc = 1293696976&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Sys = 834967896&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Lookups = 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Mallocs = 2018&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Frees = 671&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# HeapAlloc = 228248&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# HeapSys = 804913152&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# HeapIdle = 804102144&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# HeapInuse = 811008&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# HeapReleased = 108552192&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# HeapObjects = 1347&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Stack = 360448 / 360448&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# MSpan = 28288 / 32768&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# MCache = 3472 / 16384&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# BuckHashSys = 1449617&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# GCSys = 27418976&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# OtherSys = 776551&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# NextGC = 4194304&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# LastGC = 1583203571137891390&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;场景3-如何分析Golang程序的CPU性能情况？&quot;&gt;&lt;a href=&quot;#场景3-如何分析Golang程序的CPU性能情况？&quot; class=&quot;headerlink&quot; title=&quot;场景3: 如何分析Golang程序的CPU性能情况？&quot;&gt;&lt;/a&gt;场景3: 如何分析Golang程序的CPU性能情况？&lt;/h2&gt;&lt;h3 id=&quot;性能分析注意事项&quot;&gt;&lt;a href=&quot;#性能分析注意事项&quot; class=&quot;headerlink&quot; title=&quot;性能分析注意事项&quot;&gt;&lt;/a&gt;性能分析注意事项&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;性能分析必须在一个可重复的、稳定的环境中来进行。&lt;/li&gt;
&lt;li&gt;机器必须闲置&lt;ul&gt;
&lt;li&gt;不要在共享硬件上进行性能分析;&lt;/li&gt;
&lt;li&gt;不要在性能分析期间，在同一个机器上去浏览网页&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;注意省电模式和过热保护，如果突然进入这些模式，会导致分析数据严重不准确&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不要使用虚拟机、共享的云主机&lt;/strong&gt;，太多干扰因素，分析数据会很不一致&lt;/li&gt;
&lt;li&gt;不要在 macOS 10.11 及以前的版本运行性能分析，有 bug，之后的版本修复了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果承受得起，购买专用的性能测试分析的硬件设备，上架。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关闭电源管理、过热管理&lt;/li&gt;
&lt;li&gt;绝不要升级，以保证测试的一致性，以及具有可比性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果没有这样的环境，那就一定要在多个环境中，执行多次，以取得可参考的、具有相对一致性的测试结果。&lt;/p&gt;
&lt;h3 id=&quot;CPU性能分析&quot;&gt;&lt;a href=&quot;#CPU性能分析&quot; class=&quot;headerlink&quot; title=&quot;CPU性能分析&quot;&gt;&lt;/a&gt;CPU性能分析&lt;/h3&gt;&lt;p&gt;我们来用下面的代码进行测试&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//demo4.go&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;bytes&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;math/rand&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;log&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;net/http&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _ &lt;span class=&quot;string&quot;&gt;&quot;net/http/pprof&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Println(&lt;span class=&quot;string&quot;&gt;&quot; ===&amp;gt; loop begin.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;; i++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        log.Println(genSomeBytes())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.Println(&lt;span class=&quot;string&quot;&gt;&quot; ===&amp;gt; loop end.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//生成一个随机字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;genSomeBytes&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; *&lt;span class=&quot;title&quot;&gt;bytes&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Buffer&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; buff bytes.Buffer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;20000&lt;/span&gt;; i++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        buff.Write([]&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;(rand.Intn(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;))&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;amp;buff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            test()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            time.Sleep(time.Second * &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//启动pprof&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    http.ListenAndServe(&lt;span class=&quot;string&quot;&gt;&quot;0.0.0.0:10000&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里面还是启动了pprof的坚挺,有关&lt;code&gt;pprof&lt;/code&gt;启动的代码如下:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;net/http&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _ &lt;span class=&quot;string&quot;&gt;&quot;net/http/pprof&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//启动pprof&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  http.ListenAndServe(&lt;span class=&quot;string&quot;&gt;&quot;0.0.0.0:10000&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;main()&lt;/code&gt;里的流程很简单,启动一个goroutine去无限循环调用&lt;code&gt;test()&lt;/code&gt;方法,休眠1s.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;test()&lt;/code&gt;的流程是生成1000个20000个字符的随机字符串.并且打印.&lt;/p&gt;
&lt;p&gt;我们将上面的代码编译成可执行的二进制文件 &lt;code&gt;demo4&lt;/code&gt;(记住这个名字,稍后我们能用到)&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ go build demo4.go&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来我们启动程序,程序会无限循环的打印字符串.&lt;/p&gt;
&lt;p&gt;接下来我们通过几种方式来查看进程的cpu性能情况.&lt;/p&gt;
&lt;h4 id=&quot;A-Web界面查看&quot;&gt;&lt;a href=&quot;#A-Web界面查看&quot; class=&quot;headerlink&quot; title=&quot;A. Web界面查看&quot;&gt;&lt;/a&gt;A. Web界面查看&lt;/h4&gt;&lt;p&gt;浏览器访问: &lt;a href=&quot;http://127.0.0.1:10000/debug/pprof/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:10000/debug/pprof/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们会看到如下画面&lt;br&gt;&lt;img src=&quot;/images/go/godebug_2.png&quot; alt=&quot;go pprof web&quot;&gt;&lt;/p&gt;
&lt;p&gt;这里面能够通过pprof查看包括(阻塞信息、cpu信息、内存堆信息、锁信息、goroutine信息等等), 我们这里关心的cpu的性能的&lt;code&gt;profile&lt;/code&gt;信息.&lt;/p&gt;
&lt;p&gt;有关&lt;code&gt;profile&lt;/code&gt;下面的英文解释大致如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“CPU配置文件。您可以在秒GET参数中指定持续时间。获取概要文件后，请使用go tool pprof命令调查概要文件。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以我们要是想得到cpu性能,就是要获取到当前进程的&lt;code&gt;profile&lt;/code&gt;文件,这个文件默认是30s生成一个,所以你的程序要至少运行30s以上(这个参数也可以修改,稍后我们介绍)&lt;/p&gt;
&lt;p&gt;我们可以直接点击网页的&lt;code&gt;profile&lt;/code&gt;,浏览器会给我们下载一个&lt;code&gt;profile&lt;/code&gt;文件. 记住这个文件的路径, 可以拷贝到与&lt;code&gt;demo4&lt;/code&gt;所在的同一文件夹下.&lt;/p&gt;
&lt;h4 id=&quot;B-使用pprof工具查看&quot;&gt;&lt;a href=&quot;#B-使用pprof工具查看&quot; class=&quot;headerlink&quot; title=&quot;B. 使用pprof工具查看&quot;&gt;&lt;/a&gt;B. 使用pprof工具查看&lt;/h4&gt;&lt;p&gt;pprof 的格式如下&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;go tool pprof [binary] [profile]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;binary&lt;/code&gt;: 必须指向生成这个性能分析数据的那个二进制可执行文件；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;profile&lt;/code&gt;: 必须是该二进制可执行文件所生成的性能分析数据文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;binary&lt;/code&gt; 和 &lt;code&gt;profile&lt;/code&gt; &lt;strong&gt;必须严格匹配&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我们来查看一下:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ go tool pprof ./demo4 profile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;File: demo4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type: cpu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Time: Mar 3, 2020 at 11:18pm (CST)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Duration: 30.13s, Total samples = 6.27s (20.81%)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Entering interactive mode (&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;help&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; commands, &lt;span class=&quot;string&quot;&gt;&quot;o&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; options)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(pprof)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;help&lt;/strong&gt;可以查看一些指令,我么可以通过&lt;strong&gt;top&lt;/strong&gt;来查看cpu的性能情况.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(pprof) top&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Showing nodes accounting &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; 5090ms, 81.18% of 6270ms total&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Dropped 80 nodes (cum &amp;lt;= 31.35ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Showing top 10 nodes out of 60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      flat  flat%   sum%        cum   cum%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1060ms 16.91% 16.91%     2170ms 34.61%  math/rand.(*lockedSource).Int63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     850ms 13.56% 30.46%      850ms 13.56%  sync.(*Mutex).Unlock (inline)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     710ms 11.32% 41.79%     2950ms 47.05%  math/rand.(*Rand).Int31n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     570ms  9.09% 50.88%      990ms 15.79%  bytes.(*Buffer).Write&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     530ms  8.45% 59.33%      540ms  8.61%  syscall.Syscall&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     370ms  5.90% 65.23%      370ms  5.90%  runtime.procyield&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     270ms  4.31% 69.54%     4490ms 71.61%  main.genSomeBytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     250ms  3.99% 73.52%     3200ms 51.04%  math/rand.(*Rand).Intn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     250ms  3.99% 77.51%      250ms  3.99%  runtime.memmove&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     230ms  3.67% 81.18%      690ms 11.00%  runtime.suspendG&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(pprof)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里面有几列数据,需要说明一下.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flat：当前函数占用CPU的耗时&lt;/li&gt;
&lt;li&gt;flat%：:当前函数占用CPU的耗时百分比&lt;/li&gt;
&lt;li&gt;sun%：函数占用CPU的耗时累计百分比&lt;/li&gt;
&lt;li&gt;cum：当前函数加上调用当前函数的函数占用CPU的总耗时&lt;/li&gt;
&lt;li&gt;cum%：当前函数加上调用当前函数的函数占用CPU的总耗时百分比&lt;/li&gt;
&lt;li&gt;最后一列：函数名称&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过结果我们可以看出, 该程序的大部分cpu性能消耗在 &lt;code&gt;main.getSoneBytes()&lt;/code&gt;方法中,其中math/rand取随机数消耗比较大.&lt;/p&gt;
&lt;h4 id=&quot;C-通过go-tool-pprof得到profile文件&quot;&gt;&lt;a href=&quot;#C-通过go-tool-pprof得到profile文件&quot; class=&quot;headerlink&quot; title=&quot;C. 通过go tool pprof得到profile文件&quot;&gt;&lt;/a&gt;C. 通过go tool pprof得到profile文件&lt;/h4&gt;&lt;p&gt;我们上面的profile文件是通过web浏览器下载的,这个profile的经过时间是30s的,默认值我们在浏览器上修改不了,如果你想得到时间更长的cpu利用率,可以通过&lt;code&gt;go tool pprof&lt;/code&gt;指令与程序交互来获取到&lt;/p&gt;
&lt;p&gt;首先,我们先启动程序&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ./demo4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后再打开一个终端&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;go tool pprof http://localhost:10000/debug/pprof/profile?seconds=60&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里制定了生成profile文件的时间间隔60s&lt;/p&gt;
&lt;p&gt;等待60s之后, 终端就会有结果出来,我们继续使用top来查看.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ go tool pprof http://localhost:10000/debug/pprof/profile?seconds=60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Fetching profile over HTTP from http://localhost:10000/debug/pprof/profile?seconds=60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Saved profile &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; /home/itheima/pprof/pprof.demo4.samples.cpu.005.pb.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;File: demo4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type: cpu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Time: Mar 3, 2020 at 11:59pm (CST)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Duration: 1mins, Total samples = 12.13s (20.22%)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Entering interactive mode (&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;help&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; commands, &lt;span class=&quot;string&quot;&gt;&quot;o&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; options)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(pprof) top&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Showing nodes accounting &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; 9940ms, 81.95% of 12130ms total&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Dropped 110 nodes (cum &amp;lt;= 60.65ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Showing top 10 nodes out of 56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      flat  flat%   sum%        cum   cum%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    2350ms 19.37% 19.37%     4690ms 38.66%  math/rand.(*lockedSource).Int63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1770ms 14.59% 33.97%     1770ms 14.59%  sync.(*Mutex).Unlock (inline)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1290ms 10.63% 44.60%     6040ms 49.79%  math/rand.(*Rand).Int31n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1110ms  9.15% 53.75%     1130ms  9.32%  syscall.Syscall&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     810ms  6.68% 60.43%     1860ms 15.33%  bytes.(*Buffer).Write&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     620ms  5.11% 65.54%     6660ms 54.91%  math/rand.(*Rand).Intn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     570ms  4.70% 70.24%      570ms  4.70%  runtime.procyield&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     500ms  4.12% 74.36%     9170ms 75.60%  main.genSomeBytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     480ms  3.96% 78.32%      480ms  3.96%  runtime.memmove&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     440ms  3.63% 81.95%      440ms  3.63%  math/rand.(*rngSource).Uint64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(pprof)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;依然会得到cpu性能的结果, 我们发现这次的结果与上次30s的结果百分比类似.&lt;/p&gt;
&lt;h4 id=&quot;D-可视化查看&quot;&gt;&lt;a href=&quot;#D-可视化查看&quot; class=&quot;headerlink&quot; title=&quot;D.可视化查看&quot;&gt;&lt;/a&gt;D.可视化查看&lt;/h4&gt;&lt;p&gt;我们还是通过&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ go tool pprof ./demo4 profile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;进入profile文件查看,然后我们输入&lt;code&gt;web&lt;/code&gt;指令.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ go tool pprof ./demo4 profileFile: demo4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type: cpu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Time: Mar 3, 2020 at 11:18pm (CST)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Duration: 30.13s, Total samples = 6.27s (20.81%)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Entering interactive mode (&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;help&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; commands, &lt;span class=&quot;string&quot;&gt;&quot;o&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; options)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(pprof) web&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里如果报找不到&lt;code&gt;graphviz&lt;/code&gt;工具，需要安装一下。这里自行百度如何安装&lt;/p&gt;
&lt;p&gt;然后我们得到一个&lt;code&gt;svg&lt;/code&gt;的可视化文件在&lt;code&gt;/tmp&lt;/code&gt;路径下&lt;br&gt;&lt;img src=&quot;/images/go/godebug_3.png&quot; alt=&quot;go pprof web&quot;&gt;&lt;/p&gt;
&lt;p&gt;这样我们就能比较清晰的看到函数之间的调用关系,方块越大的表示cpu的占用越大.&lt;/p&gt;
&lt;p&gt;来源：刘丹冰Aceld 简书&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;场景1：-如何分析程序的运行时间与CPU利用率情况？&quot;&gt;&lt;a href=&quot;#场景1：-如何分析程序的运行时间与CPU利用率情况？&quot; class=&quot;headerlink&quot; title=&quot;场景1： 如何分析程序的运行时间与CPU利用率情况？&quot;&gt;&lt;/a&gt;场景1： 如何分析程序的运行时间与CPU利用率情况？&lt;/h2&gt;&lt;h3 id=&quot;shell内置time指令&quot;&gt;&lt;a href=&quot;#shell内置time指令&quot; class=&quot;headerlink&quot; title=&quot;shell内置time指令&quot;&gt;&lt;/a&gt;shell内置time指令&lt;/h3&gt;&lt;p&gt;这个方法不算新颖，但是确很实用。 time是Unix/Linux内置多命令，使用时一般不用传过多参数，直接跟上需要调试多程序即可。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ time go run &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;2.go &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;&amp;#123;&amp;#123;0 0&amp;#125; 张三 0&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;real    0m0.843s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user    0m0.216s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sys 0m0.389s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面是使用time对 &lt;code&gt;go run test2.go&lt;/code&gt; 对执行程序坐了性能分析，得到3个指标。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;real&lt;/code&gt;：从程序开始到结束，实际度过的时间；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;user&lt;/code&gt;：程序在用户态度过的时间；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sys&lt;/code&gt;：程序在内核态度过的时间&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般情况下 &lt;code&gt;real&lt;/code&gt; &amp;gt;= &lt;code&gt;user&lt;/code&gt; + &lt;code&gt;sys&lt;/code&gt;，因为系统还有其它进程(切换其他进程中间对于本进程回有空白期)。&lt;/p&gt;
    
    </summary>
    
      <category term="golang" scheme="http://icyxp.github.io/categories/golang/"/>
    
      <category term="debug" scheme="http://icyxp.github.io/categories/golang/debug/"/>
    
    
      <category term="golang" scheme="http://icyxp.github.io/tags/golang/"/>
    
      <category term="pprof" scheme="http://icyxp.github.io/tags/pprof/"/>
    
      <category term="go" scheme="http://icyxp.github.io/tags/go/"/>
    
      <category term="godebug" scheme="http://icyxp.github.io/tags/godebug/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes Etcd 数据备份与恢复</title>
    <link href="http://icyxp.github.io//blog/2020/05/k8s-etcd-backup-restore.html"/>
    <id>http://icyxp.github.io//blog/2020/05/k8s-etcd-backup-restore.html</id>
    <published>2020-05-09T11:00:00.000Z</published>
    <updated>2020-05-09T07:29:57.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;系统环境&quot;&gt;&lt;a href=&quot;#系统环境&quot; class=&quot;headerlink&quot; title=&quot;系统环境&quot;&gt;&lt;/a&gt;系统环境&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Etcd 版本：3.4.3&lt;br&gt;Kubernetes 版本：1.17.4&lt;br&gt;Kubernetes 安装方式：Kubeadm&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Kubernetes 使用 Etcd 数据库实时存储集群中的数据，可以说 Etcd 是 Kubernetes 的核心组件，犹如人类的大脑。如果 Etcd 数据损坏将导致 Kubernetes 不可用，在生产环境中 Etcd 数据是一定要做好高可用与数据备份，这里介绍下如何备份与恢复 Etcd 数据。&lt;/p&gt;
&lt;h2 id=&quot;备份-Etcd-数据&quot;&gt;&lt;a href=&quot;#备份-Etcd-数据&quot; class=&quot;headerlink&quot; title=&quot;备份 Etcd 数据&quot;&gt;&lt;/a&gt;备份 Etcd 数据&lt;/h2&gt;&lt;p&gt;采用镜像方式部署的 Etcd，所以操作 Etcd 需要使用 Etcd 镜像提供的 Etcdctl 工具。如果你是非镜像方式部署 Etcd，可以直接使用 Etcdctl 命令备份数据。&lt;/p&gt;
&lt;p&gt;运行 Etcd 镜像，并且使用镜像内部的 etcdctl 工具连接 etcd 集群，执行数据快照备份：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/bin/sh -c：执行 shell 命令&lt;/li&gt;
&lt;li&gt;–env：设置环境变量，指定 etcdctl 工具使用的 API 版本&lt;/li&gt;
&lt;li&gt;-v：docker 挂载选项，用于挂载 Etcd 证书相关目录以及备份数据存放的目录&lt;/li&gt;
&lt;li&gt;–cacert：etcd CA 证书&lt;/li&gt;
&lt;li&gt;–key：etcd 客户端证书 key&lt;/li&gt;
&lt;li&gt;–cert：etcd 客户端证书 crt&lt;/li&gt;
&lt;li&gt;–endpoints：指定 ETCD 连接地址&lt;/li&gt;
&lt;li&gt;etcdctl snapshot save：etcd 数据备份&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ docker run --rm                                    \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-v /data/backup:/backup                              \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-v /etc/kubernetes/pki/etcd:/etc/kubernetes/pki/etcd \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--env ETCDCTL_API=3                                  \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;k8s.gcr.io/etcd:3.4.3-0                              \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/bin/sh -c &lt;span class=&quot;string&quot;&gt;&quot;etcdctl --endpoints=https://192.168.2.11:2379 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--cacert=/etc/kubernetes/pki/etcd/ca.crt                  \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--key=/etc/kubernetes/pki/etcd/healthcheck-client.key     \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--cert=/etc/kubernetes/pki/etcd/healthcheck-client.crt    \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;snapshot save /backup/etcd-snapshot.db&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;恢复-ETCD-数据&quot;&gt;&lt;a href=&quot;#恢复-ETCD-数据&quot; class=&quot;headerlink&quot; title=&quot;恢复 ETCD 数据&quot;&gt;&lt;/a&gt;恢复 ETCD 数据&lt;/h2&gt;&lt;p&gt;在 Etcd 数据损坏时，可以通过 Etcd 备份数据进行数据恢复，先暂停 Kubernetes 相关组件，然后进入 Etcd 镜像使用 etcdctl 工具执行恢复操作。&lt;/p&gt;
&lt;h3 id=&quot;暂停-Kube-Apiserver-与-Etcd-镜像&quot;&gt;&lt;a href=&quot;#暂停-Kube-Apiserver-与-Etcd-镜像&quot; class=&quot;headerlink&quot; title=&quot;暂停 Kube-Apiserver 与 Etcd 镜像&quot;&gt;&lt;/a&gt;暂停 Kube-Apiserver 与 Etcd 镜像&lt;/h3&gt;&lt;p&gt;在恢复 Etcd 数据前，需要停止 &lt;code&gt;kube-apiserver&lt;/code&gt; 与 &lt;code&gt;etcd&lt;/code&gt; 镜像，因为当这俩镜像停止后 Kubernetes 会自动重启这俩镜像，所以我们可以先暂时移除 &lt;code&gt;/etc/kubernetes/manifests&lt;/code&gt; 目录，Kubernetes 检测这个目录文件不存在时会停止 Kubernetes 系统相关镜像，使其不能重启，方便我们进行后续的操作。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 移除且备份 /etc/kubernetes/manifests 目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mv /etc/kubernetes/manifests /etc/kubernetes/manifests.bak&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查看 kube-apiserver、etcd 镜像是否停止&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ docker ps|grep etcd &amp;amp;&amp;amp; docker ps|grep kube-apiserver&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 备份现有 Etcd 数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mv /var/lib/etcd /var/lib/etcd.bak&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;恢复-Etcd-数据&quot;&gt;&lt;a href=&quot;#恢复-Etcd-数据&quot; class=&quot;headerlink&quot; title=&quot;恢复 Etcd 数据&quot;&gt;&lt;/a&gt;恢复 Etcd 数据&lt;/h3&gt;&lt;p&gt;运行 Etcd 镜像，然后执行数据恢复，默认会恢复到 &lt;code&gt;/default.etcd/member/&lt;/code&gt; 目录下，这里使用 &lt;code&gt;mv&lt;/code&gt; 命令在移动到挂载目录 &lt;code&gt;/var/lib/etcd/&lt;/code&gt; 下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/bin/sh -c：执行 shell 命令&lt;/li&gt;
&lt;li&gt;–env：设置环境变量，指定 etcdctl 工具使用的 API 版本&lt;/li&gt;
&lt;li&gt;-v：docker 挂载选项，用于挂载 Etcd 证书相关目录以及备份数据存放的目录&lt;/li&gt;
&lt;li&gt;etcdctl snapshot restore：etcd 数据恢复。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ docker run --rm              \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-v /data/backup:/backup        \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-v /var/lib/etcd:/var/lib/etcd \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--env ETCDCTL_API=3            \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;k8s.gcr.io/etcd:3.4.3-0        \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/bin/sh -c &lt;span class=&quot;string&quot;&gt;&quot;etcdctl snapshot restore /backup/etcd-snapshot.db; mv /default.etcd/member/ /var/lib/etcd/&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;恢复-Kube-Apiserver-与-Etcd-镜像&quot;&gt;&lt;a href=&quot;#恢复-Kube-Apiserver-与-Etcd-镜像&quot; class=&quot;headerlink&quot; title=&quot;恢复 Kube-Apiserver 与 Etcd 镜像&quot;&gt;&lt;/a&gt;恢复 Kube-Apiserver 与 Etcd 镜像&lt;/h3&gt;&lt;p&gt;将 &lt;code&gt;/etc/kubernetes/manifests&lt;/code&gt; 目录恢复，使 Kubernetes 重启 &lt;code&gt;Kube-Apiserver&lt;/code&gt; 与 &lt;code&gt;Etcd&lt;/code&gt; 镜像：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mv /etc/kubernetes/manifests.bak /etc/kubernetes/manifests&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;执行-Kubectl-命令进行检测&quot;&gt;&lt;a href=&quot;#执行-Kubectl-命令进行检测&quot; class=&quot;headerlink&quot; title=&quot;执行 Kubectl 命令进行检测&quot;&gt;&lt;/a&gt;执行 Kubectl 命令进行检测&lt;/h3&gt;&lt;p&gt;执行 Kubectl 命令进行检测，查看命令是否能够正常执行：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubectl get node&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;参考：mydlq.club&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;系统环境&quot;&gt;&lt;a href=&quot;#系统环境&quot; class=&quot;headerlink&quot; title=&quot;系统环境&quot;&gt;&lt;/a&gt;系统环境&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Etcd 版本：3.4.3&lt;br&gt;Kubernetes 版本：1.17.4&lt;br&gt;Kubernetes 安装方式：Kubeadm&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Kubernetes 使用 Etcd 数据库实时存储集群中的数据，可以说 Etcd 是 Kubernetes 的核心组件，犹如人类的大脑。如果 Etcd 数据损坏将导致 Kubernetes 不可用，在生产环境中 Etcd 数据是一定要做好高可用与数据备份，这里介绍下如何备份与恢复 Etcd 数据。&lt;/p&gt;
&lt;h2 id=&quot;备份-Etcd-数据&quot;&gt;&lt;a href=&quot;#备份-Etcd-数据&quot; class=&quot;headerlink&quot; title=&quot;备份 Etcd 数据&quot;&gt;&lt;/a&gt;备份 Etcd 数据&lt;/h2&gt;&lt;p&gt;采用镜像方式部署的 Etcd，所以操作 Etcd 需要使用 Etcd 镜像提供的 Etcdctl 工具。如果你是非镜像方式部署 Etcd，可以直接使用 Etcdctl 命令备份数据。&lt;/p&gt;
&lt;p&gt;运行 Etcd 镜像，并且使用镜像内部的 etcdctl 工具连接 etcd 集群，执行数据快照备份：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/bin/sh -c：执行 shell 命令&lt;/li&gt;
&lt;li&gt;–env：设置环境变量，指定 etcdctl 工具使用的 API 版本&lt;/li&gt;
&lt;li&gt;-v：docker 挂载选项，用于挂载 Etcd 证书相关目录以及备份数据存放的目录&lt;/li&gt;
&lt;li&gt;–cacert：etcd CA 证书&lt;/li&gt;
&lt;li&gt;–key：etcd 客户端证书 key&lt;/li&gt;
&lt;li&gt;–cert：etcd 客户端证书 crt&lt;/li&gt;
&lt;li&gt;–endpoints：指定 ETCD 连接地址&lt;/li&gt;
&lt;li&gt;etcdctl snapshot save：etcd 数据备份&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ docker run --rm                                    \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-v /data/backup:/backup                              \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-v /etc/kubernetes/pki/etcd:/etc/kubernetes/pki/etcd \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--env ETCDCTL_API=3                                  \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;k8s.gcr.io/etcd:3.4.3-0                              \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/bin/sh -c &lt;span class=&quot;string&quot;&gt;&quot;etcdctl --endpoints=https://192.168.2.11:2379 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--cacert=/etc/kubernetes/pki/etcd/ca.crt                  \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--key=/etc/kubernetes/pki/etcd/healthcheck-client.key     \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--cert=/etc/kubernetes/pki/etcd/healthcheck-client.crt    \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;snapshot save /backup/etcd-snapshot.db&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/categories/kubernetes/"/>
    
      <category term="etcd" scheme="http://icyxp.github.io/categories/kubernetes/etcd/"/>
    
    
      <category term="k8s" scheme="http://icyxp.github.io/tags/k8s/"/>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/tags/kubernetes/"/>
    
      <category term="etcd" scheme="http://icyxp.github.io/tags/etcd/"/>
    
  </entry>
  
  <entry>
    <title>Kubeadm 添加新 Master 节点到集群出现 ETCD 健康检查失败错误</title>
    <link href="http://icyxp.github.io//blog/2020/05/k8s-kubeadm-upgrade-master-problem.html"/>
    <id>http://icyxp.github.io//blog/2020/05/k8s-kubeadm-upgrade-master-problem.html</id>
    <published>2020-05-09T10:00:00.000Z</published>
    <updated>2020-05-09T06:51:09.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;系统环境&quot;&gt;&lt;a href=&quot;#系统环境&quot; class=&quot;headerlink&quot; title=&quot;系统环境&quot;&gt;&lt;/a&gt;系统环境&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Docker 版本：18.06.3&lt;br&gt;Kubeadm 版本：1.17.4&lt;br&gt;Kubernetes 版本：1.17.4&lt;br&gt;Kubernetes Master 数量：3&lt;br&gt;Kubernetes 安装方式：Kubeadm&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;Kubernetes 集群中总共有三台 Master，分别是：&lt;/p&gt;
&lt;p&gt;k8s-master-2-11、k8s-master-2-12、k8s-master-2-13&lt;/p&gt;
&lt;p&gt;对其中 k8s-master-2-11 Master 节点服务器进行了内核和软件升级操作，从而先将其暂时剔出集群，然后进行升级，完成后准备重新加入到 Kubernetes 集群，通过 Kubeadm 执行，输入下面命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ kubeadm join mydlq.club:16443 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--token 6w0nwi.zag57qgfcdhi76vd \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--discovery-token-ca-cert-hash sha256:efa49231e4ffd836ff996921741c98ac4c5655dc729d7c32aa48c608232f0f08 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--control-plane --certificate-key a64e9da7346153bd64dba1e5126a644a97fdb63c878bb73de07911d1add8e26b&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在执行过程中，输出下面日志，提示 etcd 监控检查失败：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;......&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[control-plane] Creating static Pod manifest &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;kube-controller-manager&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W0329 00:01:51.364121   19209 manifests.go:214] the default kube-apiserver authorization-mode is &lt;span class=&quot;string&quot;&gt;&quot;Node,RBAC&quot;&lt;/span&gt;; using &lt;span class=&quot;string&quot;&gt;&quot;Node,RBAC&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[control-plane] Creating static Pod manifest &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;kube-scheduler&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W0329 00:01:51.373807   19209 manifests.go:214] the default kube-apiserver authorization-mode is &lt;span class=&quot;string&quot;&gt;&quot;Node,RBAC&quot;&lt;/span&gt;; using &lt;span class=&quot;string&quot;&gt;&quot;Node,RBAC&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[check-etcd] Checking that the etcd cluster is healthy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;error execution phase check-etcd: etcd cluster is not healthy: failed to dial endpoint https://10.8.18.105:2379 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;with maintenance client: context deadline exceeded&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;To see the stack trace of this error execute with --v=5 or higher&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据关键信息 &lt;code&gt;&amp;quot;error execution phase check-etcd&amp;quot;&lt;/code&gt; 可知，可能是在执行加入 &lt;code&gt;etcd&lt;/code&gt; 时候出现的错误，导致 &lt;code&gt;master&lt;/code&gt; 无法加入原先的 &lt;code&gt;kubernetes&lt;/code&gt; 集群。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;分析问题&quot;&gt;&lt;a href=&quot;#分析问题&quot; class=&quot;headerlink&quot; title=&quot;分析问题&quot;&gt;&lt;/a&gt;分析问题&lt;/h2&gt;&lt;h3 id=&quot;查看集群节点列表&quot;&gt;&lt;a href=&quot;#查看集群节点列表&quot; class=&quot;headerlink&quot; title=&quot;查看集群节点列表&quot;&gt;&lt;/a&gt;查看集群节点列表&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl get node&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NAME              STATUS    ROLES     VERSION&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;k8s-master-2-12    Ready    master    v1.17.4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;k8s-master-2-13    Ready    master    v1.17.4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;k8s-node-2-14      Ready    &amp;lt;none&amp;gt;    v1.17.4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;k8s-node-2-15      Ready    &amp;lt;none&amp;gt;    v1.17.4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;k8s-node-2-16      Ready    &amp;lt;none&amp;gt;    v1.17.4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到，k8s-master-2-11 节点确实不在节点列表中&lt;/p&gt;
&lt;h3 id=&quot;查看-Kubeadm-配置信息&quot;&gt;&lt;a href=&quot;#查看-Kubeadm-配置信息&quot; class=&quot;headerlink&quot; title=&quot;查看 Kubeadm 配置信息&quot;&gt;&lt;/a&gt;查看 Kubeadm 配置信息&lt;/h3&gt;&lt;p&gt;在看看 Kubernetes 集群中的 kubeadm 配置信息：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl describe configmaps kubeadm-config -n kube-system&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;获取到的内容如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Name:         kubeadm-config&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Namespace:    kube-system&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Labels:       &amp;lt;none&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Annotations:  &amp;lt;none&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ClusterStatus:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apiEndpoints:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  k8s-master-2-11:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    advertiseAddress: 192.168.2.11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;bind&lt;/span&gt;Port: 6443&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  k8s-master-2-12:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    advertiseAddress: 192.168.2.12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;bind&lt;/span&gt;Port: 6443&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  k8s-master-2-13:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    advertiseAddress: 192.168.2.13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;bind&lt;/span&gt;Port: 6443&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apiVersion: kubeadm.k8s.io/v1beta2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kind: ClusterStatus&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可也看到 &lt;code&gt;k8s-master-2-11&lt;/code&gt; 节点信息还存在与 &lt;code&gt;kubeadm&lt;/code&gt; 配置中，说明 &lt;code&gt;etcd&lt;/code&gt; 中还存储着 &lt;code&gt;k8s-master-2-11&lt;/code&gt; 相关信息。&lt;/p&gt;
&lt;h3 id=&quot;分析问题所在及解决方案&quot;&gt;&lt;a href=&quot;#分析问题所在及解决方案&quot; class=&quot;headerlink&quot; title=&quot;分析问题所在及解决方案&quot;&gt;&lt;/a&gt;分析问题所在及解决方案&lt;/h3&gt;&lt;p&gt;因为集群是通过 &lt;code&gt;kubeadm&lt;/code&gt; 工具搭建的，且使用了 &lt;code&gt;etcd&lt;/code&gt; 镜像方式与 &lt;code&gt;master&lt;/code&gt; 节点一起，所以每个 &lt;code&gt;Master&lt;/code&gt; 节点上都会存在一个 &lt;code&gt;etcd&lt;/code&gt; 容器实例。当剔除一个 &lt;code&gt;master&lt;/code&gt; 节点时 &lt;code&gt;etcd&lt;/code&gt; 集群未删除剔除的节点的 &lt;code&gt;etcd&lt;/code&gt; 成员信息，该信息还存在 &lt;code&gt;etcd&lt;/code&gt; 集群列表中。&lt;/p&gt;
&lt;p&gt;所以，我们需要 &lt;strong&gt;进入 etcd 手动删除 etcd 成员信息&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;解决&quot;&gt;&lt;a href=&quot;#解决&quot; class=&quot;headerlink&quot; title=&quot;解决&quot;&gt;&lt;/a&gt;解决&lt;/h2&gt;&lt;h3 id=&quot;获取-Etcd-镜像列表&quot;&gt;&lt;a href=&quot;#获取-Etcd-镜像列表&quot; class=&quot;headerlink&quot; title=&quot;获取 Etcd 镜像列表&quot;&gt;&lt;/a&gt;获取 Etcd 镜像列表&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl get pods -n kube-system | grep etcd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;etcd-k8s-master-2-12   1/1   Running   0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;etcd-k8s-master-2-13   1/1   Running   0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;进入-Etcd-容器并删除节点信息&quot;&gt;&lt;a href=&quot;#进入-Etcd-容器并删除节点信息&quot; class=&quot;headerlink&quot; title=&quot;进入 Etcd 容器并删除节点信息&quot;&gt;&lt;/a&gt;进入 Etcd 容器并删除节点信息&lt;/h3&gt;&lt;p&gt;选择上面两个 etcd 中任意一个 pod，通过 kubectl 工具进入 pod 内部：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it etcd-k8s-master-2-12 sh -n kube-system&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;进入容器后，按下面步执行&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 配置环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; ETCDCTL_API=3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;alias&lt;/span&gt; etcdctl=&lt;span class=&quot;string&quot;&gt;&#39;etcdctl --endpoints=https://127.0.0.1:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查看 etcd 集群成员列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ etcdctl member list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63bfe05c4646fb08, started, k8s-master-2-11, https://192.168.2.11:2380, https://192.168.2.11:2379, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8e41efd8164c6e3d, started, k8s-master-2-12, https://192.168.2.12:2380, https://192.168.2.12:2379, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a61d0bd53c1cbcb6, started, k8s-master-2-13, https://192.168.2.13:2380, https://192.168.2.13:2379, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 删除 etcd 集群成员 k8s-master-2-11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ etcdctl member remove 63bfe05c4646fb08&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Member 63bfe05c4646fb08 removed from cluster ed984b9o8w35&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 再次查看 etcd 集群成员列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ etcdctl member list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8e41efd8164c6e3d, started, k8s-master-2-12, https://192.168.2.12:2380, https://192.168.2.12:2379, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a61d0bd53c1cbcb6, started, k8s-master-2-13, https://192.168.2.13:2380, https://192.168.2.13:2379, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 退出容器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;通过-kubeadm-命令再次尝试加入集群&quot;&gt;&lt;a href=&quot;#通过-kubeadm-命令再次尝试加入集群&quot; class=&quot;headerlink&quot; title=&quot;通过 kubeadm 命令再次尝试加入集群&quot;&gt;&lt;/a&gt;通过 kubeadm 命令再次尝试加入集群&lt;/h3&gt;&lt;p&gt;通过 &lt;code&gt;kubeadm&lt;/code&gt; 命令再次尝试将 &lt;code&gt;k8s-master-2-11&lt;/code&gt; 节点加入集群，在执行前首先进入到 &lt;code&gt;k8s-master-2-11&lt;/code&gt; 节点服务器，执行 &lt;code&gt;kubeadm&lt;/code&gt; 的清除命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ kubeadm reset&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后尝试加入 kubernetes 集群：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ kubeadm join mydlq.club:16443 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--token 6w0nwi.zag57qgfcdhi76vd \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--discovery-token-ca-cert-hash sha256:efa49231e4ffd836ff996921741c98ac4c5655dc729d7c32aa48c608232f0f08 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--control-plane --certificate-key a64e9da7346153bd64dba1e5126a644a97fdb63c878bb73de07911d1add8e26b&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;参考：mydlq.club&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;系统环境&quot;&gt;&lt;a href=&quot;#系统环境&quot; class=&quot;headerlink&quot; title=&quot;系统环境&quot;&gt;&lt;/a&gt;系统环境&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Docker 版本：18.06.3&lt;br&gt;Kubeadm 版本：1.17.4&lt;br&gt;Kubernetes 版本：1.17.4&lt;br&gt;Kubernetes Master 数量：3&lt;br&gt;Kubernetes 安装方式：Kubeadm&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;Kubernetes 集群中总共有三台 Master，分别是：&lt;/p&gt;
&lt;p&gt;k8s-master-2-11、k8s-master-2-12、k8s-master-2-13&lt;/p&gt;
&lt;p&gt;对其中 k8s-master-2-11 Master 节点服务器进行了内核和软件升级操作，从而先将其暂时剔出集群，然后进行升级，完成后准备重新加入到 Kubernetes 集群，通过 Kubeadm 执行，输入下面命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ kubeadm join mydlq.club:16443 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--token 6w0nwi.zag57qgfcdhi76vd \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--discovery-token-ca-cert-hash sha256:efa49231e4ffd836ff996921741c98ac4c5655dc729d7c32aa48c608232f0f08 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--control-plane --certificate-key a64e9da7346153bd64dba1e5126a644a97fdb63c878bb73de07911d1add8e26b&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在执行过程中，输出下面日志，提示 etcd 监控检查失败：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;......&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[control-plane] Creating static Pod manifest &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;kube-controller-manager&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W0329 00:01:51.364121   19209 manifests.go:214] the default kube-apiserver authorization-mode is &lt;span class=&quot;string&quot;&gt;&quot;Node,RBAC&quot;&lt;/span&gt;; using &lt;span class=&quot;string&quot;&gt;&quot;Node,RBAC&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[control-plane] Creating static Pod manifest &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;kube-scheduler&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W0329 00:01:51.373807   19209 manifests.go:214] the default kube-apiserver authorization-mode is &lt;span class=&quot;string&quot;&gt;&quot;Node,RBAC&quot;&lt;/span&gt;; using &lt;span class=&quot;string&quot;&gt;&quot;Node,RBAC&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[check-etcd] Checking that the etcd cluster is healthy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;error execution phase check-etcd: etcd cluster is not healthy: failed to dial endpoint https://10.8.18.105:2379 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;with maintenance client: context deadline exceeded&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;To see the stack trace of this error execute with --v=5 or higher&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据关键信息 &lt;code&gt;&amp;quot;error execution phase check-etcd&amp;quot;&lt;/code&gt; 可知，可能是在执行加入 &lt;code&gt;etcd&lt;/code&gt; 时候出现的错误，导致 &lt;code&gt;master&lt;/code&gt; 无法加入原先的 &lt;code&gt;kubernetes&lt;/code&gt; 集群。&lt;/p&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/categories/kubernetes/"/>
    
      <category term="kubeadm" scheme="http://icyxp.github.io/categories/kubernetes/kubeadm/"/>
    
    
      <category term="k8s" scheme="http://icyxp.github.io/tags/k8s/"/>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/tags/kubernetes/"/>
    
      <category term="etcd" scheme="http://icyxp.github.io/tags/etcd/"/>
    
      <category term="kubeadm" scheme="http://icyxp.github.io/tags/kubeadm/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes 1.18+ 使用ipvs后coredns无法解析域名采坑记</title>
    <link href="http://icyxp.github.io//blog/2020/05/k8s-1-18-ipvs-problem.html"/>
    <id>http://icyxp.github.io//blog/2020/05/k8s-1-18-ipvs-problem.html</id>
    <published>2020-05-09T04:00:00.000Z</published>
    <updated>2020-05-09T04:46:02.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;环境现象&quot;&gt;&lt;a href=&quot;#环境现象&quot; class=&quot;headerlink&quot; title=&quot;环境现象&quot;&gt;&lt;/a&gt;环境现象&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;CoreDNS 版本：1.6.7&lt;br&gt;Docker 版本：18.06.3-ce&lt;br&gt;Kubernetes 版本：1.18.1&lt;br&gt;操作系统版本：CentOS 7.x&lt;br&gt;CentOS 内核版本：3.10.0-693.2.2.el7.x86_64&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;问题现象&quot;&gt;&lt;a href=&quot;#问题现象&quot; class=&quot;headerlink&quot; title=&quot;问题现象&quot;&gt;&lt;/a&gt;问题现象&lt;/h2&gt;&lt;p&gt;由于最近要向组内演示 Istio 1.5，故在云服务器上安装了kubernetes 1.18.1 (使用ipvs) 来配合 Istio 1.5 的演示，kubernetes 与 istio 安装完后一切顺利，bookinfo demo跑的也非常的顺利。但在一次重启整个集群后，一切都变的不那么美好了。istio-proxy起不来了，提示pilot not ready，更可悲的是service name 无法解析了，导致很多服务之间的调用都没法正常工作，有依赖的服务都不能正常启动了，为了更好的定位问题，于是卸载 Istio 1.5，重新回到k8s 1.18.1上，在一步步排查中发现，在pod中使用pod ip相互访问是可以的，由此判断，初步怀疑很可能是 DNS 出现了问题，后来慢慢发现 kube-proxy 中的错误，再定位到 IPVS parseIP Error 错误，再到解决问题。以下是整个问题定位分析&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;问题定位&quot;&gt;&lt;a href=&quot;#问题定位&quot; class=&quot;headerlink&quot; title=&quot;问题定位&quot;&gt;&lt;/a&gt;问题定位&lt;/h2&gt;&lt;p&gt;为了更好的重现问题，我重新安装了一套新的 kubernetes 1.18.1，安装完后验证一切都是ok，接下来我就重启整个集群，问题就产生了，在pod中无法解析service name了，所有的pod运行都是ok的，一切都变的”很神奇”，好吧，开启定位之旅。&lt;/p&gt;
&lt;h3 id=&quot;部署DNS调试工具&quot;&gt;&lt;a href=&quot;#部署DNS调试工具&quot; class=&quot;headerlink&quot; title=&quot;部署DNS调试工具&quot;&gt;&lt;/a&gt;部署DNS调试工具&lt;/h3&gt;&lt;p&gt;为了探针是否为 DNS 问题，这里需要提前部署用于测试 DNS 问题的 dnsutils 镜像，该镜像中包含了用于测试 DNS 问题的工具包，非常利于我们分析与发现问题。&lt;/p&gt;
&lt;p&gt;部署 ndsutils.yaml&lt;br&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;apiVersion:&lt;/span&gt; v1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;kind:&lt;/span&gt; Pod&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  name:&lt;/span&gt; dnsutils&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;spec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  containers:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  - name:&lt;/span&gt; dnsutils&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    image:&lt;/span&gt; mydlqclub/dnsutils:&lt;span class=&quot;number&quot;&gt;1.3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    imagePullPolicy:&lt;/span&gt; IfNotPresent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    command:&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&quot;sleep&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;3600&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;问题分析&quot;&gt;&lt;a href=&quot;#问题分析&quot; class=&quot;headerlink&quot; title=&quot;问题分析&quot;&gt;&lt;/a&gt;问题分析&lt;/h3&gt;&lt;h4 id=&quot;1-进入-DNS-工具-Pod-的命令行&quot;&gt;&lt;a href=&quot;#1-进入-DNS-工具-Pod-的命令行&quot; class=&quot;headerlink&quot; title=&quot;1. 进入 DNS 工具 Pod 的命令行&quot;&gt;&lt;/a&gt;1. 进入 DNS 工具 Pod 的命令行&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubectl &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it dnsutils sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;2-通过-Ping-和-Nsloopup-命令测试&quot;&gt;&lt;a href=&quot;#2-通过-Ping-和-Nsloopup-命令测试&quot; class=&quot;headerlink&quot; title=&quot;2. 通过 Ping 和 Nsloopup 命令测试&quot;&gt;&lt;/a&gt;2. 通过 Ping 和 Nsloopup 命令测试&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Ping 集群外部，例如这里 ping 一下百度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ping www.baidu.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ping: bad address &lt;span class=&quot;string&quot;&gt;&#39;www.baidu.com&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Ping 集群内部 kube-apiserver 的 Service 地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ping kubernetes.default&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ping: bad address &lt;span class=&quot;string&quot;&gt;&#39;kubernetes.default&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 使用 nslookup 命令查询域名信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ nslookup kubernetes.default&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; connection timed out; no servers could be reached&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 直接 Ping 集群内部 kube-apiserver 的 IP 地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ping 10.96.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PING 10.96.0.1 (10.96.0.1): 56 data bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from 10.96.0.1: seq=0 ttl=64 time=0.096 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from 10.96.0.1: seq=1 ttl=64 time=0.050 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from 10.96.0.1: seq=2 ttl=64 time=0.068 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 退出 dnsutils Pod 命令行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以观察到两次 ping 域名都不能 ping 通，且使用 nsloopup 分析域名信息时超时。然而，使用 ping kube-apiserver 的 IP 地址 “10.96.0.1” 则可以正常通信，所以，排除网络插件（flannel、calico 等）的问题。初步判断，很可能是 CoreDNS 组件的错误引起的某些问题，所以接下来我们测试 CoreDNS 是否正常。&lt;/p&gt;
&lt;h4 id=&quot;3-检测-CoreDNS-应用是否正常运行&quot;&gt;&lt;a href=&quot;#3-检测-CoreDNS-应用是否正常运行&quot; class=&quot;headerlink&quot; title=&quot;3. 检测 CoreDNS 应用是否正常运行&quot;&gt;&lt;/a&gt;3. 检测 CoreDNS 应用是否正常运行&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl get pods &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt; k8s-app=kube-dns -n kube-system&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NAME                       READY   STATUS    RESTARTS   AGE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;coredns-669f77d7cc-8pkpw   1/1     Running   2          6h5m&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;coredns-669f77d7cc-jk9wk   1/1     Running   2          6h5m&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可也看到 CoreDNS 两个 Pod 均正常启动，所以再查看两个 Pod 中的日志信息，看看有无错误日志：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; p &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; $(kubectl get pods --namespace=kube-system &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt; k8s-app=kube-dns -o name); \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; kubectl logs --namespace=kube-system &lt;span class=&quot;variable&quot;&gt;$p&lt;/span&gt;; &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.:53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/reload: Running configuration MD5 = 4e235fcc3696966e76816bcd9034ebc7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CoreDNS-1.6.7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;linux/amd64, go1.13.6, da7f65b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.:53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/reload: Running configuration MD5 = 4e235fcc3696966e76816bcd9034ebc7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CoreDNS-1.6.7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;linux/amd64, go1.13.6, da7f65b&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过上面信息可以观察到，日志中信息也是正常启动没有问题。再接下来，查看下 CoreDNS 的入口 Service “kube-dns” 是否存在：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;kube-dns 的 IP 为 10.96.0.10，集群内的 Pod 都是通过该 IP 与 DNS 组件进行交互，查询 DNS 信息。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl get service -n kube-system | grep kube-dns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NAME                        TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)               &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kube-dns                    ClusterIP   10.96.0.10      &amp;lt;none&amp;gt;        53/UDP,53/TCP,9153/TCP&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面显示 Service “kube-dns” 也存在，但是 Service 是通过 endpoints 和 Pod 进行绑定的，所以看看这个 CoreDNS 的 endpoints 是否存在，及信息是否正确：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl get endpoints kube-dns -n kube-system&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NAME       ENDPOINTS                                      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kube-dns   10.244.0.21:53,d10.244.2.82:53,10.244.0.21:9153&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到 endpoints 配置也是正常的，正确的与两个 CporeDNS Pod 进行了关联。&lt;/p&gt;
&lt;p&gt;经过上面一系列检测 CoreDNS 组件确实是正常运行。接下来，观察 CoreDNS 域名解析日志，进而确定 Pod 中的域名解析请求是否能够正常进入 CoreDNS。&lt;/p&gt;
&lt;h4 id=&quot;4-观察-CoreDNS-域名解析日志信息&quot;&gt;&lt;a href=&quot;#4-观察-CoreDNS-域名解析日志信息&quot; class=&quot;headerlink&quot; title=&quot;4. 观察 CoreDNS 域名解析日志信息&quot;&gt;&lt;/a&gt;4. 观察 CoreDNS 域名解析日志信息&lt;/h4&gt;&lt;p&gt;使用 &lt;code&gt;kubectl edit&lt;/code&gt; 命令来修改存储于 Kubernetes &lt;code&gt;ConfigMap&lt;/code&gt; 中的 CoreDNS 配置参数信息，添加 &lt;code&gt;log&lt;/code&gt; 参数，让 CoreDNS 日志中显示域名解析信息：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CoreDNS 配置参数说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;errors: 输出错误信息到控制台。&lt;/li&gt;
&lt;li&gt;health：CoreDNS 进行监控检测，检测地址为 &lt;a href=&quot;http://localhost:8080/health&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8080/health&lt;/a&gt; 如果状态为不健康则让 Pod 进行重启。&lt;/li&gt;
&lt;li&gt;ready: 全部插件已经加载完成时，将通过 endpoints 在 8081 端口返回 HTTP 状态 200。&lt;/li&gt;
&lt;li&gt;kubernetes：CoreDNS 将根据 Kubernetes 服务和 pod 的 IP 回复 DNS 查询。&lt;/li&gt;
&lt;li&gt;prometheus：是否开启 CoreDNS Metrics 信息接口，如果配置则开启，接口地址为 &lt;a href=&quot;http://localhost:9153/metrics&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:9153/metrics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;forward：任何不在Kubernetes 集群内的域名查询将被转发到预定义的解析器 (/etc/resolv.conf)。&lt;/li&gt;
&lt;li&gt;cache：启用缓存，30 秒 TTL。&lt;/li&gt;
&lt;li&gt;loop：检测简单的转发循环，如果找到循环则停止 CoreDNS 进程。&lt;/li&gt;
&lt;li&gt;reload：监听 CoreDNS 配置，如果配置发生变化则重新加载配置。&lt;/li&gt;
&lt;li&gt;loadbalance：DNS 负载均衡器，默认 round_robin。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 编辑 coredns 配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl edit configmap coredns -n kube-system&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apiVersion: v1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Corefile: |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .:53 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;            &lt;span class=&quot;comment&quot;&gt;#添加log&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        errors&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        health &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           lameduck 5s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ready&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        kubernetes cluster.local &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;-addr.arpa ip6.arpa &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           pods insecure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           fallthrough &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;-addr.arpa ip6.arpa&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           ttl 30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        prometheus :9153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        forward . /etc/resolv.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cache 30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reload&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loadbalance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;保存更改后 CoreDNS 会自动重新加载配置信息，不过可能需要等上一两分钟才能将这些更改传播到 CoreDNS Pod。等一段时间后，再次查看 CoreDNS 日志：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; p &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; $(kubectl get pods --namespace=kube-system &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt; k8s-app=kube-dns -o name); \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; kubectl logs --namespace=kube-system &lt;span class=&quot;variable&quot;&gt;$p&lt;/span&gt;; &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.:53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/reload: Running configuration MD5 = 6434d0912b39645ed0707a3569fd69dc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CoreDNS-1.6.7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;linux/amd64, go1.13.6, da7f65b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Reloading&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/health: Going into lameduck mode &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; 5s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] 127.0.0.1:47278 - 55171 &lt;span class=&quot;string&quot;&gt;&quot;HINFO IN 4940754309314083739.5160468069505858354. udp 57 false 512&quot;&lt;/span&gt; NXDOMAIN qr,rd,ra 57 0.040844011s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/reload: Running configuration MD5 = a4809ab99f6713c362194263016e6fac&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Reloading complete&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.:53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/reload: Running configuration MD5 = 6434d0912b39645ed0707a3569fd69dc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CoreDNS-1.6.7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;linux/amd64, go1.13.6, da7f65b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Reloading&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/health: Going into lameduck mode &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; 5s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/reload: Running configuration MD5 = a4809ab99f6713c362194263016e6fac&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Reloading complete&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] 127.0.0.1:32896 - 49064 &lt;span class=&quot;string&quot;&gt;&quot;HINFO IN 1027842207973621585.7098421666386159336. udp 57 false 512&quot;&lt;/span&gt; NXDOMAIN qr,rd,ra 57 0.044098742s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/reload: Running configuration MD5 = a4809ab99f6713c362194263016e6fac&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Reloading complete&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到 CoreDNS 已经重新加载了配置，我们再次进入 dnsuitls Pod 中执行 ping 命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 进入 DNSutils Pod 命令行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it dnsutils sh &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 执行 ping 命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ping www.baidu.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 退出 dnsutils Pod 命令行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后，再次查看 CoreDNS 的日志信息：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; p &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; $(kubectl get pods --namespace=kube-system &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt; k8s-app=kube-dns -o name); \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; kubectl logs --namespace=kube-system &lt;span class=&quot;variable&quot;&gt;$p&lt;/span&gt;; &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.:53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/reload: Running configuration MD5 = 6434d0912b39645ed0707a3569fd69dc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CoreDNS-1.6.7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;linux/amd64, go1.13.6, da7f65b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Reloading&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/health: Going into lameduck mode &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; 5s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] 127.0.0.1:47278 - 55171 &lt;span class=&quot;string&quot;&gt;&quot;HINFO IN 4940754309314083739.5160468069505858354. udp 57 false 512&quot;&lt;/span&gt; NXDOMAIN qr,rd,ra 57 0.040844011s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/reload: Running configuration MD5 = a4809ab99f6713c362194263016e6fac&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Reloading complete&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.:53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/reload: Running configuration MD5 = 6434d0912b39645ed0707a3569fd69dc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CoreDNS-1.6.7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;linux/amd64, go1.13.6, da7f65b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Reloading&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/health: Going into lameduck mode &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; 5s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/reload: Running configuration MD5 = a4809ab99f6713c362194263016e6fac&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Reloading complete&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] 127.0.0.1:32896 - 49064 &lt;span class=&quot;string&quot;&gt;&quot;HINFO IN 1027842207973621585.7098421666386159336. udp 57 false 512&quot;&lt;/span&gt; NXDOMAIN qr,rd,ra 57 0.044098742s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/reload: Running configuration MD5 = a4809ab99f6713c362194263016e6fac&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Reloading complete&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;发现和之前没有执行 ping 命令时候一样，没有 DNS 域名解析的日志信息，说明 Pod 执行域名解析时，请求并没有进入 CoreDNS 中。接下来在查看 Pod 中 DNS 配置信息，进而分析问题。&lt;/p&gt;
&lt;h4 id=&quot;5-查看-Pod-中的-DNS-配置信息&quot;&gt;&lt;a href=&quot;#5-查看-Pod-中的-DNS-配置信息&quot; class=&quot;headerlink&quot; title=&quot;5. 查看 Pod 中的 DNS 配置信息&quot;&gt;&lt;/a&gt;5. 查看 Pod 中的 DNS 配置信息&lt;/h4&gt;&lt;p&gt;一般 Pod 中的 &lt;code&gt;DNS&lt;/code&gt; 策略默认为 &lt;code&gt;ClusterFirst&lt;/code&gt;，该参数起到的作用是，优先从 &lt;code&gt;Kubernetes DNS&lt;/code&gt; 插件地址读取 &lt;code&gt;DNS&lt;/code&gt; 配置。所以，我们正常创建的 Pod 中，DNS 配置 DNS 服务器地址应该指定为 Kubernetes 集群的 DNS 插件 Service 提供的虚拟 IP 地址。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：其中 DNS 策略（dnsPolicy）支持四种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Default： 从 DNS 所在节点继承 DNS 配置，即该 Pod 的 DNS 配置与宿主机完全一致。&lt;/li&gt;
&lt;li&gt;ClusterFirst：预先从 Kubenetes 的 DNS 插件中进行 DNS 解析，如果解析不成功，才会使用宿主机的 DNS 进行解析。&lt;/li&gt;
&lt;li&gt;ClusterFirstWithHostNet：Pod 是用 HOST 模式启动的（hostnetwork），用 HOST 模式表示 Pod 中的所有容器，都使用宿主机的 /etc/resolv.conf 配置进行 DNS 解析，但如果使用了 HOST 模式，还继续使用 Kubernetes 的 DNS 服务，那就将 dnsPolicy 设置为 ClusterFirstWithHostNet。&lt;/li&gt;
&lt;li&gt;None：完全忽略 kubernetes 系统提供的 DNS，以 Pod Spec 中 dnsConfig 配置为主。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;为了再分析原因，我们接着进入 dnsutils Pod 中，查看 Pod 中 DNS 配置文件 &lt;code&gt;/etc/resolv.conf&lt;/code&gt; 配置参数是否正确：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;resolv.conf 配置参数说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;search： 指明域名查询顺序。&lt;/li&gt;
&lt;li&gt;nameserver： 指定 DNS 服务器的 IP 地址，可以配置多个 nameserver。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 进入 dnsutils Pod 内部 sh 命令行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it dnsutils sh &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查看 resolv.conf 配置文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cat /etc/resolv.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nameserver 10.96.0.10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;search kube-system.svc.cluster.local svc.cluster.local cluster.local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;options ndots:5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 退出 DNSutils Pod 命令行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到 Pod 内部的 resolv.conf 内容，其中 nameserver 指定 DNS 解析服务器 IP 为 “10.96.0.10” ，这个 IP 地址正是本人 Kubernetes 集群 CoreDNS 的 Service “kube-dns” 的 cluterIP，说明当 Pod 内部进行域名解析时，确实是将查询请求发送到 Service “kube-dns” 提供的虚拟 IP 进行域名解析。&lt;/p&gt;
&lt;p&gt;那么，既然 Pod 中 DNS 配置文件没问题，且 CoreDNS 也没问题，会不会是 Pod 本身域名解析不正常呢？或者 Service “kube-dns” 是否能够正常转发域名解析请求到 CoreDNS Pod 中？&lt;/p&gt;
&lt;p&gt;当然，猜想是没有用的，进行一下测试来观察问题到底出在哪里。&lt;/p&gt;
&lt;h4 id=&quot;6-进行观察来定位问题所在&quot;&gt;&lt;a href=&quot;#6-进行观察来定位问题所在&quot; class=&quot;headerlink&quot; title=&quot;6. 进行观察来定位问题所在&quot;&gt;&lt;/a&gt;6. 进行观察来定位问题所在&lt;/h4&gt;&lt;p&gt;上面怀疑是 Pod 本身解析域名有问题，不能正常解析域名。或者 Pod 没问题，但是请求域名解析时将请求发送到 Service “kube-dns” 后不能正常转发请求到 CoreDNS Pod。 为了验证这两点，我们可以修改 Pod 中的 /etc/resolv.conf 配置来进行测试验证。&lt;/p&gt;
&lt;p&gt;修改 &lt;code&gt;resolv.conf&lt;/code&gt; 中 &lt;code&gt;DNS&lt;/code&gt; 解析请求地址为 &lt;code&gt;阿里云 DNS&lt;/code&gt; 服务器地址，然后执行 &lt;code&gt;ping&lt;/code&gt; 命令验证是否为 &lt;code&gt;Pod&lt;/code&gt; 解析域名是否有问题：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 进入 dnsutils Pod 内部 sh 命令行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it dnsutils /bin/sh -n kube-system&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## 编辑 /etc/resolv.conf 文件，修改 nameserver 参数为阿里云提供的 DNS 服务器地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ vi /etc/resolv.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nameserver 223.5.5.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#nameserver 10.96.0.10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;search kube-system.svc.cluster.local svc.cluster.local cluster.local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;options ndots:5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 修改完后再进行 ping 命令测试，看看是否能够解析 www.baidu.com 网址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ping www.baidu.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PING www.a.shifen.com (180.101.49.11) 56(84) bytes of data.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from 180.101.49.11 (180.101.49.11): icmp_seq=1 ttl=48 time=14.0 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from 180.101.49.11 (180.101.49.11): icmp_seq=2 ttl=48 time=14.0 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 退出 DNSutils Pod 命令行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面可也观察到 Pod 中更换 DNS 服务器地址后，域名解析正常，说明 Pod 本身域名解析是没有问题的。&lt;/p&gt;
&lt;p&gt;接下来再修改 &lt;code&gt;resolv.conf&lt;/code&gt; 中 &lt;code&gt;DNS&lt;/code&gt; 解析请求地址为 &lt;code&gt;CoreDNS Pod&lt;/code&gt; 的 &lt;code&gt;IP&lt;/code&gt; 地址，这样让 &lt;code&gt;Pod&lt;/code&gt; 直接连接 &lt;code&gt;CoreDNS Pod&lt;/code&gt; 的 &lt;code&gt;IP&lt;/code&gt;，而不通过 &lt;code&gt;Service&lt;/code&gt; 进行转发，再进行 &lt;code&gt;ping&lt;/code&gt; 命令测试，进而判断 &lt;code&gt;Service kube-dns&lt;/code&gt; 是否能够正常转发请求到 &lt;code&gt;CoreDNS Pod&lt;/code&gt; 的问题：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查看 CoreDNS Pod 的 IP 地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl get pods -n kube-system -o wide | grep coredns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;coredns-669f77d7cc-rss5f     1/1     Running   0     10.244.2.155   k8s-node-2-13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;coredns-669f77d7cc-rt8l6     1/1     Running   0     10.244.1.163   k8s-node-2-12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## 进入 dnsutils Pod 内部 sh 命令行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it dnsutils /bin/sh -n kube-system&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## 编辑 /etc/resolv.conf 文件，修改 nameserver 参数为阿里云提供的 DNS 服务器地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ vi /etc/resolv.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nameserver 10.244.2.155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nameserver 10.244.1.163&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#nameserver 10.96.0.10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;search kube-system.svc.cluster.local svc.cluster.local cluster.local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;options ndots:5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 修改完后再进行 ping 命令测试，看看是否能够解析 www.baidu.com 网址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ping www.baidu.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PING www.baidu.com (39.156.66.18): 56 data bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from 39.156.66.18: seq=0 ttl=127 time=6.054 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from 39.156.66.18: seq=1 ttl=127 time=4.678 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 退出 DNSutils Pod 命令行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 观察 CoreDNS 日志信息，查看有无域名解析相关日志&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; p &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; $(kubectl get pods --namespace=kube-system &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt; k8s-app=kube-dns -o name); \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; kubectl logs --namespace=kube-system &lt;span class=&quot;variable&quot;&gt;$p&lt;/span&gt;; &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.:53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/reload: Running configuration MD5 = 6434d0912b39645ed0707a3569fd69dc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CoreDNS-1.6.7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;linux/amd64, go1.13.6, da7f65b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Reloading&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/health: Going into lameduck mode &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; 5s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] 127.0.0.1:47278 - 55171 &lt;span class=&quot;string&quot;&gt;&quot;HINFO IN 4940754309314083739.5160468069505858354. udp 57 false 512&quot;&lt;/span&gt; NXDOMAIN qr,rd,ra 57 0.040844011s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/reload: Running configuration MD5 = a4809ab99f6713c362194263016e6fac&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Reloading complete&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] 10.244.1.162:40261 - 21083 &lt;span class=&quot;string&quot;&gt;&quot;AAAA IN www.baidu.com.kube-system.svc.cluster.local. udp 62 false 512&quot;&lt;/span&gt; NXDOMAIN qr,aa,rd 155 0.000398875s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] 10.244.1.162:40261 - 20812 &lt;span class=&quot;string&quot;&gt;&quot;A IN www.baidu.com.kube-system.svc.cluster.local. udp 62 false 512&quot;&lt;/span&gt; NXDOMAIN qr,aa,rd 155 0.000505793s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] 10.244.1.162:55066 - 53460 &lt;span class=&quot;string&quot;&gt;&quot;AAAA IN www.baidu.com.svc.cluster.local. udp 50 false 512&quot;&lt;/span&gt; NXDOMAIN qr,aa,rd 143 0.000215384s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] 10.244.1.162:55066 - 53239 &lt;span class=&quot;string&quot;&gt;&quot;A IN www.baidu.com.svc.cluster.local. udp 50 false 512&quot;&lt;/span&gt; NXDOMAIN qr,aa,rd 143 0.000267642s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.:53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/reload: Running configuration MD5 = 6434d0912b39645ed0707a3569fd69dc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CoreDNS-1.6.7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;linux/amd64, go1.13.6, da7f65b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Reloading&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/health: Going into lameduck mode &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; 5s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/reload: Running configuration MD5 = a4809ab99f6713c362194263016e6fac&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Reloading complete&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] 127.0.0.1:32896 - 49064 &lt;span class=&quot;string&quot;&gt;&quot;HINFO IN 1027842207973621585.7098421666386159336. udp 57 false 512&quot;&lt;/span&gt; NXDOMAIN qr,rd,ra 57 0.044098742s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] plugin/reload: Running configuration MD5 = a4809ab99f6713c362194263016e6fac&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] Reloading complete&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] 10.244.1.162:40261 - 21083 &lt;span class=&quot;string&quot;&gt;&quot;AAAA IN www.baidu.com.kube-system.svc.cluster.local. udp 62 false 512&quot;&lt;/span&gt; NXDOMAIN qr,aa,rd 155 0.000217299s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] 10.244.1.162:40261 - 20812 &lt;span class=&quot;string&quot;&gt;&quot;A IN www.baidu.com.kube-system.svc.cluster.local. udp 62 false 512&quot;&lt;/span&gt; NXDOMAIN qr,aa,rd 155 0.000264552s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] 10.244.1.162:55066 - 53460 &lt;span class=&quot;string&quot;&gt;&quot;AAAA IN www.baidu.com.svc.cluster.local. udp 50 false 512&quot;&lt;/span&gt; NXDOMAIN qr,aa,rd 143 0.000144795s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] 10.244.1.162:55066 - 53239 &lt;span class=&quot;string&quot;&gt;&quot;A IN www.baidu.com.svc.cluster.local. udp 50 false 512&quot;&lt;/span&gt; NXDOMAIN qr,aa,rd 143 0.000221163s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;经过上面两个测试，已经可以得知，如果 &lt;code&gt;Pod DNS&lt;/code&gt; 配置中直接修改 &lt;code&gt;DNS&lt;/code&gt; 服务器地址为 &lt;code&gt;CoreDNS Pod&lt;/code&gt; 的 &lt;code&gt;IP&lt;/code&gt; 地址，&lt;code&gt;DNS&lt;/code&gt; 解析确实没有问题，能够正常解析。不过，正常的情况下 Pod 中 DNS 配置的服务器地址一般是 CoreDNS 的 Service 地址，不直接绑定 Pod IP（因为 Pod 每次重启 IP 都会发生变化）。 所以问题找到了，正是在 Pod 向 CoreDNS 的 Service “kube-dns” 进行域名解析请求转发时，出现了问题，一般 &lt;code&gt;Service&lt;/code&gt; 的问题都跟 &lt;code&gt;Kube-proxy&lt;/code&gt; 组件有关，接下来观察该组件是否存在问题。&lt;/p&gt;
&lt;h4 id=&quot;7-分析-Kube-Proxy-是否存在问题&quot;&gt;&lt;a href=&quot;#7-分析-Kube-Proxy-是否存在问题&quot; class=&quot;headerlink&quot; title=&quot;7. 分析 Kube-Proxy 是否存在问题&quot;&gt;&lt;/a&gt;7. 分析 Kube-Proxy 是否存在问题&lt;/h4&gt;&lt;p&gt;观察 Kube-proxy 的日志，查看是否存在问题：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查看 kube-proxy Pod 列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl get pods -n kube-system | grep kube-proxy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kube-proxy-6kdj2          1/1     Running   3          9h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kube-proxy-lw2q6          1/1     Running   3          9h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kube-proxy-mftlt          1/1     Running   3          9h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 选择一个 kube-proxy Pod，查看最后 5 条日志内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl logs kube-proxy-6kdj2 --tail=5  -n kube-system&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;E0326 15:20:23.159364  1 proxier.go:1950] Failed to list IPVS destinations, error: parseIP Error ip=[10 96 0 10 0 0 0 0 0 0 0 0 0 0 0 0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;E0326 15:20:23.159388  1 proxier.go:1192] Failed to sync endpoint &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; service: 10.8.0.10:53/UPD, err: parseIP Error ip=[10 96 0 16 0 0 0 0 0 0 0 0 0 0 0 0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;E0326 15:20:23.159479  1 proxier.go:1950] Failed to list IPVS destinations, error: parseIP Error ip=[10 96 0 10 0 0 0 0 0 0 0 0 0 0 0 0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;E0326 15:20:23.159501  1 proxier.go:1192] Failed to sync endpoint &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; service: 10.8.0.10:53/TCP, err: parseIP Error ip=[10 96 0 16 0 0 0 0 0 0 0 0 0 0 0 0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;E0326 15:20:23.159595  1 proxier.go:1950] Failed to list IPVS destinations, error: parseIP Error ip=[10 96 0 10 0 0 0 0 0 0 0 0 0 0 0 0]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过 kube-proxy Pod 的日志可以看到，里面有很多 Error 级别的日志信息，根据关键字 &lt;code&gt;IPVS&lt;/code&gt;、&lt;code&gt;parseIP Error&lt;/code&gt; 可知，可能是由于 IPVS 模块对 IP 进行格式化导致出现问题。&lt;/p&gt;
&lt;p&gt;因为这个问题是升级到 kubernetes 1.18 版本才出现的，所以去 Kubernetes Github 查看相关 issues，发现有人在升级 Kubernetes 版本到 1.18 后，也遇见了相同的问题，经过 issue 中 Kubernetes 维护人员讨论，分析出原因可能为新版 Kubernetes 使用的 IPVS 模块是比较新的，需要系统内核版本支持，本人使用的是 CentOS 系统，内核版本为 3.10，里面的 IPVS 模块比较老旧，缺少新版 Kubernetes IPVS 所需的依赖。&lt;/p&gt;
&lt;p&gt;根据该 issue 讨论结果，解决该问题的办法是，更新内核为新的版本。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：该 issues 地址为 &lt;a href=&quot;https://github.com/kubernetes/kubernetes/issues/89520&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/kubernetes/kubernetes/issues/89520&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;解决问题&quot;&gt;&lt;a href=&quot;#解决问题&quot; class=&quot;headerlink&quot; title=&quot;解决问题&quot;&gt;&lt;/a&gt;解决问题&lt;/h2&gt;&lt;h3 id=&quot;升级系统内核版本&quot;&gt;&lt;a href=&quot;#升级系统内核版本&quot; class=&quot;headerlink&quot; title=&quot;升级系统内核版本&quot;&gt;&lt;/a&gt;升级系统内核版本&lt;/h3&gt;&lt;p&gt;升级 Kubernetes 集群各个节点的 CentOS 系统内核版本：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 载入公钥&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 安装 ELRepo 最新版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ yum install -y https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 列出可以使用的 kernel 包版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ yum list available --disablerepo=* --enablerepo=elrepo-kernel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 安装指定的 kernel 版本：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ yum install -y kernel&lt;span class=&quot;_&quot;&gt;-lt&lt;/span&gt;-4.4.222-1.el7.elrepo --enablerepo=elrepo-kernel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查看系统可用内核&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cat /boot/grub2/grub.cfg | grep menuentry&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;menuentry &lt;span class=&quot;string&quot;&gt;&#39;CentOS Linux (3.10.0-1062.el7.x86_64) 7 (Core)&#39;&lt;/span&gt; --class centos （略）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;menuentry &lt;span class=&quot;string&quot;&gt;&#39;CentOS Linux (4.4.222-1.el7.elrepo.x86_64) 7 (Core)&#39;&lt;/span&gt; --class centos ...（略）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 设置开机从新内核启动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ grub2-set-default &lt;span class=&quot;string&quot;&gt;&quot;CentOS Linux (4.4.222-1.el7.elrepo.x86_64) 7 (Core)&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查看内核启动项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ grub2-editenv list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;saved_entry=CentOS Linux (4.4.222-1.el7.elrepo.x86_64) 7 (Core)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;重启系统使内核生效，启动完成查看内核版本是否更新：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ uname -r&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4.4.222-1.el7.elrepo.x86_64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;测试-Pod-中-DNS-是否能够正常解析&quot;&gt;&lt;a href=&quot;#测试-Pod-中-DNS-是否能够正常解析&quot; class=&quot;headerlink&quot; title=&quot;测试 Pod 中 DNS 是否能够正常解析&quot;&gt;&lt;/a&gt;测试 Pod 中 DNS 是否能够正常解析&lt;/h3&gt;&lt;p&gt;进入 Pod 内部使用 ping 命令测试 DNS 是否能正常解析：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 进入 dnsutils Pod 内部 sh 命令行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it dnsutils /bin/sh -n kube-system&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Ping 集群外部，例如这里 ping 一下百度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ping www.baidu.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from 39.156.66.14 (39.156.66.14): icmp_seq=1 ttl=127 time=7.20 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from 39.156.66.14 (39.156.66.14): icmp_seq=2 ttl=127 time=6.60 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from 39.156.66.14 (39.156.66.14): icmp_seq=3 ttl=127 time=6.38 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Ping 集群内部 kube-api 的 Service 地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ping kubernetes.default&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from kubernetes.default.svc.cluster.local (10.96.0.1): icmp_seq=1 ttl=64 time=0.051 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from kubernetes.default.svc.cluster.local (10.96.0.1): icmp_seq=2 ttl=64 time=0.051 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from kubernetes.default.svc.cluster.local (10.96.0.1): icmp_seq=3 ttl=64 time=0.064 ms&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到 Pod 中的域名解析已经恢复正常。&lt;/p&gt;
&lt;p&gt;参考: mydlq.club&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;环境现象&quot;&gt;&lt;a href=&quot;#环境现象&quot; class=&quot;headerlink&quot; title=&quot;环境现象&quot;&gt;&lt;/a&gt;环境现象&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;CoreDNS 版本：1.6.7&lt;br&gt;Docker 版本：18.06.3-ce&lt;br&gt;Kubernetes 版本：1.18.1&lt;br&gt;操作系统版本：CentOS 7.x&lt;br&gt;CentOS 内核版本：3.10.0-693.2.2.el7.x86_64&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;问题现象&quot;&gt;&lt;a href=&quot;#问题现象&quot; class=&quot;headerlink&quot; title=&quot;问题现象&quot;&gt;&lt;/a&gt;问题现象&lt;/h2&gt;&lt;p&gt;由于最近要向组内演示 Istio 1.5，故在云服务器上安装了kubernetes 1.18.1 (使用ipvs) 来配合 Istio 1.5 的演示，kubernetes 与 istio 安装完后一切顺利，bookinfo demo跑的也非常的顺利。但在一次重启整个集群后，一切都变的不那么美好了。istio-proxy起不来了，提示pilot not ready，更可悲的是service name 无法解析了，导致很多服务之间的调用都没法正常工作，有依赖的服务都不能正常启动了，为了更好的定位问题，于是卸载 Istio 1.5，重新回到k8s 1.18.1上，在一步步排查中发现，在pod中使用pod ip相互访问是可以的，由此判断，初步怀疑很可能是 DNS 出现了问题，后来慢慢发现 kube-proxy 中的错误，再定位到 IPVS parseIP Error 错误，再到解决问题。以下是整个问题定位分析&lt;/p&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/categories/kubernetes/"/>
    
      <category term="coredns" scheme="http://icyxp.github.io/categories/kubernetes/coredns/"/>
    
      <category term="ipvs" scheme="http://icyxp.github.io/categories/kubernetes/coredns/ipvs/"/>
    
    
      <category term="k8s" scheme="http://icyxp.github.io/tags/k8s/"/>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/tags/kubernetes/"/>
    
      <category term="coredns" scheme="http://icyxp.github.io/tags/coredns/"/>
    
      <category term="ipvs" scheme="http://icyxp.github.io/tags/ipvs/"/>
    
      <category term="kube-proxy" scheme="http://icyxp.github.io/tags/kube-proxy/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes 在 aws 上的应用</title>
    <link href="http://icyxp.github.io//blog/2020/01/k8s-k8s-in-aws-arch.html"/>
    <id>http://icyxp.github.io//blog/2020/01/k8s-k8s-in-aws-arch.html</id>
    <published>2020-01-08T13:00:00.000Z</published>
    <updated>2020-01-08T06:26:45.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;kubernetes-in-aws-Overview（EKS）&quot;&gt;&lt;a href=&quot;#kubernetes-in-aws-Overview（EKS）&quot; class=&quot;headerlink&quot; title=&quot;kubernetes in aws Overview（EKS）&quot;&gt;&lt;/a&gt;kubernetes in aws Overview（EKS）&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/k8s/aws_eks_arch.png&quot; alt=&quot;eks_in_aws&quot;&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;上图是 kubernetes(EKS) 在 aws 上的整体情况，下面我会对每块进行展开说明&lt;/p&gt;
&lt;h2 id=&quot;分解说明&quot;&gt;&lt;a href=&quot;#分解说明&quot; class=&quot;headerlink&quot; title=&quot;分解说明&quot;&gt;&lt;/a&gt;分解说明&lt;/h2&gt;&lt;h3 id=&quot;kubernetes-or-eks&quot;&gt;&lt;a href=&quot;#kubernetes-or-eks&quot; class=&quot;headerlink&quot; title=&quot;kubernetes or eks&quot;&gt;&lt;/a&gt;kubernetes or eks&lt;/h3&gt;&lt;p&gt;kubernetes 原生支持在 aws 上使用，具体如何启用可参考&lt;a href=&quot;http://team.jiunile.com/blog/2019/03/k8s-cloud.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kuberenetes 云应用实践&lt;/a&gt;，这里不在累赘说明。既然选择在云上使用 k8s ，那就直接使用云本身提供的能力（&lt;a href=&quot;https://eksworkshop.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EKS&lt;/a&gt;），就没必要自己再去适配一遍，毕竟云厂商已经提供了这样的服务，为什么不去使用呢？不过自己也可以去了解EKS为我们做了什么？怎么去管理它？&lt;/p&gt;
&lt;h4 id=&quot;EKS&quot;&gt;&lt;a href=&quot;#EKS&quot; class=&quot;headerlink&quot; title=&quot;EKS&quot;&gt;&lt;/a&gt;EKS&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://eksworkshop.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EKS&lt;/a&gt; 其实就是帮我们托管了master节点（3 master集群），其次更好的与aws资源进行了集成，帮助我们在上层更轻松的使用，&lt;a href=&quot;https://eksworkshop.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EKS&lt;/a&gt; 默认会集成以下组件:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;kube-proxy&lt;/li&gt;
&lt;li&gt;coredns&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/aws/amazon-vpc-cni-k8s&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;amazon-k8s-cni&lt;/a&gt; (网络插件-替代calico，下面会介绍为何使用它)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;使用 &lt;a href=&quot;https://eksworkshop.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EKS&lt;/a&gt; 后，我们就不需要在关注 k8s master 的安装以及高可用，以及怎么在云上（aws）的集成，同时在开源的 kubernetes 上做了优化。当然，你可以可以选择自建，毕竟这些你都可以搭建出来，我们在 aws 中国就是自建的，毕竟 &lt;a href=&quot;https://eksworkshop.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EKS&lt;/a&gt; 在国内还未上线，但如果是在国外或者国内上线的前提下需衡量付出的时间成本是否合算？&lt;/p&gt;
&lt;h4 id=&quot;如何管理&quot;&gt;&lt;a href=&quot;#如何管理&quot; class=&quot;headerlink&quot; title=&quot;如何管理&quot;&gt;&lt;/a&gt;如何管理&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://www.terraform.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;terrafrom&lt;/a&gt; or &lt;a href=&quot;https://eksctl.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;eksctl&lt;/a&gt;，最终我选择了后者，理由也很简单，在我看来一个就好比是”学生”，另一个则是”亲儿子”，&lt;a href=&quot;https://eksctl.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;eksctl&lt;/a&gt; 由 aws 官方提供专门为 &lt;a href=&quot;https://eksworkshop.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EKS&lt;/a&gt; 提供的命令行工具，它提供了更多的参数同时管理起来也非常的方便，如果你是深度管理，则使用它，&lt;a href=&quot;https://www.terraform.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;terrafrom&lt;/a&gt; 则是大众普照中的一个，提供的参数也是有限，如果简单管理可以使用它。&lt;/p&gt;
&lt;h3 id=&quot;负载均衡器ELB&quot;&gt;&lt;a href=&quot;#负载均衡器ELB&quot; class=&quot;headerlink&quot; title=&quot;负载均衡器ELB&quot;&gt;&lt;/a&gt;负载均衡器ELB&lt;/h3&gt;&lt;h4 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h4&gt;&lt;p&gt;aws 官方提供了三种负载均衡器，我简单成为 &lt;code&gt;clb&lt;/code&gt;、&lt;code&gt;alb&lt;/code&gt;、&lt;code&gt;nlb&lt;/code&gt;，&lt;code&gt;clb&lt;/code&gt; 即将淘汰也是最早的一代，这里主要阐述 &lt;code&gt;alb&lt;/code&gt; 7层负载  与 &lt;code&gt;nlb&lt;/code&gt; 4层负载 ，该如何选择，则取决于你的业务，他们之间的特征也很明显，如果你是需要关注 &lt;code&gt;header&lt;/code&gt; 头信息的，如 &lt;code&gt;x-forward-for&lt;/code&gt; 或 &lt;code&gt;x-forward-proto&lt;/code&gt; 等信息的则使用 &lt;code&gt;alb&lt;/code&gt;，如果不需要则使用 &lt;code&gt;nlb&lt;/code&gt; 性能高。具体想了解，可参考aws官方文档：&lt;a href=&quot;https://aws.amazon.com/cn/elasticloadbalancing/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://aws.amazon.com/cn/elasticloadbalancing/&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;管理&quot;&gt;&lt;a href=&quot;#管理&quot; class=&quot;headerlink&quot; title=&quot;管理&quot;&gt;&lt;/a&gt;管理&lt;/h4&gt;&lt;p&gt;同样我们也面临着管理的问题，是使用 &lt;a href=&quot;https://www.terraform.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;terrafrom&lt;/a&gt; 还是别的呢？毕竟我们使用了 k8s ，它有很好的 &lt;code&gt;ingress&lt;/code&gt; 帮我们管理着对外的访问不是么？最终，我选择了 &lt;a href=&quot;https://kubernetes-sigs.github.io/aws-alb-ingress-controller/guide/controller/config/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;alb-ingress-controller&lt;/a&gt;，同样也是 aws 出品，它很好的与 ELB 进行了集成，我们只需要编写 &lt;code&gt;ingress&lt;/code&gt; 文件，加上对应的注解，就可以很方便的使用 ELB，目前支持 &lt;code&gt;alb&lt;/code&gt; 与 &lt;code&gt;nlb&lt;/code&gt; 这两个负载均衡器的使用。&lt;/p&gt;
&lt;p&gt;对 &lt;a href=&quot;https://kubernetes-sigs.github.io/aws-alb-ingress-controller/guide/controller/config/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;alb-ingress-controller&lt;/a&gt; 的使用也有一定的注意，推荐是一个对外暴露服务一个 &lt;code&gt;ingress&lt;/code&gt;, &lt;strong&gt;同时注意不要人为去 aws consol 界面去修改已有通过 &lt;a href=&quot;https://kubernetes-sigs.github.io/aws-alb-ingress-controller/guide/controller/config/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;alb-ingress-controller&lt;/a&gt;  创建出来的负载均衡器，如果你修改了，你会发现过一会就会还原了&lt;/strong&gt;，因为在 k8s 中的 alb 控制器会帮你复原，所以一切的变更请使用 &lt;code&gt;ingress&lt;/code&gt;, 同时还有一个不好的弊端就是在 alb/nlb 目标群组中，后端协议只能二选一，无法 http/https 同时存在，唯一的方法是使用两个 &lt;code&gt;ingress&lt;/code&gt; ，不过我们大多数后端访问都是 http 协议。&lt;/p&gt;
&lt;p&gt;详细了解可参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kubernetes-sigs/aws-alb-ingress-controller/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/kubernetes-sigs/aws-alb-ingress-controller/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://kubernetes-sigs.github.io/aws-alb-ingress-controller/guide/controller/config/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://kubernetes-sigs.github.io/aws-alb-ingress-controller/guide/controller/config/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/zh_cn/eks/latest/userguide/alb-ingress.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://docs.aws.amazon.com/zh_cn/eks/latest/userguide/alb-ingress.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/cn/blogs/china/kubernetes-ingress-aws-alb-ingress-controller/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://aws.amazon.com/cn/blogs/china/kubernetes-ingress-aws-alb-ingress-controller/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;网络插件&quot;&gt;&lt;a href=&quot;#网络插件&quot; class=&quot;headerlink&quot; title=&quot;网络插件&quot;&gt;&lt;/a&gt;网络插件&lt;/h3&gt;&lt;p&gt;同样，在网络插件上，我也面临着选择的问题，不过现在回想起来，居然选择了云，那就基本大概率上去拥抱云原生提供的插件，不是么，毕竟它和云结合的很好，这里我介绍下 &lt;a href=&quot;https://github.com/aws/amazon-vpc-cni-k8s&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;amazon-k8s-cni&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/aws/amazon-vpc-cni-k8s&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;amazon-k8s-cni&lt;/a&gt; 我就说一件事，&lt;strong&gt;pod 与你现有的 vpc 打通&lt;/strong&gt;，但劣势也很明显，&lt;code&gt;就是 pod 的 ip 会占有你划分的 vpc ip池&lt;/code&gt;，如果你的 &lt;code&gt;subnet&lt;/code&gt; 网段规划的不好的话，你的 ip 将会很快用光，所有我建议你的 &lt;code&gt;vpc&lt;/code&gt; 网段是 &lt;code&gt;16&lt;/code&gt; 位，&lt;code&gt;subnet&lt;/code&gt; 网段是 &lt;code&gt;20&lt;/code&gt; 位的，具体不同的网段可以放多少个 pod 可以参考这边文章了解下：&lt;a href=&quot;https://www.yiibai.com/ipv4/ipv4_subnetting.html，&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.yiibai.com/ipv4/ipv4_subnetting.html，&lt;/a&gt; 这里也不在累赘。 &lt;/p&gt;
&lt;p&gt;同时 &lt;a href=&quot;https://github.com/aws/amazon-vpc-cni-k8s&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;amazon-k8s-cni&lt;/a&gt; 对主机类型上能起多少 pod 也是有限制的，不同的机型上启动的 pod 数量是不一样的，这里我推荐尽可能的使用中等规模的机型来取缔多个小机型。具体可参考：&lt;a href=&quot;https://github.com/aws/amazon-vpc-cni-k8s/blob/f7a7d53baf769846c20467cfa27f0172eca570c1/pkg/awsutils/vpc_ip_resource_limit.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vpc_ip_resource_limit&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;当然如果你是本地机房或者云未给提供网络插件的话，那我还是推荐你使用 &lt;a href=&quot;https://www.projectcalico.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;calico&lt;/a&gt;，毕竟它还是非常的强大！有兴趣的伙伴还是可以好好了解下。&lt;/p&gt;
&lt;h3 id=&quot;访问安全&quot;&gt;&lt;a href=&quot;#访问安全&quot; class=&quot;headerlink&quot; title=&quot;访问安全&quot;&gt;&lt;/a&gt;访问安全&lt;/h3&gt;&lt;p&gt;容器访问安全也是令我非常困扰的一个问题，aws 在资源访问方面有着非常好的权限控制 &lt;code&gt;iam role&lt;/code&gt; ，但放到 k8s 容器中，一切都变的非常不美好了， 直到最近 aws eks 推出了 &lt;a href=&quot;https://docs.aws.amazon.com/zh_cn/eks/latest/userguide/iam-roles-for-service-accounts.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;service account for iam role&lt;/a&gt;， 在 eks 没正式推出 &lt;a href=&quot;https://docs.aws.amazon.com/zh_cn/eks/latest/userguide/iam-roles-for-service-accounts.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;service account for iam role&lt;/a&gt; 之前，有两种方式可以进行访问控制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;access key/secret key&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jtblin/kube2iam&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kube2iam&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;针对以上两个访问，都有一定的缺陷，用key来控制的问题在于本身管理key就是一件头痛的事情，key的泄漏和定期更换非常痛苦，使用 &lt;a href=&quot;https://github.com/jtblin/kube2iam&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kube2iam&lt;/a&gt; 问题在于你需要保证这个插件的稳定性和性能，一旦出现问题，你会发现那就是灾难性的，而且也不易排查，毕竟多层组件就多提升了出问题的概率，毕竟还是如此重要的组件。&lt;/p&gt;
&lt;p&gt;最后，我隆重推荐大家使用 &lt;a href=&quot;https://docs.aws.amazon.com/zh_cn/eks/latest/userguide/iam-roles-for-service-accounts.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;service account for iam role&lt;/a&gt; ，具体教程可点击链接查看。 但对于自建的小伙们只能退而求其次 使用 key 或者 &lt;a href=&quot;https://github.com/jtblin/kube2iam&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kube2iam&lt;/a&gt; 来进行管理控制了&lt;/p&gt;
&lt;h3 id=&quot;Why-kong&quot;&gt;&lt;a href=&quot;#Why-kong&quot; class=&quot;headerlink&quot; title=&quot;Why kong?&quot;&gt;&lt;/a&gt;Why kong?&lt;/h3&gt;&lt;p&gt;为什么选型 &lt;a href=&quot;http://getkong.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kong&lt;/a&gt; ，我想它的官方文档能更好的为你阐述，我从0.9开始就使用它了，直到现在维持在0.14.1，往后引入了 &lt;code&gt;service mesh&lt;/code&gt; 的概念，选型 &lt;a href=&quot;http://getkong.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kong&lt;/a&gt; 的理由也很简单，开源、插件丰富、易于二次开发。后面可以专门分享一下我们是如何使用  &lt;a href=&quot;http://getkong.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kong&lt;/a&gt; 作为我们的业务网关，同时我们是如何改造 &lt;code&gt;JWT&lt;/code&gt; 插件来实现鉴授权，以及通过网关审计日志定位问题，对外核心服务进行了限流等控制。如果你的需求也是如此，让业务保持足够简单专注于业务的实现，跨语言，微服务化，但同时需要一些服务治理相关的需求，还没有上 k8s 或者还没到 &lt;a href=&quot;https://istio.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;isito&lt;/a&gt; 这种重 &lt;code&gt;service mesh&lt;/code&gt; 的地步，那  &lt;a href=&quot;http://getkong.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kong&lt;/a&gt; 就是你最好的选择。&lt;/p&gt;
&lt;h3 id=&quot;资源池划分&quot;&gt;&lt;a href=&quot;#资源池划分&quot; class=&quot;headerlink&quot; title=&quot;资源池划分&quot;&gt;&lt;/a&gt;资源池划分&lt;/h3&gt;&lt;p&gt;在资源池划分上，我将网关和业务的池子单独分开，同时开辟了一块竞价池，原因如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;网关池划分： 网关作为业务对外流量的统一入口，提现出非常重要的地步，故而单独分配了一块资源池，同时需要与负载均衡器的配置，对机器权限的控制力度也是和普通业务池是不同的。&lt;/li&gt;
&lt;li&gt;业务池划分：这个就什么好说的，用于承载你的业务，跑长期运行的服务。&lt;/li&gt;
&lt;li&gt;竞价池划分： 这里需要配合 &lt;a href=&quot;https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cluster autoscaler&lt;/a&gt; 一起使用更佳，用于跑一些离线任务，随用随起，用完即毁，方便至极。当然如何你使用的是 EKS 直接可以配合 &lt;a href=&quot;https://aws.amazon.com/cn/fargate/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fargate&lt;/a&gt; 来直接使用。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;Cluster Autoscaler：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/zh_cn/eks/latest/userguide/cluster-autoscaler.html#ca-ng-considerations&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://docs.aws.amazon.com/zh_cn/eks/latest/userguide/cluster-autoscaler.html#ca-ng-considerations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;未来展望&quot;&gt;&lt;a href=&quot;#未来展望&quot; class=&quot;headerlink&quot; title=&quot;未来展望&quot;&gt;&lt;/a&gt;未来展望&lt;/h3&gt;&lt;p&gt;目前，我们通过 &lt;a href=&quot;http://getkong.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kong&lt;/a&gt; 来实现了对外流量的管理与控制，但对内部服务之间的访问控制还未开始，也缺乏一些服务治理的手段，当然，使用 &lt;a href=&quot;http://getkong.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kong&lt;/a&gt; 也可以达到，但这样我们就会过渡依赖这个集中网关了，一旦故障，那是灾难性的，&lt;code&gt;service mesh&lt;/code&gt; 的到来正式解决此类问题，让服务治理变的更游刃有余，后面我们会上 &lt;a href=&quot;https://istio.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;isito&lt;/a&gt; 来实现诸如灰度、蓝绿发布以及对内部服务调用限流、监控等控制能力的加强。&lt;/p&gt;
&lt;h2 id=&quot;文档&quot;&gt;&lt;a href=&quot;#文档&quot; class=&quot;headerlink&quot; title=&quot;文档&quot;&gt;&lt;/a&gt;文档&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://docs.aws.amazon.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://getkong.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://getkong.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://eksctl.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://eksctl.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://eksworkshop.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://eksworkshop.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;kubernetes-in-aws-Overview（EKS）&quot;&gt;&lt;a href=&quot;#kubernetes-in-aws-Overview（EKS）&quot; class=&quot;headerlink&quot; title=&quot;kubernetes in aws Overview（EKS）&quot;&gt;&lt;/a&gt;kubernetes in aws Overview（EKS）&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/k8s/aws_eks_arch.png&quot; alt=&quot;eks_in_aws&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/categories/kubernetes/"/>
    
      <category term="cloud" scheme="http://icyxp.github.io/categories/kubernetes/cloud/"/>
    
    
      <category term="k8s" scheme="http://icyxp.github.io/tags/k8s/"/>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/tags/kubernetes/"/>
    
      <category term="aws" scheme="http://icyxp.github.io/tags/aws/"/>
    
      <category term="eks" scheme="http://icyxp.github.io/tags/eks/"/>
    
  </entry>
  
  <entry>
    <title>分析并解决AWS服务从ec2迁移至Kubernetes后延迟增加的问题</title>
    <link href="http://icyxp.github.io//blog/2020/01/k8s-k8s-in-aws-latency.html"/>
    <id>http://icyxp.github.io//blog/2020/01/k8s-k8s-in-aws-latency.html</id>
    <published>2020-01-06T13:00:00.000Z</published>
    <updated>2020-01-07T07:30:48.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;问题概要&quot;&gt;&lt;a href=&quot;#问题概要&quot; class=&quot;headerlink&quot; title=&quot;问题概要&quot;&gt;&lt;/a&gt;问题概要&lt;/h2&gt;&lt;p&gt;上周我们将一个微服务迁移到中央平台上，包括CI/CD，Kubernetes运行时，metric和其他一些程序。这次实验是为了之后一个月里大概150个微服务的迁移作准备，所有这些服务支撑着西班牙在线市场的运营。&lt;/p&gt;
&lt;p&gt;当我们将应用程序部署到Kubernetes上，并且将一些生产流量导入其中之后，事情开始有些不妙了。Kubernetes上的请求延迟比EC2上的高10倍左右。除非我们能找到解决方案，不然这会是微服务迁移的最大障碍，甚至可能彻底摧毁整个项目。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;为什么Kubernetes上的延时比EC2高那么多？&quot;&gt;&lt;a href=&quot;#为什么Kubernetes上的延时比EC2高那么多？&quot; class=&quot;headerlink&quot; title=&quot;为什么Kubernetes上的延时比EC2高那么多？&quot;&gt;&lt;/a&gt;为什么Kubernetes上的延时比EC2高那么多？&lt;/h2&gt;&lt;p&gt;为了找到系统瓶颈，我们收集了整个请求路径的metric。架构很简单，一个API网关（Zuul）将请求路由到EC2或者Kubernetes的微服务里。在Kubernetes上，我们使用NGINX Ingress控制器，后台是常规的Deployment运行一个基于Spring的JVM应用程序。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;                                  EC2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            +---------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            |  +---------+  |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            |  |         |  |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       +-------&amp;gt; BACKEND |  |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       |    |  |         |  |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       |    |  +---------+  |                   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       |    +---------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             +------+  |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Public       |      |  |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      -------&amp;gt; ZUUL +--+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;traffic      |      |  |              Kubernetes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             +------+  |    +-----------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       |    |  +-------+      +---------+ |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       |    |  |       |  xx  |         | |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       +-------&amp;gt; NGINX +------&amp;gt; BACKEND | |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            |  |       |  xx  |         | |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            |  +-------+      +---------+ |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            +-----------------------------+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;问题看上去是后台的上游延迟（上图用xx表示）。当应用程序部署在EC2上时，响应时间大概20ms。在Kubernetes上则需要100～200ms。&lt;/p&gt;
&lt;p&gt;我们很快排除了运行时变更的影响。JVM版本是一致的。容器化的影响也被排除了，因为EC2上也是运行在容器里。也和压力无关，因为即使每秒只有1个请求仍然能看到很高的延时。也不是GC的影响。&lt;/p&gt;
&lt;p&gt;一个Kubernetes管理员问应用程序是否有外部的依赖，比如以前DNS解析曾经导致过类似的问题，这是目前为止最可能的猜想。&lt;/p&gt;
&lt;h2 id=&quot;猜想1：DNS解析&quot;&gt;&lt;a href=&quot;#猜想1：DNS解析&quot; class=&quot;headerlink&quot; title=&quot;猜想1：DNS解析&quot;&gt;&lt;/a&gt;猜想1：DNS解析&lt;/h2&gt;&lt;p&gt;每次请求里，我们的应用程序会向AWS ElasticSearch实例（域名类似 elastic.spain.adevinta.com）发送1～3次请求。我们在容器内放置了一个shell脚本可以验证这个域名从DNS解析需要多长时间。&lt;/p&gt;
&lt;p&gt;容器内的DNS查询：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@be-851c76f696-alf8z /]&lt;span class=&quot;comment&quot;&gt;# while true; do dig &quot;elastic.spain.adevinta.com&quot; | grep time; sleep 2; done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; Query time: 22 msec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; Query time: 22 msec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; Query time: 29 msec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; Query time: 21 msec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; Query time: 28 msec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; Query time: 43 msec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; Query time: 43 msec&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行着对应相同用程序的EC2实例里的同样的查询：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bash-4.4&lt;span class=&quot;comment&quot;&gt;# while true; do dig &quot;elastic.spain.adevinta.com&quot; | grep time; sleep 2; done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; Query time: 77 msec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; Query time: 0 msec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; Query time: 0 msec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; Query time: 0 msec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; Query time: 0 msec&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;大概30ms的解析时间，似乎我们的应用程序在和ElasticSearch通信时增加了DNS解析的额外消耗。&lt;/p&gt;
&lt;p&gt;但是这里有两点很奇怪：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在Kubernetes里已经有很多应用程序和AWS资源通信，但是并没有这个问题。&lt;/li&gt;
&lt;li&gt;我们知道JVM实现了内存内的DNS缓存。查看这些镜像的配置，在 $JAVA_HOME/jre/lib/security/java.security里配置了TTL为 networkaddress.cache.ttl=10。JVM应该能够缓存10秒内的所有DNS查询。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了确认是DNS的影响，我们决定避免DNS解析并且查看问题是否会消失。首先尝试让应用程序直接和Elasticsearch的IP通信，而不是域名。这要求代码变更并且重新部署，因此我们只是简单地在 /etc/hosts文件里添加了域名和IP的映射：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;34.55.5.111 elastic.spain.adevinta.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样容器可以立刻解析IP。我们确实观察到了延时的改善，但是离我们的最终目标还是很远。即使DNS解析足够快，但是真实原因还是没有找到。&lt;/p&gt;
&lt;h2 id=&quot;网络plumbing&quot;&gt;&lt;a href=&quot;#网络plumbing&quot; class=&quot;headerlink&quot; title=&quot;网络plumbing&quot;&gt;&lt;/a&gt;网络plumbing&lt;/h2&gt;&lt;p&gt;我们决定在容器里执行 tcpdump，这样可以看到网络到底干了些什么。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@be-851c76f696-alf8z /]&lt;span class=&quot;comment&quot;&gt;# tcpdump -leni any -w capture.pcap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后发送了一些请求并且下载了capture文件（ &lt;code&gt;kubectl cpmy-service:/capture.pcap capture.pcap&lt;/code&gt;）在&lt;a href=&quot;https://wiki.wireshark.org/FrontPage&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Wireshark&lt;/a&gt;里查看。&lt;/p&gt;
&lt;p&gt;DNS查询看上去很正常（除了一些细节，之后会提到）但是我们的服务处理请求的时候很奇怪。下图是capture的截图，显示一个请求从开始到响应的全过程。&lt;br&gt;&lt;img src=&quot;/images/wireshark.jpg&quot; alt=&quot;Wireshark&quot;&gt;&lt;/p&gt;
&lt;p&gt;第一列是packet序号。我用不同的颜色标示不同的TCP流。&lt;/p&gt;
&lt;p&gt;绿色的流从&lt;code&gt;packet 328&lt;/code&gt;开始，显示客户端（172.17.22.150）开启了容器（172.17.36.147）的TCP连接。最初的握手（328-330）之后，&lt;code&gt;packet 331&lt;/code&gt;开始 &lt;code&gt;HTTP GET/v1/..&lt;/code&gt;，这是对我们自己服务的入站请求。整个流程花了&lt;strong&gt;1ms&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;灰色流从&lt;code&gt;packet 339&lt;/code&gt;开始，展示了我们的服务发送一个HTTP请求给Elasticsearch实例（这里看不到TCP握手过程因为它使用了一个已有的TCP连接）。这里花了&lt;strong&gt;18ms&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;至此都没有什么问题，所花的时间和预计差不多（&lt;strong&gt;～20-30ms&lt;/strong&gt;）。&lt;/p&gt;
&lt;p&gt;但是在这两次交互之间，紫色部分花了&lt;strong&gt;86ms&lt;/strong&gt;。这里发生了什么？在&lt;code&gt;packet 333&lt;/code&gt;， 我们的服务发送了HTTP GET到 &lt;code&gt;/latest/meta-data/iam/security-credentials&lt;/code&gt;，之后，在同一个TCP连接里，另一个GET发送到 &lt;code&gt;/latest/meta-data/iam/security-credentials/arn:..&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我们发现每次请求里都会这样做。DNS解析在容器里确实有一点慢（解释很有意思，我会在另一篇文章里介绍）。但是高延迟的实际原因是每次请求里对&lt;code&gt;AWS Instance Metadata&lt;/code&gt;的查询。&lt;/p&gt;
&lt;h2 id=&quot;猜想2：AWS调用&quot;&gt;&lt;a href=&quot;#猜想2：AWS调用&quot; class=&quot;headerlink&quot; title=&quot;猜想2：AWS调用&quot;&gt;&lt;/a&gt;猜想2：AWS调用&lt;/h2&gt;&lt;p&gt;这两个endpoint都是&lt;a href=&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html#instance-metadata-security-credentials&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;AWS Instance Metadata API&lt;/code&gt;&lt;/a&gt;的一部分。我们的微服务从Elasticsearch里读取时会用到这个服务。这两个调用都是基础的授权工作流。&lt;/p&gt;
&lt;p&gt;第一个请求里查询的endpoint得到和该实例相关联的IAM角色。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/ &lt;span class=&quot;comment&quot;&gt;# curl http://169.254.169.254/latest/meta-data/iam/security-credentials/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arn:aws:iam::&amp;lt;account_id&amp;gt;:role/some_role&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第二个请求查询第二个endpoint得到该实例的临时credential。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/ &lt;span class=&quot;comment&quot;&gt;# curl http://169.254.169.254/latest/meta-data/iam/security-credentials/arn:aws:iam::&amp;lt;account_id&amp;gt;:role/some_role&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;Code&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Success&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;LastUpdated&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2012-04-26T16:39:16Z&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;Type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;AWS-HMAC&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;AccessKeyId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;ASIAIOSFODNN7EXAMPLE&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;SecretAccessKey&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;Token&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;token&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;Expiration&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2017-05-17T15:09:54Z&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;客户端可以在短时间内使用它们，并且需要周期性地（在 Expiration之前）去获取新的credencial。模型很简单：AWS为了安全考虑经常轮询临时密钥，但是客户端可以将密钥缓存几分钟来弥补获得新credencial所带来的性能影响。&lt;/p&gt;
&lt;p&gt;AWS Java SDK应该处理这些，但是，因为某种原因，它没有这么做。&lt;/p&gt;
&lt;p&gt;在GitHub issue里搜索后找到了&lt;a href=&quot;https://github.com/aws/aws-sdk-java/issues/1921&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#1921&lt;/a&gt;，里面有我们需要的线索。&lt;/p&gt;
&lt;p&gt;AWS SDK在下面两种情况的某一种满足时就会刷新credential：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Expiration在 EXPIRATION_THRESHOLD内，硬编码为15分钟。&lt;/li&gt;
&lt;li&gt;前一次刷新credential的尝试所花时间大于 REFRESH_THRESHOLD，硬编码为60分钟。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们需要查看得到的证书里的实际过期时间，因此运行了两个 cURL命令调用AWS API，一次从容器里，一次从EC2实例里。从容器里获得的证书过期时间短得多，是15分钟。&lt;/p&gt;
&lt;p&gt;问题变得清晰了：我们的服务在第一个请求里会获取临时credential。因为它有15分钟的过期时间，在下一次请求里，AWS SDK会重新刷新credential。每次请求都会这样。&lt;/p&gt;
&lt;h2 id=&quot;为什么credential过期时间变短了？&quot;&gt;&lt;a href=&quot;#为什么credential过期时间变短了？&quot; class=&quot;headerlink&quot; title=&quot;为什么credential过期时间变短了？&quot;&gt;&lt;/a&gt;为什么credential过期时间变短了？&lt;/h2&gt;&lt;p&gt;AWS Intance Metadata Service设计上是在EC2实例里使用，而不是Kubernetes上。我们希望应用程序保留相同的接口。因此使用了&lt;a href=&quot;https://github.com/uswitch/kiam&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kiam&lt;/a&gt;，在每个Kubernetes节点上运行一个agent，允许用户（部署应用程序到集群里的工程师）将IAM角色关联到Pod容器上，就像它是个EC2实例一样。它会截获发送到AWS Instance Metadata服务的调用，并且使用agent提前从AWS获取并放在缓存里的内容响应。从应用程序的角度来看，和运行在EC2上没什么区别。&lt;/p&gt;
&lt;p&gt;Kiam给Pod提供的正是短期的credencial，这有道理，因为它假定Pod的平均生命周期比EC2实例要短。默认值就是15分钟。&lt;/p&gt;
&lt;p&gt;但是如果两处都使用默认值就有问题了。提供给应用程序的证书过期时间为15分钟。AWS Java SDK会强制刷新任何过期时间少于15分钟的证书。&lt;/p&gt;
&lt;p&gt;结果就是每个请求都会强制刷新临时证书，这需要两次调用AWS API，给每次请求都带来了巨大的延迟。之后我们找到了&lt;a href=&quot;https://github.com/aws/aws-sdk-java/issues/1893&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AWS Java SDK的一个功能请求&lt;/a&gt;，里面提到了同样的问题。&lt;/p&gt;
&lt;p&gt;解决办法很简单，我们重新配置了Kiam，请求更长过期时间的credencial。当这一变更生效后，请求就不用每次都调用AWS Metadata服务了，而且延迟比EC2还要小。&lt;/p&gt;
&lt;h2 id=&quot;收获&quot;&gt;&lt;a href=&quot;#收获&quot; class=&quot;headerlink&quot; title=&quot;收获&quot;&gt;&lt;/a&gt;收获&lt;/h2&gt;&lt;p&gt;从我们迁移的经验里，最经常遇到的问题不是Kubernetes的bug或者平台的问题。也不是微服务本身的问题。问题通常只是因为集成。我们将以前从来没有一起集成过的复杂系统混合在一起，并且期望它们组成单个的大系统。可移动组件越多，可能发生问题的地方就越多。&lt;/p&gt;
&lt;p&gt;在这个问题里，高延迟并不是因为bug或者Kubernetes、Kiam、AWS Java SDK或我们自己微服务本身有什么问题。它是Kiam和AWS Java SDK里两个独立的默认值组合在一起导致的问题。独立来看，两个默认值都没什么问题：AWS Java SDK强制credential刷新策略和Kiam比较低的默认过期时间。但是组合起来就导致了问题。&lt;strong&gt;两个单独看都是正确的决定合在一起并不一定是正确的&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果使用的是aws的eks，现在可以不用使用kiam这个插件来实现role访问aws服务，aws eks 实现了service accounts 与 role 绑定，具体参考：&lt;a href=&quot;https://docs.aws.amazon.com/zh_cn/eks/latest/userguide/iam-roles-for-service-accounts.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://docs.aws.amazon.com/zh_cn/eks/latest/userguide/iam-roles-for-service-accounts.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;来源：kubernetes-added-a-0-to-my-latency&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题概要&quot;&gt;&lt;a href=&quot;#问题概要&quot; class=&quot;headerlink&quot; title=&quot;问题概要&quot;&gt;&lt;/a&gt;问题概要&lt;/h2&gt;&lt;p&gt;上周我们将一个微服务迁移到中央平台上，包括CI/CD，Kubernetes运行时，metric和其他一些程序。这次实验是为了之后一个月里大概150个微服务的迁移作准备，所有这些服务支撑着西班牙在线市场的运营。&lt;/p&gt;
&lt;p&gt;当我们将应用程序部署到Kubernetes上，并且将一些生产流量导入其中之后，事情开始有些不妙了。Kubernetes上的请求延迟比EC2上的高10倍左右。除非我们能找到解决方案，不然这会是微服务迁移的最大障碍，甚至可能彻底摧毁整个项目。&lt;br&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/categories/kubernetes/"/>
    
    
      <category term="k8s" scheme="http://icyxp.github.io/tags/k8s/"/>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/tags/kubernetes/"/>
    
      <category term="迁移" scheme="http://icyxp.github.io/tags/%E8%BF%81%E7%A7%BB/"/>
    
      <category term="延迟" scheme="http://icyxp.github.io/tags/%E5%BB%B6%E8%BF%9F/"/>
    
  </entry>
  
  <entry>
    <title>LPR是什么，央行给有放贷的人带来什么新年礼物</title>
    <link href="http://icyxp.github.io//blog/2020/01/lpr.html"/>
    <id>http://icyxp.github.io//blog/2020/01/lpr.html</id>
    <published>2020-01-06T12:00:00.000Z</published>
    <updated>2020-01-06T02:29:37.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;part-1&quot;&gt;&lt;a href=&quot;#part-1&quot; class=&quot;headerlink&quot; title=&quot;part 1&quot;&gt;&lt;/a&gt;part 1&lt;/h2&gt;&lt;p&gt;&lt;code&gt;每一个背负了房贷的人，绝对想不到，进入2020年头的时候，央行会送来一份大礼。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2019年12月28日，中国人民银行（央行）发布年内第30号公告。公告中的文字非常专业、晦涩，不是金融专业出身的人，会觉得云里雾里，也体会不到这则公告的史诗级作用。&lt;/p&gt;
&lt;p&gt;第一：&lt;strong&gt;从2020年1月1日开始，商业银行不得和买房人，签订参考贷款基准利率的浮动利率贷款合同。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第二：&lt;strong&gt;从2020年3月1日开始，商业银行必须和存量房贷的借款人，废除原有房贷合同，让借款人重新二选一，要么：固定利率；要么：「LPR利率+基点加成」模式。&lt;/strong&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;也就是说，从今年的3月1日开始至8月份的5个月时间里，当初和买房人签订了房贷合同的银行，会联系买房人，协商废除原有的「基准利率+浮动比例」利率合同，再二选一。&lt;/p&gt;
&lt;p&gt;一定要记住，无论银行怎么巧舌如簧，口吐莲花：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;不要选择固定利率模式，选择「LPR利率+基点加成」模式！&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;央行公告中说得很清楚，这种变更，一辈子只有一次机会，选错了的话，是无法更改的。&lt;/p&gt;
&lt;p&gt;不要小看两种利率模式的差别，我们可以大致估算下，在某些年份，利率差距可能达到1-5个百分点。如果房贷余额有300万元的话，每年还款差异可能达到3-15万元。&lt;/p&gt;
&lt;p&gt;在过去几年，数百万的年轻人夫妻，掏空了父母辈的钱包，背负了房贷，不敢辞职和跳槽，过上了不敢消费的佛系生活。&lt;/p&gt;
&lt;p&gt;翻阅了央行的定期报告，截止2019年8月份，个人贷款余额总量在29万亿元。你的房贷，就在其中。&lt;/p&gt;
&lt;p&gt;现在，央行要给你松绑了，卸下重担了，就看你3个月之后，要不要接收这份大礼，改变一家子的命运了。&lt;/p&gt;
&lt;h2 id=&quot;part-2&quot;&gt;&lt;a href=&quot;#part-2&quot; class=&quot;headerlink&quot; title=&quot;part 2&quot;&gt;&lt;/a&gt;part 2&lt;/h2&gt;&lt;p&gt;央行在2019年8月份，进行房贷变革的细节。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;变革前，房贷利率=央行基准利率+浮动比例。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;基准利率由央行统一公布，商业银行无权控制，只能被动跟随。如果央行加息了，或者降息了，那么在来年的固定日期1月1日，购房者的基准利率就统一改变。当前的基准利率是4.90%。&lt;/p&gt;
&lt;p&gt;商业银行能够改变的就是“浮动比例”。有些城市的银行货币宽松，鼓励首套房置业，地方政府财源依赖于土地出让金，那么可能在基准利率的基础上打折扣，但是大多数城市，是没有浮动比例，或者上浮的。&lt;/p&gt;
&lt;p&gt;对购房者而言，和银行签订的“浮动比例”一旦确认，是无法变更的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;变革后，房贷利率=贷款市场报价（LPR）利率+基点加成。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;LPR利率，专业说法是“全国银行间同业拆借中心”，统计18家银行报出的各自的1年期和5年期以上贷款利率，剔除最低价、最高价后，计算算术平均价。&lt;/p&gt;
&lt;p&gt;说得更加直白一点&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LPR利率更加市场化，在反映全社会无风险利率的程度上，更加逼真。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当经济过热时，通胀时，利率高；&lt;/p&gt;
&lt;p&gt;当经济过冷时，通缩时，利率低。&lt;/p&gt;
&lt;p&gt;这种市场化的利率，将贷款人和借款人之间的利益、风险，均衡了下。&lt;/p&gt;
&lt;p&gt;央行高屋建瓴，将1年期LPR利率，用于实体经济；将5年期LPR利率，用于了房地产市场。&lt;br&gt;&lt;img src=&quot;/images/other/1.jpg&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;当需要给实体经济降息时，就调低1年期LPR利率，不让漫灌的大水进入房地产行业。&lt;/p&gt;
&lt;p&gt;当需要单独对房地产调控时，只需要提高5年期LPR的利率，就不会对实体经济产生成本压力。&lt;/p&gt;
&lt;p&gt;但是从长期来看，&lt;strong&gt;5年期LPR利率，一定会向1年期LPR利率进行回归和靠拢的。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2019年11月20日，央行授权全国银行间同业拆借中心公布了最新一期贷款市场报价利率（LPR）。1年期LPR利率为4.15%，5年期以上LPR利率为4.80%。同10月21日公布的上期数值相比，均下调了5个基点。&lt;/p&gt;
&lt;p&gt;特别地，5年期LPR利率4.80%，比原有的贷款基准利率4.90%，低了10个基点，也就是0.1个百分点。&lt;/p&gt;
&lt;p&gt;如果2020年1月以后买房子，签订的是变革后的房贷利率模式，未来LPR利率长期下行，那么买房人和贷款机构的房贷利率，也必然下行，这样的话，买房人承担的利率成本，和全社会的利率成本大致相当。&lt;/p&gt;
&lt;p&gt;如果是2019年8月份之前买的房子，买房人和贷款机构签订的是基准利率，或者固定利率，那么未来社会无风险利率下行后，买房人承担的压力，将前所未有的大。这批买房人，完全将自己的人生上贡给了银行帝国，和后来轻装上阵的买房者，泾渭分明，社会的不公平性就拉大了。&lt;/p&gt;
&lt;p&gt;有些人可能会说，变革前后，二种利率的差异，就在10个基点，0.1个百分点，差异不大。&lt;/p&gt;
&lt;p&gt;你要这么说，只能证明，&lt;code&gt;对我们国家未来利率下行趋势的力量，一无所知！&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;part-3&quot;&gt;&lt;a href=&quot;#part-3&quot; class=&quot;headerlink&quot; title=&quot;part 3&quot;&gt;&lt;/a&gt;part 3&lt;/h2&gt;&lt;p&gt;你也许会问：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;央行和放贷银行，居然给我们买房者这么好的福利，会把吃进肚子里的肉，吐了出来，它们图什么呢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;呵呵。先让明哥笑几声。&lt;/p&gt;
&lt;p&gt;如果你能这么想，说明你真的太天真了。&lt;/p&gt;
&lt;p&gt;央行和放贷银行，给借款人松绑，绝对不是为了把吃进肚子里的肉吐出来，而是担心未来进入低利率时代以后，借款人弃房而去，那样会引发全社会系统性的大风险。&lt;/p&gt;
&lt;p&gt;因为，它们是极其专业和前瞻的机构，已经提前预测到了：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;在未来5-20年的时间长度内，中国一定会步发达国家的后尘，进入低利率，甚至是负利率时代。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这是坏事吗？绝对不是，这是任何经济体发展到一定水平后，必然要进入的常态。&lt;/p&gt;
&lt;p&gt;当经济体的生产力已经充分发达，人口不再继续增长，物质充分丰富以后，一个市场的消费能力是有限的。也就是说，企业生产出来的实体商品、提供的服务和虚拟商品，终将超过该国或者全球所有人口的消费潜力。&lt;/p&gt;
&lt;p&gt;假如没有突破性的科技进展，那么企业家没有多余利润可图，将不再扩大生产，不将利润再投资，不向银行间接贷款融资，不向股票市场直接股权融资，社会的GDP原地踏步，年轻人薪资20年不上涨。&lt;/p&gt;
&lt;p&gt;这样将导致，社会上的存款资金和可投资资金，将无处可去。商业银行收储了海量的居民存款，找不到适格的企业去发放贷款，自然也赚取不了息差。&lt;/p&gt;
&lt;p&gt;整体社会的利率，将显著下行。&lt;/p&gt;
&lt;p&gt;统计过，2020年初，全球26个国家或经济体当中，有20个国家或经济体利率处于下降趋势。&lt;/p&gt;
&lt;p&gt;欧盟央行：-0.5%；&lt;/p&gt;
&lt;p&gt;日本央行：-0.1%；&lt;/p&gt;
&lt;p&gt;德国10年期国债：-0.675%。&lt;/p&gt;
&lt;p&gt;2019年8月5号，丹麦的第三大银行日德兰银行，推出了人类历史上首笔负利率按揭贷款业务，房贷利率为-0.5%。什么意思呢？&lt;/p&gt;
&lt;p&gt;如果你借丹麦这家银行100万元去买房，一年后你只需还99.5万元就可以了。&lt;/p&gt;
&lt;p&gt;这家银行向买房人发放贷款，贷款买房人，最终还的钱，比当初银行借出的钱，还要少！&lt;/p&gt;
&lt;p&gt;听起来，像不像天方夜谭？绝对不是，这在西方发达经济体之中，已经成为了常识。&lt;/p&gt;
&lt;p&gt;2019年8月6号，瑞士银行宣布对50万欧元以下的存款账户收取年费，并且不支付利息。&lt;/p&gt;
&lt;p&gt;同样地，由于欧盟组织金融体系的利率是-0.5%，这意味着，一个人在欧盟所属的银行存款1万欧元，一年后，只能取回9950欧元。&lt;br&gt;&lt;img src=&quot;/images/other/2.jpg&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;2019年11月21日，已经卸任了中国人民银行行长职位的周小川，在创新经济论坛上表示：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;中国可以尽量避免快速地进入到负利率时代。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;言下之意，我们社会可以推迟进入到负利率时代的时间长度，延迟它的到来，但是改变不了历史归途。&lt;/p&gt;
&lt;p&gt;在2017年之前的20年时间里，我们已经习惯了房价的上涨、物价的上涨，人民币购买力的贬值。其根本原因在于，我们国家依然处于发展阶段，各行各业的商品和服务，还有着巨大的空白市场去等着发掘。&lt;/p&gt;
&lt;p&gt;房贷利率5.53%、民间借贷利率10-30%、P2P网贷利率20-50%。银行理财产品收益率低于6%，都没有大妈大爷看得上。&lt;/p&gt;
&lt;p&gt;从2017年开始，高收益的幻象，逐一破灭了。房价下跌、P2P平台爆雷、上市公司多元化扩张一地鸡毛。那些追逐高收益的人，不仅没有得到高利率，连自己的本金都损失掉了。&lt;/p&gt;
&lt;p&gt;股市收益率预期降低、年轻人就业心态放平、中年人只求保住饭碗，这才是未来我国经济的「新常态」。&lt;/p&gt;
&lt;p&gt;进入低利率时代后，我们去银行存钱，不仅没有利息，还要倒付费用给银行来负责保管我们的资产数据。&lt;/p&gt;
&lt;p&gt;为什么呢？&lt;/p&gt;
&lt;p&gt;因为银行收储之后，将居民资产保管在银行内部，它放贷不出去，没有人来借款，自然赚取不了利息差带来的利润。&lt;/p&gt;
&lt;p&gt;所以，负利率时代到来以后，谁放钱在银行，谁就要支付给银行一定的费用。&lt;/p&gt;
&lt;p&gt;如果借款人发现，自己的存款没有利息，全社会的无风险利率都接近于零，企业不愿意去投资，社会GDP增速原地踏步，自己反而要承担4.9%的利率，那这种负担，绝对是压力山大，不可承受的。&lt;/p&gt;
&lt;p&gt;等到那个时候，别说奢望房价上涨成为了白日梦，每年下跌2-10%，都是很有可能的，结果还要凭空承担-4.9%的利率亏损，傻子都知道，应该抛弃房子，直接断供。&lt;/p&gt;
&lt;p&gt;如果大批量的买房人，集体断供，最终会引发什么后果呢？那就是2008年美国次贷危机的翻版，银行将倒闭，经济继续萧条，年轻人失业。那种后果不是每个社会都能承受的。&lt;/p&gt;
&lt;p&gt;对于那些在2020年，就选择了「LPR利率+基点加成」模式的买房人而言，会张灯结彩、敲锣打鼓地迎接低利率时代、甚至是负利率时代的到来。&lt;/p&gt;
&lt;p&gt;理想情况下，假如5年期LPR利率降低到了零，那么当初的买房人承担的利率就只是当初的「基点加成」，无论是上浮还是下浮，都可以认为轻如鸿毛。&lt;/p&gt;
&lt;p&gt;这个时候，原有传统模式买房人，承担的利率是4.90%，接受了新模式的买房人，几乎没有房贷利率！&lt;/p&gt;
&lt;p&gt;年化4.90%利率的差别，如果房贷余额还剩下200万，那就是年化9.8万元的差距。&lt;/p&gt;
&lt;p&gt;这钱不香吗？为什么要凭空贡献给银行呢？&lt;/p&gt;
&lt;h2 id=&quot;part-4&quot;&gt;&lt;a href=&quot;#part-4&quot; class=&quot;headerlink&quot; title=&quot;part 4&quot;&gt;&lt;/a&gt;part 4&lt;/h2&gt;&lt;p&gt;站在2020年的门槛上，央行一眼洞穿了未来20年的经济轨迹，参考了西方发达国家的成熟经验，引导各大商业银行贷款人，和借款人，重新签订锚定于LPR利率的贷款合同。&lt;/p&gt;
&lt;p&gt;这不仅是给予借款人的大红包，也是站在全社会的角度，未雨绸缪，将收益和风险，在借款人和贷款机构之间分摊，促进整个社会的稳定运行。&lt;/p&gt;
&lt;p&gt;但是，央行出台的房贷改革新政，让贷款人和借款人重新签订利率合同，充满着大量的金融术语和晦涩的概念。&lt;/p&gt;
&lt;p&gt;商业银行的目的是为了逐利。它们作为贷款人，赚取利息差，让借款人承担的利率越高，银行的利润就越高。&lt;br&gt;&lt;img src=&quot;/images/other/3.jpg&quot; alt=&quot;3&quot;&gt;&lt;/p&gt;
&lt;p&gt;收取智商税的最佳方式是，制造信息不对称，利用自己的信息优势，来收割对方。&lt;/p&gt;
&lt;p&gt;商业银行一定会巧舌如簧、口吐莲花一般，故意将两种利率模式，说得借款人如云山雾里，眼冒金星。&lt;/p&gt;
&lt;p&gt;站在银行的角度来说，它们希望借款人像无头苍蝇一样，跟着他们的节奏走，不知不觉就躺在砧板上，摆好了待宰的体位。&lt;/p&gt;
&lt;p&gt;只有明哥，惦记着你的钱包。&lt;/p&gt;
&lt;p&gt;千言万语，汇成一句话！&lt;/p&gt;
&lt;p&gt;&lt;code&gt;从2020年3月1日开始的5个月时间里，当银行联系你重新协商房贷利率时，一定要坚持「LPR利率+基点加成」模式，并且利率一年自动更新一次。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这个机会，涉及到你家庭数十万，甚至上百万的资金，是用于自己，还是贡献给银行。&lt;/p&gt;
&lt;p&gt;可千万别选错了，因为央行只给了一次机会，没有后悔药可吃！&lt;/p&gt;
&lt;p&gt;来源：明哥在路上&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;part-1&quot;&gt;&lt;a href=&quot;#part-1&quot; class=&quot;headerlink&quot; title=&quot;part 1&quot;&gt;&lt;/a&gt;part 1&lt;/h2&gt;&lt;p&gt;&lt;code&gt;每一个背负了房贷的人，绝对想不到，进入2020年头的时候，央行会送来一份大礼。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2019年12月28日，中国人民银行（央行）发布年内第30号公告。公告中的文字非常专业、晦涩，不是金融专业出身的人，会觉得云里雾里，也体会不到这则公告的史诗级作用。&lt;/p&gt;
&lt;p&gt;第一：&lt;strong&gt;从2020年1月1日开始，商业银行不得和买房人，签订参考贷款基准利率的浮动利率贷款合同。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第二：&lt;strong&gt;从2020年3月1日开始，商业银行必须和存量房贷的借款人，废除原有房贷合同，让借款人重新二选一，要么：固定利率；要么：「LPR利率+基点加成」模式。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="LPR" scheme="http://icyxp.github.io/categories/LPR/"/>
    
      <category term="房贷" scheme="http://icyxp.github.io/categories/LPR/%E6%88%BF%E8%B4%B7/"/>
    
    
      <category term="lpr" scheme="http://icyxp.github.io/tags/lpr/"/>
    
      <category term="房贷" scheme="http://icyxp.github.io/tags/%E6%88%BF%E8%B4%B7/"/>
    
      <category term="杂谈" scheme="http://icyxp.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="市场经济" scheme="http://icyxp.github.io/tags/%E5%B8%82%E5%9C%BA%E7%BB%8F%E6%B5%8E/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes coredns域名解析5秒记录</title>
    <link href="http://icyxp.github.io//blog/2019/12/k8s-coredns-debug.html"/>
    <id>http://icyxp.github.io//blog/2019/12/k8s-coredns-debug.html</id>
    <published>2019-12-16T12:00:00.000Z</published>
    <updated>2019-12-16T08:23:39.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;近期线上 &lt;code&gt;k8s&lt;/code&gt; 时不时就会出现一些内部服务间的调用超时问题，通过日志可以得知超时的原因都是出现在域名解析上，并且都是 &lt;code&gt;k8s&lt;/code&gt; 内部的域名解析超时，于是直接先将内部域名替换成 &lt;code&gt;k8s service&lt;/code&gt; 的 IP，观察一段时间发现没有超时的情况发生了，但是由于使用 &lt;code&gt;service IP&lt;/code&gt; 不是长久之计，所以还要去找解决办法。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;定位&quot;&gt;&lt;a href=&quot;#定位&quot; class=&quot;headerlink&quot; title=&quot;定位&quot;&gt;&lt;/a&gt;定位&lt;/h2&gt;&lt;p&gt;一开始运维同事在调用方 pod 中使用ab工具对目标服务进行了多次压测，并没有发现有超时的请求，我介入之后分析ab这类 http 压测工具应该都会有 dns 缓存，而我们主要是要测试 dns 服务的性能，于是直接动手撸了一个压测工具只做域名解析，代码如下：&lt;br&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;context&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;flag&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;net&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;sync/atomic&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; host &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; connections &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; duration &lt;span class=&quot;keyword&quot;&gt;int64&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; limit &lt;span class=&quot;keyword&quot;&gt;int64&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; timeoutCount &lt;span class=&quot;keyword&quot;&gt;int64&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// os.Args = append(os.Args, &quot;-host&quot;, &quot;www.baidu.com&quot;, &quot;-c&quot;, &quot;200&quot;, &quot;-d&quot;, &quot;30&quot;, &quot;-l&quot;, &quot;5000&quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	flag.StringVar(&amp;amp;host, &lt;span class=&quot;string&quot;&gt;&quot;host&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Resolve host&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	flag.IntVar(&amp;amp;connections, &lt;span class=&quot;string&quot;&gt;&quot;c&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Connections&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	flag.Int64Var(&amp;amp;duration, &lt;span class=&quot;string&quot;&gt;&quot;d&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Duration(s)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	flag.Int64Var(&amp;amp;limit, &lt;span class=&quot;string&quot;&gt;&quot;l&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Limit(ms)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	flag.Parse()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; count &lt;span class=&quot;keyword&quot;&gt;int64&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; errCount &lt;span class=&quot;keyword&quot;&gt;int64&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pool := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;&amp;#123;&amp;#125;, connections)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	exit := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		min &lt;span class=&quot;keyword&quot;&gt;int64&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		max &lt;span class=&quot;keyword&quot;&gt;int64&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		sum &lt;span class=&quot;keyword&quot;&gt;int64&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		time.Sleep(time.Second * time.Duration(duration))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		exit &amp;lt;- &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endD:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; pool &amp;lt;- &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&amp;lt;-pool&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				resolver := &amp;amp;net.Resolver&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				now := time.Now()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				_, err := resolver.LookupIPAddr(context.Background(), host)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				use := time.Since(now).Nanoseconds() / &lt;span class=&quot;keyword&quot;&gt;int64&lt;/span&gt;(time.Millisecond)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; min == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || use &amp;lt; min &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					min = use&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; use &amp;gt; max &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					max = use&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				sum += use&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; limit &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; use &amp;gt;= limit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					timeoutCount++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				atomic.AddInt64(&amp;amp;count, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					fmt.Println(err.Error())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					atomic.AddInt64(&amp;amp;errCount, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-exit:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt; endD&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;request count：%d\nerror count：%d\n&quot;&lt;/span&gt;, count, errCount)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;request time：min(%dms) max(%dms) avg(%dms) timeout(%dn)\n&quot;&lt;/span&gt;, min, max, sum/count, timeoutCount)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;编译好&lt;a href=&quot;http://www.jiunile.com/k8s/ab-dns&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;二进制&lt;/a&gt;程序直接丢到对应的 pod 容器中进行压测：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 200个并发,持续30秒&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ./ab-dns -host &amp;#123;service&amp;#125;.&amp;#123;namespace&amp;#125; -c 200 &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; 30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这次可以发现最大耗时有5s多，多次测试结果都是类似：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ./ab-dns -host s-inno-bpm.inno-ci -c 200 -d 30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;request count：109061&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;error count：0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;request time：min(1ms) max(5082ms) avg(53ms) timeout(0n)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;而我们内部服务间 HTTP 调用的超时一般都是设置在3s左右，以此推断出与线上的超时情况应该是同一种情况，在并发高的情况下会出现部分域名解析超时而导致 HTTP 请求失败。&lt;/p&gt;
&lt;h2 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h2&gt;&lt;p&gt;起初一直以为是 &lt;code&gt;coredns&lt;/code&gt; 的问题，于是找运维升级了下 &lt;code&gt;coredns&lt;/code&gt; 版本再进行压测，发现问题还是存在，说明不是版本的问题，难道是 &lt;code&gt;coredns&lt;/code&gt; 本身的性能就差导致的？想想也不太可能啊，才 200 的并发就顶不住了那性能也未免太弱了吧，结合之前的压测数据，平均响应都挺正常的(53ms)，但是就有个别请求会延迟，而且都是 5 秒左右，所以就又带着k8s dns 5s的关键字去 google 搜了一下，这不搜不知道一搜吓一跳啊，原来是 k8s 里的一个大坑啊(其实和 k8s 没有太大的关系，只是 k8s 层面没有提供解决方案)。&lt;/p&gt;
&lt;h2 id=&quot;5s-超时原因&quot;&gt;&lt;a href=&quot;#5s-超时原因&quot; class=&quot;headerlink&quot; title=&quot;5s 超时原因&quot;&gt;&lt;/a&gt;5s 超时原因&lt;/h2&gt;&lt;p&gt;linux 中 &lt;code&gt;glibc&lt;/code&gt; 的 resolver 的缺省超时时间是 5s，而导致超时的原因是内核 &lt;code&gt;conntrack&lt;/code&gt; 模块的 bug。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Weave works 的工程师 Martynas Pumputis 对这个问题做了很详细的分析：&lt;a href=&quot;https://www.weave.works/blog/racy-conntrack-and-dns-lookup-timeouts&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.weave.works/blog/racy-conntrack-and-dns-lookup-timeouts&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里再引用下 &lt;a href=&quot;https://imroc.io/posts/kubernetes/troubleshooting-with-kubernetes-network/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://imroc.io/posts/kubernetes/troubleshooting-with-kubernetes-network/&lt;/a&gt; 文章中的解释：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DNS client (glibc 或 musl libc) 会并发请求 A 和 AAAA 记录，跟 DNS Server 通信自然会先 connect (建立 fd)，后面请求报文使用这个 fd 来发送，由于 UDP 是无状态协议， connect 时并不会发包，也就不会创建 conntrack 表项, 而并发请求的 A 和 AAAA 记录默认使用同一个 fd 发包，send 时各自发的包它们源 Port 相同(因为用的同一个 socket 发送)，当并发发包时，两个包都还没有被插入 conntrack 表项，所以 netfilter 会为它们分别创建 conntrack 表项，而集群内请求 kube-dns 或 coredns 都是访问的 CLUSTER-IP，报文最终会被 DNAT 成一个 endpoint 的 POD IP，当两个包恰好又被 DNAT 成同一个 POD IP 时，它们的五元组就相同了，在最终插入的时候后面那个包就会被丢掉，如果 dns 的 pod 副本只有一个实例的情况就很容易发生(始终被 DNAT 成同一个 POD IP)，现象就是 dns 请求超时，client 默认策略是等待 5s 自动重试，如果重试成功，我们看到的现象就是 dns 请求有 5s 的延时。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;headerlink&quot; title=&quot;解决方案&quot;&gt;&lt;/a&gt;解决方案&lt;/h2&gt;&lt;h3 id=&quot;方案（一）：使用-TCP-协议发送-DNS-请求&quot;&gt;&lt;a href=&quot;#方案（一）：使用-TCP-协议发送-DNS-请求&quot; class=&quot;headerlink&quot; title=&quot;方案（一）：使用 TCP 协议发送 DNS 请求&quot;&gt;&lt;/a&gt;方案（一）：使用 TCP 协议发送 DNS 请求&lt;/h3&gt;&lt;p&gt;通过 &lt;code&gt;resolv.conf&lt;/code&gt; 的 &lt;code&gt;use-vc&lt;/code&gt; 选项来开启 TCP 协议, 修改 &lt;code&gt;/etc/resolv.conf&lt;/code&gt; 文件，在最后加入一行文本&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nameserver ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;search ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;options ndots:5 use-vc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;经过测试，确实没有出现 5s 的超时问题了，但是部分请求耗时还是比较高，在 4s 左右，而且平均耗时比 UPD 协议的还高，效果并不好。&lt;/p&gt;
&lt;h3 id=&quot;方案（二）：避免相同五元组-DNS-请求的并发&quot;&gt;&lt;a href=&quot;#方案（二）：避免相同五元组-DNS-请求的并发&quot; class=&quot;headerlink&quot; title=&quot;方案（二）：避免相同五元组 DNS 请求的并发&quot;&gt;&lt;/a&gt;方案（二）：避免相同五元组 DNS 请求的并发&lt;/h3&gt;&lt;p&gt;通过 &lt;code&gt;resolv.conf&lt;/code&gt; 的 &lt;code&gt;single-request-reopen&lt;/code&gt; 和 &lt;code&gt;single-request&lt;/code&gt; 选项来避免：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;single-request-reopen (glibc&amp;gt;=2.9) 发送 A 类型请求和 AAAA 类型请求使用不同的源端口。这样两个请求在 conntrack 表中不占用同一个表项，从而避免冲突。&lt;/li&gt;
&lt;li&gt;single-request (glibc&amp;gt;=2.10) 避免并发，改为串行发送 A 类型和 AAAA 类型请求，没有了并发，从而也避免了冲突。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;修改 /etc/resolv.conf 文件，在最后加入一行文本：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nameserver ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;search ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;options ndots:5 timeout:2 single-request-reopen&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过压测结果可以看到 &lt;code&gt;single-request-reopen&lt;/code&gt; 和 &lt;code&gt;single-request&lt;/code&gt; 选项确实可以显著的降低域名解析耗时。&lt;/p&gt;
&lt;h2 id=&quot;关于方案（一）和方案（二）的实施步骤和缺点&quot;&gt;&lt;a href=&quot;#关于方案（一）和方案（二）的实施步骤和缺点&quot; class=&quot;headerlink&quot; title=&quot;关于方案（一）和方案（二）的实施步骤和缺点&quot;&gt;&lt;/a&gt;关于方案（一）和方案（二）的实施步骤和缺点&lt;/h2&gt;&lt;p&gt;其实就是要给容器的 &lt;code&gt;/etc/resolv.conf&lt;/code&gt; 文件添加选项，目前有两个方案比较合适：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;通过修改 pod 的 postStart hook 来设置&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;lifecycle:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  postStart:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    exec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      command:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;        -&lt;/span&gt; /bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;        -&lt;/span&gt; -c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;        -&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;/bin/echo &#39;options single-request-reopen&#39; &amp;gt;&amp;gt; /etc/resolv.conf&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过修改 pod 的 template.spec.dnsConfig 来设置&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;template:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  spec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    dnsConfig:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      options:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        - name:&lt;/span&gt; single-request-reopen&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;注: 需要 k8s 版本&amp;gt;=1.9&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;缺点&quot;&gt;&lt;a href=&quot;#缺点&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h3&gt;&lt;p&gt;不支持 &lt;code&gt;alpine&lt;/code&gt; 基础镜像的容器，因为 &lt;code&gt;apline&lt;/code&gt; 底层使用的 &lt;code&gt;musl libc&lt;/code&gt; 库并不支持这些 &lt;code&gt;resolv.conf&lt;/code&gt; 选项，所以如果使用 &lt;code&gt;alpine&lt;/code&gt; 基础镜像构建的应用，还是无法规避超时的问题。&lt;/p&gt;
&lt;h2 id=&quot;方案（三）：本地-DNS-缓存&quot;&gt;&lt;a href=&quot;#方案（三）：本地-DNS-缓存&quot; class=&quot;headerlink&quot; title=&quot;方案（三）：本地 DNS 缓存&quot;&gt;&lt;/a&gt;方案（三）：本地 DNS 缓存&lt;/h2&gt;&lt;p&gt;其实 k8s 官方也意识到了这个问题比较常见，给出了 coredns 以 cache 模式作为 daemonset 部署的解决方案: &lt;a href=&quot;https://github.com/kubernetes/kubernetes/tree/master/cluster/addons/dns/nodelocaldns&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/kubernetes/kubernetes/tree/master/cluster/addons/dns/nodelocaldns&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;大概原理就是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本地 DNS 缓存以 DaemonSet 方式在每个节点部署一个使用 hostNetwork 的 Pod，创建一个网卡绑上本地 DNS 的 IP，本机的 Pod 的 DNS 请求路由到本地 DNS，然后取缓存或者继续使用 TCP 请求上游集群 DNS 解析 (由于使用 TCP，同一个 socket 只会做一遍三次握手，不存在并发创建 conntrack 表项，也就不会有 conntrack 冲突)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;部署&quot;&gt;&lt;a href=&quot;#部署&quot; class=&quot;headerlink&quot; title=&quot;部署&quot;&gt;&lt;/a&gt;部署&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;获取当前 &lt;code&gt;kube-dns service&lt;/code&gt; 的 &lt;code&gt;clusterIP&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ kubectl -n kube-system get svc kube-dns -o jsonpath=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;.spec.clusterIP&amp;#125;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10.96.0.10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下载官方提供的 yaml 模板进行关键字替换&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ wget -O nodelocaldns.yaml &lt;span class=&quot;string&quot;&gt;&quot;https://github.com/kubernetes/kubernetes/raw/master/cluster/addons/dns/nodelocaldns/nodelocaldns.yaml&quot;&lt;/span&gt; &amp;amp;&amp;amp; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/__PILLAR__DNS__SERVER__/10.96.0.10/g&#39;&lt;/span&gt; nodelocaldns.yaml &amp;amp;&amp;amp; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/__PILLAR__LOCAL__DNS__/169.254.20.10/g&#39;&lt;/span&gt; nodelocaldns.yaml &amp;amp;&amp;amp; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/__PILLAR__DNS__DOMAIN__/cluster.local/g&#39;&lt;/span&gt; nodelocaldns.yaml &amp;amp;&amp;amp; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/__PILLAR__CLUSTER__DNS__/10.96.0.10/g&#39;&lt;/span&gt; nodelocaldns.yaml &amp;amp;&amp;amp; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/__PILLAR__UPSTREAM__SERVERS__/\/etc\/resolv.conf/g&#39;&lt;/span&gt; nodelocaldns.yaml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最终 yaml 文件如下：&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;176&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;apiVersion:&lt;/span&gt; v1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;kind:&lt;/span&gt; ServiceAccount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  name:&lt;/span&gt; node-local-dns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  namespace:&lt;/span&gt; kube-system&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  labels:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    kubernetes.io/cluster-service: &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addonmanager.kubernetes.io/mode: Reconcile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;apiVersion:&lt;/span&gt; v1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;kind:&lt;/span&gt; Service&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  name:&lt;/span&gt; kube-dns-upstream&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  namespace:&lt;/span&gt; kube-system&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  labels:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    k8s-app:&lt;/span&gt; kube-dns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    kubernetes.io/cluster-service: &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addonmanager.kubernetes.io/mode: Reconcile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    kubernetes.io/name: &lt;span class=&quot;string&quot;&gt;&quot;KubeDNSUpstream&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;spec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  ports:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    - name:&lt;/span&gt; dns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      port:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;53&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      protocol:&lt;/span&gt; UDP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      targetPort:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;53&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    - name:&lt;/span&gt; dns-tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      port:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;53&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      protocol:&lt;/span&gt; TCP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      targetPort:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;53&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  selector:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    k8s-app:&lt;/span&gt; kube-dns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;apiVersion:&lt;/span&gt; v1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;kind:&lt;/span&gt; ConfigMap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  name:&lt;/span&gt; node-local-dns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  namespace:&lt;/span&gt; kube-system&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  labels:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addonmanager.kubernetes.io/mode: Reconcile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;data:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  Corefile:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cluster.local:53 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        errors&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cache &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                success 9984 30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                denial 9984 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reload&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bind 169.254.20.10 10.96.0.10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        forward . 10.96.0.10 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                force_tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        prometheus :9253&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        health 169.254.20.10:8080&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    in-addr.arpa:53 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        errors&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cache 30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reload&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bind 169.254.20.10 10.96.0.10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        forward . 10.96.0.10 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                force_tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        prometheus :9253&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ip6.arpa:53 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        errors&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cache 30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reload&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bind 169.254.20.10 10.96.0.10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        forward . 10.96.0.10 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                force_tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        prometheus :9253&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .:53 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        errors&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cache 30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reload&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bind 169.254.20.10 10.96.0.10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        forward . /etc/resolv.conf &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                force_tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        prometheus :9253&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;attr&quot;&gt;apiVersion:&lt;/span&gt; apps/v1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;kind:&lt;/span&gt; DaemonSet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  name:&lt;/span&gt; node-local-dns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  namespace:&lt;/span&gt; kube-system&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  labels:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    k8s-app:&lt;/span&gt; node-local-dns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    kubernetes.io/cluster-service: &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addonmanager.kubernetes.io/mode: Reconcile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;spec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  updateStrategy:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    rollingUpdate:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      maxUnavailable:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  selector:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    matchLabels:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      k8s-app:&lt;/span&gt; node-local-dns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  template:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      labels:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        k8s-app:&lt;/span&gt; node-local-dns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    spec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      priorityClassName:&lt;/span&gt; system-node-critical&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      serviceAccountName:&lt;/span&gt; node-local-dns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      hostNetwork:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      dnsPolicy:&lt;/span&gt; Default &lt;span class=&quot;comment&quot;&gt;# Don&#39;t use cluster DNS.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      tolerations:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        - key:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;CriticalAddonsOnly&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          operator:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Exists&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      containers:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        - name:&lt;/span&gt; node-cache&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          image:&lt;/span&gt; k8s.gcr.io/k8s-dns-node-cache:&lt;span class=&quot;number&quot;&gt;1.15&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          resources:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            requests:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;              cpu:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;m&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;              memory:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;Mi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          args:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;string&quot;&gt;&quot;-localip&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;string&quot;&gt;&quot;169.254.20.10,10.96.0.10&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;string&quot;&gt;&quot;-conf&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;string&quot;&gt;&quot;/etc/Corefile&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;string&quot;&gt;&quot;-upstreamsvc&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;string&quot;&gt;&quot;kube-dns-upstream&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          securityContext:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            privileged:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          ports:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            - containerPort:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;53&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;              name:&lt;/span&gt; dns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;              protocol:&lt;/span&gt; UDP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            - containerPort:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;53&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;              name:&lt;/span&gt; dns-tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;              protocol:&lt;/span&gt; TCP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            - containerPort:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;9253&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;              name:&lt;/span&gt; metrics&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;              protocol:&lt;/span&gt; TCP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          livenessProbe:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            httpGet:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;              host:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;169.254&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.20&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;              path:&lt;/span&gt; /health&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;              port:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            initialDelaySeconds:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            timeoutSeconds:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          volumeMounts:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            - mountPath:&lt;/span&gt; /run/xtables.lock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;              name:&lt;/span&gt; xtables-lock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;              readOnly:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            - name:&lt;/span&gt; config-volume&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;              mountPath:&lt;/span&gt; /etc/coredns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            - name:&lt;/span&gt; kube-dns-config&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;              mountPath:&lt;/span&gt; /etc/kube-dns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      volumes:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        - name:&lt;/span&gt; xtables-lock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          hostPath:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            path:&lt;/span&gt; /run/xtables.lock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            type:&lt;/span&gt; FileOrCreate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        - name:&lt;/span&gt; kube-dns-config&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          configMap:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            name:&lt;/span&gt; kube-dns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            optional:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        - name:&lt;/span&gt; config-volume&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          configMap:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            name:&lt;/span&gt; node-local-dns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            items:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;              - key:&lt;/span&gt; Corefile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;                path:&lt;/span&gt; Corefile.base&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过 yaml 可以看到几个细节：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;部署类型是使用的 &lt;code&gt;DaemonSet&lt;/code&gt;，即在每个 &lt;code&gt;k8s node&lt;/code&gt; 节点上运行一个 dns 服务&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hostNetwork&lt;/code&gt; 属性为 &lt;code&gt;true&lt;/code&gt;，即直接使用 node 物理机的网卡进行端口绑定，这样在此 node 节点中的 pod 可以直接访问 dns 服务，不通过 service 进行转发，也就不会有 DNAT&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dnsPolicy&lt;/code&gt; 属性为 &lt;code&gt;Default&lt;/code&gt;，不使用 &lt;code&gt;cluster DNS&lt;/code&gt;，在解析外网域名时直接使用本地的 DNS 设置&lt;/li&gt;
&lt;li&gt;绑定在 node 节点 &lt;code&gt;169.254.20.10&lt;/code&gt; 和 &lt;code&gt;10.96.0.10&lt;/code&gt; IP 上，这样节点下面的 pod 只需要将 dns 设置为&lt;code&gt;169.254.20.10&lt;/code&gt; 即可直接访问宿主机上的 dns 服务。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;实施&quot;&gt;&lt;a href=&quot;#实施&quot; class=&quot;headerlink&quot; title=&quot;实施&quot;&gt;&lt;/a&gt;实施&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;通过修改 &lt;code&gt;pod&lt;/code&gt; 的 &lt;code&gt;template.spec.dnsConfig&lt;/code&gt; 来设置，并将 &lt;code&gt;dnsPolicy&lt;/code&gt; 设置为 &lt;code&gt;None&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;template:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  spec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    dnsConfig:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  nameservers:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;        -&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;169.254&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.20&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      searches:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;        -&lt;/span&gt; public.svc.cluster.local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		- svc.cluster.local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		- cluster.local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      options:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        - name:&lt;/span&gt; ndots&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          value:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;5&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    dnsPolicy:&lt;/span&gt; None&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改默认的 cluster-dns，在 node 节点上将 &lt;code&gt;/etc/systemd/system/kubelet.service.d/10-kubeadm.conf&lt;/code&gt; 文件中的 &lt;code&gt;--cluster-dns&lt;/code&gt; 参数值修改为 &lt;code&gt;169.254.20.10&lt;/code&gt;，然后重启 &lt;code&gt;kubelet&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;systemctl restart kubelet&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;monkeywie.github.io&lt;/li&gt;
&lt;li&gt;imroc.io&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;近期线上 &lt;code&gt;k8s&lt;/code&gt; 时不时就会出现一些内部服务间的调用超时问题，通过日志可以得知超时的原因都是出现在域名解析上，并且都是 &lt;code&gt;k8s&lt;/code&gt; 内部的域名解析超时，于是直接先将内部域名替换成 &lt;code&gt;k8s service&lt;/code&gt; 的 IP，观察一段时间发现没有超时的情况发生了，但是由于使用 &lt;code&gt;service IP&lt;/code&gt; 不是长久之计，所以还要去找解决办法。&lt;br&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/categories/kubernetes/"/>
    
      <category term="coredns" scheme="http://icyxp.github.io/categories/kubernetes/coredns/"/>
    
    
      <category term="k8s" scheme="http://icyxp.github.io/tags/k8s/"/>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/tags/kubernetes/"/>
    
      <category term="coredns" scheme="http://icyxp.github.io/tags/coredns/"/>
    
      <category term="5s" scheme="http://icyxp.github.io/tags/5s/"/>
    
  </entry>
  
  <entry>
    <title>白话Kubernetes核心组件及原理</title>
    <link href="http://icyxp.github.io//blog/2019/12/k8s-k8s-intro.html"/>
    <id>http://icyxp.github.io//blog/2019/12/k8s-k8s-intro.html</id>
    <published>2019-12-06T12:00:00.000Z</published>
    <updated>2019-12-06T08:21:47.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Kubernetes是什么？&quot;&gt;&lt;a href=&quot;#Kubernetes是什么？&quot; class=&quot;headerlink&quot; title=&quot;Kubernetes是什么？&quot;&gt;&lt;/a&gt;Kubernetes是什么？&lt;/h2&gt;&lt;p&gt;Kubernetes其实就是一个集群，从我们此前运维的角度来理解，它就是一个集群，组合多台主机的资源（内存、CPU、磁盘等）整合成一个大的资源池并统一对外提供计算存储等能力的集群。我们找很多台主机，每台主机上面安装Kubernetes的相关程序，而不同的主机程序之间相互通信，从而完成彼此之间的协调，并且通过这些应用程序之间的协同工作，把多个主机当成一个主机来使用，形成一个集群，仅此而已，但是在kubernetes集群当中主机是分角色的，即所谓的有中心结点架构的集群系统，master/nodes模型, 由一组节点用于master不需要太多，一般高可用的话需要三个（根据集群规模来判断），nodes节点（worker节点）就是干活的，Kubernetes上提供的各种资源服务，运行在node节点上面。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;用户如何在kubernetes运行容器，逻辑过程是什么？&quot;&gt;&lt;a href=&quot;#用户如何在kubernetes运行容器，逻辑过程是什么？&quot; class=&quot;headerlink&quot; title=&quot;用户如何在kubernetes运行容器，逻辑过程是什么？&quot;&gt;&lt;/a&gt;用户如何在kubernetes运行容器，逻辑过程是什么？&lt;/h2&gt;&lt;p&gt;用户把创建启动容器的请求首先发给master，具体来说是发给了master节点上面的&lt;code&gt;API Server&lt;/code&gt;组件， &lt;code&gt;API Server&lt;/code&gt;通过调度器，按照预设的调度算法及策略，去分析各node节点上面现有的可用资源状态，然后找一个最佳适配，来运行用户所请求容器的结点，并把它调度上去（这里需要与node节点上面的&lt;code&gt;kubelet&lt;/code&gt;交互），并由这个node节点上面本地的docker或其它容器引擎负责把这个容器启动起来，要启动容器，需要有镜像，镜像在哪里呢？在仓库上面，node上面启动容器是会先检查本地是否有镜像（根据镜像拉取策略），如果没有会docker pull下来，然后再启动，kubernetes自身并没有托管自动所依赖的每一个容器镜像，而是需要到仓库中去下载的，仓库可以是私有的，也可以是公有的。&lt;/p&gt;
&lt;p&gt;集群在master节点上面提供一个&lt;code&gt;API Server&lt;/code&gt;组件，它负责接受请求，解析请求，处理请求的，至于当用户请求的是创建一个容器，最好不要运行在master节点上面，而应该运行在node节点上面，确定哪个node更合适，这个时间就需要&lt;code&gt;scheder&lt;/code&gt;调度器，它负责监控每个node节点上面总可用的计算、内存、存储等资源，并根据用户所请求创建的这个容器所需要的资源，docker容器可以做资源限制 ，但在kubernetes上面不但可以设定容器使用资源的上限（阀值），还可以设定资源使用的下限（资源请求量），调度器就是根据容器的最低需求来进行评估，哪一个节点最合适；当然了，资源的评估不只是一个维度，而是从多个维度考虑，这都是调度器&lt;code&gt;scheduler&lt;/code&gt;根据调度策略和算法需要考虑的，如果在一个node上面把容器启动起来了，我们还需要对容器中的应用程序的健康状态做监测，我们不但能根据容器中应用程序是否运行判断它的健康状况，还可以根据额外的健康状态探测方式来探测，我们叫做可用性探测机制来探测服务的可用性。如果一旦容器中的应用挂了，我们又需要确保容器中的一个容器要运行，此时怎么办？node节点之上有一个应用程序，这个应用程序就是&lt;code&gt;kebulet&lt;/code&gt;，这个应用程序确保容器始终处于健康状态，如果出现问题，它就会通知&lt;code&gt;API Server&lt;/code&gt;，然后重新调度；但是有一点，很不幸，这个node节点如果宕机了，那么此前拖管在此node上面的所有容器就挂了，我们知道kubernetes具有自愈的能力，无论是单个容器，还是node节点上面的所有容器，一旦容器不见了，是不需要人工参与的，kubernetes会使用新的个体来取代它，它会在其它node上面创建出来一模一样的容器出来。如何确保这个容器是健康的呢？以及一旦出问题就可以及时被发现呢? 其实kubernetes是通过控制器组件来负责监控它所管理的每一个容器的健康状态，一旦发现不健康了，控制器向master上面 &lt;code&gt;API server&lt;/code&gt;发请求，容器挂了一个，你帮我重新调度再启动一个，这里控制器需要在本地不停的loop循环，周期性，持续性的探测所管理的容器的健康状况，一旦不健康，或者不符合用户所定义（期望）的目标，此是调度器就会向用户期待的状态向前移，确保符合用户期望的状态；其实在kubernetes集群中我们有很多很多的控制器，假设我们有一个控制器挂了呢，用于监控容器健康的控制器不健康了，容器的健康状态就无法保证，怎么办？我们在master节点上面有一个控制器管理器，控制器管理器负责控制监控每个控制器的健康状况，控制器管理器如果出现问题怎么办，因此在这里，我们需要对控制器管理器做冗余。&lt;/p&gt;
&lt;p&gt;以上我们通过在集群上面创建一个容器的例子，讲解了&lt;code&gt;API Server&lt;/code&gt;、&lt;code&gt;scheduler&lt;/code&gt;、&lt;code&gt;控制器&lt;/code&gt;、&lt;code&gt;控制管理器&lt;/code&gt;等。&lt;/p&gt;
&lt;h2 id=&quot;什么是Pod？&quot;&gt;&lt;a href=&quot;#什么是Pod？&quot; class=&quot;headerlink&quot; title=&quot;什么是Pod？&quot;&gt;&lt;/a&gt;什么是Pod？&lt;/h2&gt;&lt;p&gt;Pod，英文意思是豆荚。大家都知道这种植物，一个豆荚中有几个豆粒。&lt;/p&gt;
&lt;p&gt;Kubernetes上面运行的最小单元是&lt;code&gt;Pod&lt;/code&gt;,  kubernetes并不直接调度容器的运行，而调度的目标是&lt;code&gt;Pod&lt;/code&gt;，&lt;code&gt;Pod&lt;/code&gt;可以理解为容器的外壳，给容器做了一层抽象的封装，因此&lt;code&gt;Pod&lt;/code&gt;成为了Kubernetes集群之上最小的调度单位（逻辑单元），&lt;code&gt;Pod&lt;/code&gt;内部主要是用来放容器的，&lt;code&gt;Pod&lt;/code&gt;有一个特点，一个&lt;code&gt;Pod&lt;/code&gt;中可以运行多个容器，多个容器共享同一个底层的网络命名空间（底层的&lt;code&gt;net&lt;/code&gt;, &lt;code&gt;uts&lt;/code&gt;, &lt;code&gt;IPC&lt;/code&gt;三个网络命名空间），另外三个命名空间相互隔离（&lt;code&gt;User&lt;/code&gt;, &lt;code&gt;mnt&lt;/code&gt;, &lt;code&gt;pid&lt;/code&gt;），这样一来，同一个&lt;code&gt;Pod&lt;/code&gt;上面的多个容器，每个容器上面跑应用程序 ，对外更像是同一台“虚拟机”，这也是kubernetes组织容器的一个非常精巧的办法，基于此我们可以构建较为精细的容器间通信，并且同一个Pod上面的容器，还共享第二种资源，叫做存储卷，存储卷不属于容器，属于&lt;code&gt;Pod&lt;/code&gt;，&lt;code&gt;Pod&lt;/code&gt;的磁盘，相同&lt;code&gt;Pod&lt;/code&gt;的容器共享。&lt;/p&gt;
&lt;p&gt;各个node节点主要是用来运行&lt;code&gt;Pod&lt;/code&gt;的，一般说来，一个&lt;code&gt;Pod&lt;/code&gt;上面只放一个容器，除非有特别紧密的关系，需要放在同一个&lt;code&gt;Pod&lt;/code&gt;上面，否则，不要放在同一&lt;code&gt;Pod&lt;/code&gt;上面；如果确实有需要，将多个容器需要放在一个&lt;code&gt;Pod&lt;/code&gt;中，通常有一个容器是主容器，其它的容器为辅助主容器，辅助容器中的应用程序主要是为了完成更多功能来辅佐主容器工作，这里我们调度器也是调度的&lt;code&gt;Pod&lt;/code&gt;, node节点上面也是&lt;code&gt;Pod&lt;/code&gt;, &lt;code&gt;Pod&lt;/code&gt;是一个原子单元，也就意味着一个&lt;code&gt;Pod&lt;/code&gt;中有一个容器，还是有多个容器，一旦被调度之后，相同&lt;code&gt;Pod&lt;/code&gt;上面的容器，只能在同一个node节点上面。&lt;/p&gt;
&lt;p&gt;创建&lt;code&gt;Pod&lt;/code&gt;时，可以直接创建，并且自主管理的，但它仍然要提交给&lt;code&gt;API Server&lt;/code&gt;，由&lt;code&gt;API Server&lt;/code&gt;接收以后，通过调度器调度到指定的Node节点上，而node节点启动此Pod，此后如果pod上面的容器出现故障，需要重要重启容器，需要&lt;code&gt;kubelet&lt;/code&gt;完成，但是node节点故障了，节点就消失了。还有一种Pod的创建方式，是通过控制器来创建的，后面为讲什么是控制器，它的作用是什么？&lt;/p&gt;
&lt;h2 id=&quot;Node节点是做什么的？&quot;&gt;&lt;a href=&quot;#Node节点是做什么的？&quot; class=&quot;headerlink&quot; title=&quot;Node节点是做什么的？&quot;&gt;&lt;/a&gt;Node节点是做什么的？&lt;/h2&gt;&lt;p&gt;刚才说了node是kubernetes集群中的工作节点，负责运行由master节点上面指派的各种任务，而最核心的任务是以Pod的形式运行容器的，理解上讲node可以是任何形式的资源设备，只要有传统意义上的内存、CPU、存储资源即可，并且可以安装上Kubernetes集群的应用程序 ，都可以做为k8s集群的一个份子来工作，它是承载资源的。&lt;/p&gt;
&lt;p&gt;这样一来终端用户不需要关心应用程序（Pod）在哪个Node节点上面，它就这样脱离了终端用户的视线，终端用户也无需关注应用程序部署在哪个node节点上面的pod，从而真正意义上实现了资源池，从而进行统一管理。&lt;/p&gt;
&lt;h2 id=&quot;什么是标签，标签选择器是做什么的？&quot;&gt;&lt;a href=&quot;#什么是标签，标签选择器是做什么的？&quot; class=&quot;headerlink&quot; title=&quot;什么是标签，标签选择器是做什么的？&quot;&gt;&lt;/a&gt;什么是标签，标签选择器是做什么的？&lt;/h2&gt;&lt;p&gt;如何让一个控制器管理指定的Pod，例如，我们创建了5个Pod，Pod中运行tomcat容器，我们让一个控制器来管理这一组Pod，为了让Pod能够实现被控制器管理识别，我们需要在Pod上面附加一些元数据（标签），用标签来识别Pod，在创建Pod的时候，或者人为的打上一个标签，让控制器能够识别出标签，进而识别出Pod。我们前面创建了5个 Pod，我们在每一个pod上面加一个标签app, 标签的值叫tomcat (&lt;code&gt;标签：值====&amp;gt; app:tomcat&lt;/code&gt;)，我们想把这一类找出来，怎么找，我们先找拥有key是app，并且值是tomcat的pod分拣出来。标签是Kubernetes大规模集群管理、分类、识别资源使用的，标签是非常非常重要的凭证，我们是如何把我们感兴趣的标签找到的呢，我们有一个标签选择器/挑选器（selector）组件，标签选择器，简单来讲就是根据标签，过滤符合条件的资源对象的机制，其实标签不只是Pod有，很多其它资源都有，因此这种选择器叫做标签选择器，而不叫pod标签选择器，Kubernetes是Restfull 风格的API，通过http或者https对外提供服务，所以所有Restfull对外提供的服务资源都称为对象，所有的对象都可以拥有标签，所有的标签都可以使用标签选择器来选择，只不过pod是其中一种比较重要的。&lt;/p&gt;
&lt;h2 id=&quot;什么是控制器，控制器是做什么的，有哪些控制器？&quot;&gt;&lt;a href=&quot;#什么是控制器，控制器是做什么的，有哪些控制器？&quot; class=&quot;headerlink&quot; title=&quot;什么是控制器，控制器是做什么的，有哪些控制器？&quot;&gt;&lt;/a&gt;什么是控制器，控制器是做什么的，有哪些控制器？&lt;/h2&gt;&lt;p&gt;我们刚才讲Pod的时候 ，讲到了创建Pod时，一种是直接创建Pod，Pod删除后，不会自动创建，还有一种创建Pod的方式，是通过控制器创建的Pod，这种&lt;code&gt;控制器管理的Pod&lt;/code&gt;， 正是控制器管理器机制的使用。在Kubernetes设计中，Pod完全可以叫做有生命周期的对象，而后由调度器将其调度至集群中的某节点，运行以后，任务终止也就被删除停掉了，但是有一些任务，比如nginx，或者运行一个tomcat，他们是做为守护进程来运行的，这种程序，我们要确保这种pod随时运行，一旦出现故障，需要第一时间发现，要么取代它，要么重启它，要么重建一个新的pod，这种靠人的右眼是无法保证的，而Kubernetes提供了具备这种工作能力的组件叫&lt;code&gt;Pod控制器&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;Pod控制器最早的一种叫&lt;code&gt;ReplicationController&lt;/code&gt; (副本控制器，早期版本的控制器，也称为Pod控制器)， 当我们启动一个pod时，一个不够了，可以再启动一个副本，控制器就是控制同一类资源对象的副本，一旦副本数量少了，就会自动加一个，能够定义要求的副本数，多了就删除，精确符合人们期望的数量，它还可以实现滚动更新，它允许临时添加副本，然后把旧版本的去掉，实现滚动更新；它也允许回滚操作，后来的版本中新加了&lt;code&gt;ReplicaSetController&lt;/code&gt;（副本集控制器），而&lt;code&gt;ReplicaSetController&lt;/code&gt;也不直接使用，而是有一个声明式更新的控制器叫&lt;code&gt;Deployment&lt;/code&gt;，用它来进行管理控制， 我们使用的最多的也是&lt;code&gt;Deployment&lt;/code&gt;控制器，而&lt;code&gt;Deployment&lt;/code&gt;控制器只能管理哪些无状态的应用，哪么有状态的应用如何控制管理呢？我们使用新的控制器，叫&lt;code&gt;StatefulSet&lt;/code&gt;有状态副本集，另外如果我们需要在每个node上面运行一个Pod，而不是随意运行，我们还需要一个&lt;code&gt;DaemonSet&lt;/code&gt;，如果我们运行作业，还需要Job, 周期性作业，&lt;code&gt;Cronjob&lt;/code&gt;,  这些是常见的Pod控制器；后面的这些控制器都是实现一种特定的应用管理，比如临时运行一个容器去完成删除日志的功能，这个运行完就删除了，我们就可以使用Job控制器管理Pod, 但是如果Job没有运行完挂了，需要重新启动，如果运行完，就删除了，再比如nginx一直需要处于运行状态，就不能使用Job控制器，所以说这么多的控制器是用于确保不同类型的Pod资源，来符合用户所期望的方式来运行，像&lt;code&gt;Deployment&lt;/code&gt;控制器还支持二级控制器，叫&lt;code&gt;HPA&lt;/code&gt;，叫水平Pod，自动伸缩控制器，比如我们一个控制器控制两个副本在运行，但在资源利用率高的时候，可以自动的伸缩控制，就是使用&lt;code&gt;HPA&lt;/code&gt;进行控制，一旦利用率低了，可以自动减少，但要符合我们预期的最小值。&lt;/p&gt;
&lt;h2 id=&quot;Serveice是什么，为什么需要Service？&quot;&gt;&lt;a href=&quot;#Serveice是什么，为什么需要Service？&quot; class=&quot;headerlink&quot; title=&quot;Serveice是什么，为什么需要Service？&quot;&gt;&lt;/a&gt;Serveice是什么，为什么需要Service？&lt;/h2&gt;&lt;p&gt;到这里我们想到一个问题，Pod是由生命周期的，万一Pod所在Node节点宕机了，Pod有可能需要在其它的 Node节点上面重新创建，而重新创建完成后的pod，跟之前的不是一个，只不过是应用程序一样而已，提供相同的服务，由于每个pod中容器的IP地址就不一样，这样一来就有一个问题，我们客户端怎么去访问这些Pod呢？是利用服务发现机制，首先客户端每一次去访问服务时，客户端是不知道后端的服务是谁的（不知道pod的存在），他需要找一个地方问一句，发现一下，有没有这种服务，这些服务是Pod启动的时候注册到一个类似总线地址上，客户端直接去总线位置去问，有没有，有的话，给一个Pod地址，客户端与Pod地址进行通信；因此尽可能降低这种复杂度，Kubernetes为每一组提供相同功能的Pod和客户端之间添加了一个中间层，这个中间层是固定的，这个中间层就叫service，只要service不删除，它就是固定的，名称也是固定的，当客户端需要访问时，只需要在客户端写上service 主机名|服务器|地址即可，也不需要发现，而这个服务service 是一个调度器，不但提供一个固定稳定的访问入口，只要不删除，它就是稳定的，客户端只需要写service名称即可，服务再把请求代理到后面的pod上面，那么Pod宕机了，新创建的pod会被service立即给关联进来；还会把新加的pod作为service后面的可用资源对象之一，怎么实现的呢？我们知道 客户端与服务器通信是通过&lt;code&gt;IP：Port&lt;/code&gt;或者&lt;code&gt;域名:Port&lt;/code&gt;形式，而service与后面的pod不是依靠&lt;code&gt;IP:Port&lt;/code&gt;的形式（因为pod的主机名和IP经常要变），而是通过Pod上面固定的标签来识别，只要是相同标签的pod，不管主机名和IP怎么变，都会被service通过标签识别，service是通过标签选择器来关联pod的；这样一来，只要pod属于这个标签选择器，就能立即被service能选中，并且做为service后端组件存在，关联进来以后，再动态探测这个pod的IP地址是什么，端口是什么，并做为自己后端可调度的服务器，资源对象， 最后，客户端是通过service代理至后端pod进行通信；意味着客户端看到的地址就是service的地址，而在kubernetes集群上service可不是什么应用程序 ，也不是一个实体组件，它只不过是一个&lt;code&gt;iptables DNAT&lt;/code&gt;规则；我们创建一个&lt;code&gt;DNAT&lt;/code&gt; 规则 ，我们所有到达xxx地址的，都统统被目标地址转换成yyy地址，&lt;code&gt;DNAT&lt;/code&gt;规则只是一个规则 ，而service地址，事实上并没有配置到任何一张网卡上，是不存在的，它仅仅出在规则中，可以ping通的，并且可以做请求中转，能ping通是因为有&lt;code&gt;TCP/IP&lt;/code&gt;协议栈。这个IP地址，仅出现在规则中，更重要的是service做为Kubernetes中的对象来讲，它有名称，就相当于这个服务的名字，名称可以被解析，就是把service名称解析成IP，名称解析靠DNS，没错，我们安装完k8s后，第一件事，就是让部署一个&lt;code&gt;DNS Pod&lt;/code&gt;，以确保service被解析，这个Pod是Kubernetes自身的服务就需要的pod，所以我们称之为基础性的系统架构级的pod或对象，而且称他们叫集群的附件。&lt;/p&gt;
&lt;h2 id=&quot;集群附件DNS&quot;&gt;&lt;a href=&quot;#集群附件DNS&quot; class=&quot;headerlink&quot; title=&quot;集群附件DNS&quot;&gt;&lt;/a&gt;集群附件DNS&lt;/h2&gt;&lt;p&gt;DNS附件只是Kubernetes集群中纵多附件中的一个，并且这种DNS有一个很有意义的特点，可以动态的创建，动态的改变，动态的更新，动态的变动，比如，你更新了service名称，DNS中的记录即就会被改变，再比如我们手动修改了service IP ,他会自动触发DNS 服务中的解析记录的更改，所以以后客户端访问service时，可以直接访问服务的名称 ，而由集群中专门的DNS服务来负责解析，解析的是service的地址，不是pod地址，再由service代理访问pod，刚才也说了，这种代理是端口代理，由DNAT实现，可不能忘记service后面中两个或者多个pod，这里的DNAT就是多个目标了，多目标调度，对于linux来讲，大家知道对于iptables来讲，已经把负载均衡的功能主要交给了IPVS，因此如果service背后的同一个服务有多个Pod，并且由DNAT来实现，可能在调度效果上并不尽人意，因此在 Kubernetes 1.11版本以后，已经把iptables规则改成了IPVS规则，也就相当于，当你创建一条service规则时，就创建了一条IPVS规则 ，只不过是NAT模型的IPVS规则，因此还支持用户可以指定任意的调度算法，如轮询、加权、最小连接等，所以你就会发现LVS是我们的基础性服务，以上就是我们所讲的service组件。&lt;/p&gt;
&lt;p&gt;来源：Linux点滴运维实践&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Kubernetes是什么？&quot;&gt;&lt;a href=&quot;#Kubernetes是什么？&quot; class=&quot;headerlink&quot; title=&quot;Kubernetes是什么？&quot;&gt;&lt;/a&gt;Kubernetes是什么？&lt;/h2&gt;&lt;p&gt;Kubernetes其实就是一个集群，从我们此前运维的角度来理解，它就是一个集群，组合多台主机的资源（内存、CPU、磁盘等）整合成一个大的资源池并统一对外提供计算存储等能力的集群。我们找很多台主机，每台主机上面安装Kubernetes的相关程序，而不同的主机程序之间相互通信，从而完成彼此之间的协调，并且通过这些应用程序之间的协同工作，把多个主机当成一个主机来使用，形成一个集群，仅此而已，但是在kubernetes集群当中主机是分角色的，即所谓的有中心结点架构的集群系统，master/nodes模型, 由一组节点用于master不需要太多，一般高可用的话需要三个（根据集群规模来判断），nodes节点（worker节点）就是干活的，Kubernetes上提供的各种资源服务，运行在node节点上面。&lt;br&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/categories/kubernetes/"/>
    
    
      <category term="k8s" scheme="http://icyxp.github.io/tags/k8s/"/>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/tags/kubernetes/"/>
    
      <category term="k8s组件" scheme="http://icyxp.github.io/tags/k8s%E7%BB%84%E4%BB%B6/"/>
    
      <category term="k8s原理" scheme="http://icyxp.github.io/tags/k8s%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes修改主机ip</title>
    <link href="http://icyxp.github.io//blog/2019/12/k8s-kubeadm-edit-hostip.html"/>
    <id>http://icyxp.github.io//blog/2019/12/k8s-kubeadm-edit-hostip.html</id>
    <published>2019-12-05T12:00:00.000Z</published>
    <updated>2019-12-05T06:22:11.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;由于外部等不确定因素印象，kubernetes集群中的主机IP修改了，会导致集群受影响，故出以下教程来保证集群的稳定性。此教程适用于kubeadm安装的kubernetes集群，使用版本kubeadm1.15+ &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;修改master主机ip&quot;&gt;&lt;a href=&quot;#修改master主机ip&quot; class=&quot;headerlink&quot; title=&quot;修改master主机ip&quot;&gt;&lt;/a&gt;修改master主机ip&lt;/h2&gt;&lt;h3 id=&quot;方式一：通过kubeadm命令进行调整&quot;&gt;&lt;a href=&quot;#方式一：通过kubeadm命令进行调整&quot; class=&quot;headerlink&quot; title=&quot;方式一：通过kubeadm命令进行调整&quot;&gt;&lt;/a&gt;方式一：通过kubeadm命令进行调整&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#kubeadm.conf 配置文件如下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apiVersion: kubeadm.k8s.io/v1beta1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kind: ClusterConfiguration&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubernetesVersion: v1.15.3 &lt;span class=&quot;comment&quot;&gt;#--&amp;gt;这里改成你集群对应的版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#重新生成/etc/kubernetes目录下的conf文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubeadm init phase kubeconfig all --config=/root/kubeadm.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#运行上述命令会影响以下文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#admin.conf	&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#controller-manager.conf	&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#kubelet.conf	&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#scheduler.conf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#重新生成manifests目录下的yaml配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubeadm init phase control-plane all --config=/root/kubeadm.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#运行上述命令会影响以下文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#manifests/kube-apiserver.yaml&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#manifests/kube-controller-manager.yaml&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#manifests/kube-scheduler.yaml&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#重新生成etcd.yaml,如果是外部etcd则略过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubeadm init phase etcd &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; --config=/root/kubeadm.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#运行上述命令会影响以下文件，外部etcd则不会影响&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#manifests/etcd.yaml&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#重新生成组件配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubeadm init phase addon all --config=/root/kubeadm.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#运行上述命令会影响以下组件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#kube-proxy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#coredns&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#备份/etc/kubernetes/pki目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp -r /etc/kubernetes/pki /etc/kubernetes/pki-old&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rm -rf /etc/kubernetes/pki/apiserver.*  /etc/kubernetes/pki/front-proxy-client* &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rm -rf /etc/kubernetes/pki/etcd/healthcheck-client* /etc/kubernetes/pki/etcd/peer* /etc/kubernetes/pki/etcd/server*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#重新生成证书&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubeadm init phase certs all --config=/root/kubeadm.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;方式二：通过sed-命令进行调整&quot;&gt;&lt;a href=&quot;#方式二：通过sed-命令进行调整&quot; class=&quot;headerlink&quot; title=&quot;方式二：通过sed 命令进行调整&quot;&gt;&lt;/a&gt;方式二：通过sed 命令进行调整&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#修改/etc/kubernetes 目录下的配置文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/oldip/newip/g&#39;&lt;/span&gt; `grep &lt;span class=&quot;string&quot;&gt;&quot;oldip&quot;&lt;/span&gt; -rl /etc/kubernetes`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemctl restart kubelet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#修改kube-proxy configmap配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl  get cm kube-proxy -n kube-system -o yaml &amp;gt; proxy.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/oldip/newip/g&#39;&lt;/span&gt; proxy.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl apply &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; proxy.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#重新renew证书&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubeadm alpha certs renew all --config=/root/kubeadm.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;由于外部等不确定因素印象，kubernetes集群中的主机IP修改了，会导致集群受影响，故出以下教程来保证集群的稳定性。此教程适用于kubeadm安装的kubernetes集群，使用版本kubeadm1.15+ &lt;/p&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/categories/kubernetes/"/>
    
    
      <category term="k8s" scheme="http://icyxp.github.io/tags/k8s/"/>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/tags/kubernetes/"/>
    
      <category term="kubeadm" scheme="http://icyxp.github.io/tags/kubeadm/"/>
    
      <category term="主机名" scheme="http://icyxp.github.io/tags/%E4%B8%BB%E6%9C%BA%E5%90%8D/"/>
    
      <category term="主机ip" scheme="http://icyxp.github.io/tags/%E4%B8%BB%E6%9C%BAip/"/>
    
  </entry>
  
  <entry>
    <title>在 Kubernetes 中配置 Container Capabilities</title>
    <link href="http://icyxp.github.io//blog/2019/12/capabilities.html"/>
    <id>http://icyxp.github.io//blog/2019/12/capabilities.html</id>
    <published>2019-12-03T12:00:00.000Z</published>
    <updated>2019-12-03T06:09:50.000Z</updated>
    
    <content type="html">&lt;p&gt;我们在使用 Kubernetes 过程中，偶尔会遇到如下所示的一段配置：&lt;br&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;securityContext:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  capabilities:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    drop:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;    -&lt;/span&gt; ALL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    add:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;    -&lt;/span&gt; NET_BIND_SERVICE&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;实际上这是配置对应的容器的 &lt;code&gt;Capabilities&lt;/code&gt;，在我们使用 &lt;code&gt;docker run&lt;/code&gt; 的时候可以通过 &lt;code&gt;--cap-add&lt;/code&gt; 和 &lt;code&gt;--cap-drop&lt;/code&gt; 命令来给容器添加 &lt;code&gt;Linux Capabilities&lt;/code&gt;。对于大部分同学可能又要疑问 &lt;code&gt;Linux Capabilities&lt;/code&gt; 是什么呢？&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Linux-Capabilities&quot;&gt;&lt;a href=&quot;#Linux-Capabilities&quot; class=&quot;headerlink&quot; title=&quot;Linux Capabilities&quot;&gt;&lt;/a&gt;Linux Capabilities&lt;/h2&gt;&lt;p&gt;要了解 &lt;code&gt;Linux Capabilities&lt;/code&gt;，这就得从 Linux 的权限控制发展来说明。在 Linux 2.2 版本之前，当内核对进程进行权限验证的时候，Linux 将进程划分为两类：特权进程（UID=0，也就是超级用户）和非特权进程（UID!=0），特权进程拥有所有的内核权限，而非特权进程则根据进程凭证（effective UID, effective GID，supplementary group 等）进行权限检查。&lt;/p&gt;
&lt;p&gt;比如我们以常用的 &lt;code&gt;passwd&lt;/code&gt; 命令为例，修改用户密码需要具有 root 权限，而普通用户是没有这个权限的。但是实际上普通用户又可以修改自己的密码，这是怎么回事呢？在 Linux 的权限控制机制中，有一类比较特殊的权限设置，比如 SUID(Set User ID on execution)，允许用户以可执行文件的 owner 的权限来运行可执行文件。因为程序文件 &lt;code&gt;/bin/passwd&lt;/code&gt; 被设置了 &lt;code&gt;SUID&lt;/code&gt; 标识，所以普通用户在执行 passwd 命令时，进程是以 passwd 的所有者，也就是 root 用户的身份运行，从而就可以修改密码了。&lt;/p&gt;
&lt;p&gt;但是使用 &lt;code&gt;SUID&lt;/code&gt; 却带来了新的安全隐患，当我们运行设置了 &lt;code&gt;SUID&lt;/code&gt; 的命令时，通常只是需要很小一部分的特权，但是 &lt;code&gt;SUID&lt;/code&gt; 却给了它 root 具有的全部权限，一旦 被设置了 &lt;code&gt;SUID&lt;/code&gt; 的命令出现漏洞，是不是就很容易被利用了。&lt;/p&gt;
&lt;p&gt;为此 Linux 引入了 &lt;code&gt;Capabilities&lt;/code&gt; 机制来对 root 权限进行了更加细粒度的控制，实现按需进行授权，这样就大大减小了系统的安全隐患。&lt;/p&gt;
&lt;h3 id=&quot;什么是-Capabilities&quot;&gt;&lt;a href=&quot;#什么是-Capabilities&quot; class=&quot;headerlink&quot; title=&quot;什么是 Capabilities&quot;&gt;&lt;/a&gt;什么是 Capabilities&lt;/h3&gt;&lt;p&gt;从内核 2.2 开始，Linux 将传统上与超级用户 root 关联的特权划分为不同的单元，称为 &lt;code&gt;capabilites&lt;/code&gt;。&lt;code&gt;Capabilites&lt;/code&gt; 每个单元都可以独立启用和禁用。这样当系统在作权限检查的时候就变成了：在执行特权操作时，如果进程的有效身份不是 &lt;strong&gt;root&lt;/strong&gt;，就去检查是否具有该特权操作所对应的 &lt;strong&gt;capabilites&lt;/strong&gt;，并以此决定是否可以进行该特权操作。比如如果我们要设置系统时间，就得具有 &lt;code&gt;CAP_SYS_TIME&lt;/code&gt; 这个 capabilites。下面是从 &lt;a href=&quot;http://man7.org/linux/man-pages/man7/capabilities.7.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;capabilities man page&lt;/a&gt; 中摘取的 capabilites 列表：&lt;br&gt;&lt;img src=&quot;/images/capabilities.png&quot; alt=&quot;capabilities&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;如何使用-Capabilities&quot;&gt;&lt;a href=&quot;#如何使用-Capabilities&quot; class=&quot;headerlink&quot; title=&quot;如何使用 Capabilities&quot;&gt;&lt;/a&gt;如何使用 Capabilities&lt;/h3&gt;&lt;p&gt;我们可以通过 &lt;code&gt;getcap&lt;/code&gt; 和 &lt;code&gt;setcap&lt;/code&gt; 两条命令来分别查看和设置程序文件的 &lt;code&gt;capabilities&lt;/code&gt; 属性。比如当前我们是&lt;code&gt;zuiapp&lt;/code&gt; 这个用户，使用 &lt;code&gt;getcap&lt;/code&gt; 命令查看 &lt;code&gt;ping&lt;/code&gt; 命令目前具有的 &lt;code&gt;capabilities&lt;/code&gt;：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;❯ ll /bin/ping&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-rwxr-xr-x 1 root root 62088 11月  7 2016 /bin/ping&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;❯ &lt;span class=&quot;built_in&quot;&gt;getcap&lt;/span&gt; /bin/ping&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/bin/ping = &lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_net_admin,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_net_raw+p&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们可以看到具有 &lt;code&gt;cap_net_admin&lt;/code&gt; 这个属性，所以我们现在可以执行 &lt;code&gt;ping&lt;/code&gt; 命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;❯ ping team.jiunile.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PING icyxp.github.io (185.199.109.153): 56 data bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from 185.199.109.153: icmp_seq=0 ttl=58 time=46.651 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from 185.199.109.153: icmp_seq=1 ttl=58 time=35.604 ms&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但是如果我们把命令的 &lt;code&gt;capabilities&lt;/code&gt; 属性移除掉：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;❯ sudo &lt;span class=&quot;built_in&quot;&gt;setcap&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_net_admin,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_net_raw-p /bin/ping&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;❯ &lt;span class=&quot;built_in&quot;&gt;getcap&lt;/span&gt; /bin/ping&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/bin/ping =&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个时候我们执行 &lt;code&gt;ping&lt;/code&gt; 命令可以发现已经没有权限了：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;❯ ping team.jiunile.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ping: socket: Operation not permitted&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因为 ping 命令在执行时需要访问网络，所需的 &lt;code&gt;capabilities&lt;/code&gt; 为 &lt;code&gt;cap_net_admin&lt;/code&gt; 和 &lt;code&gt;cap_net_raw&lt;/code&gt;，所以我们可以通过 &lt;code&gt;setcap&lt;/code&gt; 命令可来添加它们：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;❯ sudo &lt;span class=&quot;built_in&quot;&gt;setcap&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_net_admin,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_net_raw+p /bin/ping&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;❯ &lt;span class=&quot;built_in&quot;&gt;getcap&lt;/span&gt; /bin/ping&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/bin/ping = &lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_net_admin,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_net_raw+p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;❯ ping team.jiunile.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PING icyxp.github.io (185.199.109.153): 56 data bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from 185.199.109.153: icmp_seq=0 ttl=58 time=46.651 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from 185.199.109.153: icmp_seq=1 ttl=58 time=35.604 ms&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;命令中的 &lt;code&gt;p&lt;/code&gt; 表示 &lt;code&gt;Permitted&lt;/code&gt; 集合(接下来会介绍)，&lt;code&gt;+&lt;/code&gt; 号表示把指定的 &lt;code&gt;capabilities&lt;/code&gt; 添加到这些集合中，&lt;code&gt;-&lt;/code&gt; 号表示从集合中移除。&lt;/p&gt;
&lt;p&gt;对于可执行文件的属性中有三个集合来保存三类 &lt;code&gt;capabilities&lt;/code&gt;，它们分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Permitted：在进程执行时，Permitted 集合中的 capabilites 自动被加入到进程的 Permitted 集合中。&lt;/li&gt;
&lt;li&gt;Inheritable：Inheritable 集合中的 capabilites 会与进程的 Inheritable 集合执行与操作，以确定进程在执行 execve 函数后哪些 capabilites 被继承。&lt;/li&gt;
&lt;li&gt;Effective：Effective 只是一个 bit。如果设置为开启，那么在执行 execve 函数后，Permitted 集合中新增的 capabilities 会自动出现在进程的 Effective 集合中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于进程中有五种 &lt;code&gt;capabilities&lt;/code&gt; 集合类型，相比文件的 &lt;code&gt;capabilites&lt;/code&gt;，进程的 &lt;code&gt;capabilities&lt;/code&gt; 多了两个集合，分别是 &lt;code&gt;Bounding&lt;/code&gt; 和 &lt;code&gt;Ambient&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我们可以通过下面的命名来查看当前进程的 &lt;code&gt;capabilities&lt;/code&gt; 信息：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;❯ cat /proc/7029/status | grep &lt;span class=&quot;string&quot;&gt;&#39;Cap&#39;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;#7029为PID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CapInh:	0000000000000000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CapPrm:	0000000000000000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CapEff:	0000000000000000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CapBnd:	0000001fffffffff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CapAmb:	0000000000000000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后我们可以使用 &lt;code&gt;capsh&lt;/code&gt; 命令把它们转义为可读的格式，这样基本可以看出进程具有的 &lt;code&gt;capabilities&lt;/code&gt; 了：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;❯ capsh --decode=0000001fffffffff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0x0000001fffffffff=&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_chown,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_dac_override,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_dac_&lt;span class=&quot;built_in&quot;&gt;read&lt;/span&gt;_search,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_fowner,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_fsetid,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_&lt;span class=&quot;built_in&quot;&gt;kill&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_setgid,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_setuid,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_setpcap,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_linux_immutable,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_net_&lt;span class=&quot;built_in&quot;&gt;bind&lt;/span&gt;_service,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_net_broadcast,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_net_admin,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_net_raw,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_ipc_lock,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_ipc_owner,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_sys_module,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_sys_rawio,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_sys_chroot,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_sys_ptrace,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_sys_pacct,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_sys_admin,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_sys_boot,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_sys_nice,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_sys_resource,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_sys_time,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_sys_tty_config,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_mknod,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_lease,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_audit_write,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_audit_control,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_setfcap,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_mac_override,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_mac_admin,&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;_syslog,35,36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Docker-Container-Capabilities&quot;&gt;&lt;a href=&quot;#Docker-Container-Capabilities&quot; class=&quot;headerlink&quot; title=&quot;Docker Container Capabilities&quot;&gt;&lt;/a&gt;Docker Container Capabilities&lt;/h2&gt;&lt;p&gt;我们说 Docker 容器本质上就是一个进程，所以理论上容器就会和进程一样会有一些默认的开放权限，默认情况下 Docker 会删除必须的 &lt;code&gt;capabilities&lt;/code&gt; 之外的所有 &lt;code&gt;capabilities&lt;/code&gt;，因为在容器中我们经常会以 root 用户来运行，使用 &lt;code&gt;capabilities&lt;/code&gt; 现在后，容器中的使用的 root 用户权限就比我们平时在宿主机上使用的 root 用户权限要少很多了，这样即使出现了安全漏洞，也很难破坏或者获取宿主机的 root 权限，所以 Docker 支持 &lt;code&gt;Capabilities&lt;/code&gt; 对于容器的安全性来说是非常有必要的。&lt;/p&gt;
&lt;p&gt;不过我们在运行容器的时候可以通过指定 &lt;code&gt;--privileded&lt;/code&gt; 参数来开启容器的超级权限，这个参数一定要慎用，因为他会获取系统 root 用户所有能力赋值给容器，并且会扫描宿主机的所有设备文件挂载到容器内部，所以是非常危险的操作。&lt;/p&gt;
&lt;p&gt;但是如果你确实需要一些特殊的权限，我们可以通过 &lt;code&gt;--cap-add&lt;/code&gt; 和 &lt;code&gt;--cap-drop&lt;/code&gt; 这两个参数来动态调整，可以最大限度地保证容器的使用安全。下面表格中列出的 &lt;code&gt;Capabilities&lt;/code&gt; 是 Docker 默认给容器添加的，我们可以通过 &lt;code&gt;--cap-drop&lt;/code&gt; 去除其中一个或者多个：&lt;br&gt;&lt;img src=&quot;/images/docker-add-capabilities.png&quot; alt=&quot;docker-add-capabilities&quot;&gt;&lt;/p&gt;
&lt;p&gt;下面表格中列出的 &lt;code&gt;Capabilities&lt;/code&gt; 是 Docker 默认删除的，我们可以通过&lt;code&gt;--cap-add&lt;/code&gt;添加其中一个或者多个：&lt;br&gt;&lt;img src=&quot;/images/docker-drop-capabilities.png&quot; alt=&quot;docker-drop-capabilities&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;--cap-add&lt;/code&gt;和&lt;code&gt;--cap-drop&lt;/code&gt; 这两参数都支持&lt;code&gt;ALL&lt;/code&gt;值，比如如果你想让某个容器拥有除了&lt;code&gt;MKNOD&lt;/code&gt;之外的所有内核权限，那么可以执行下面的命令： &lt;code&gt;$ sudo docker run --cap-add=ALL --cap-drop=MKNOD ...&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比如现在我们需要修改网络接口数据，默认情况下是没有权限的，因为需要的 &lt;code&gt;NET_ADMIN&lt;/code&gt; 这个 &lt;code&gt;Capabilities&lt;/code&gt; 默认被移除了：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;❯ docker run -it --rm busybox /bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/ &lt;span class=&quot;comment&quot;&gt;# ip link add dummy0 type dummy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ip: RTNETLINK answers: Operation not permitted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/ &lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;所以在不使用 &lt;code&gt;--privileged&lt;/code&gt; 的情况下（不建议）我们可以使用 &lt;code&gt;--cap-add=NET_ADMIN&lt;/code&gt; 将这个 &lt;code&gt;Capabilities&lt;/code&gt; 添加回来：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;❯ docker run -it --rm --cap-add=NET_ADMIN busybox /bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/ &lt;span class=&quot;comment&quot;&gt;# ip link add dummy0 type dummy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/ &lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到已经 OK 了。&lt;/p&gt;
&lt;h2 id=&quot;Kubernetes-配置-Capabilities&quot;&gt;&lt;a href=&quot;#Kubernetes-配置-Capabilities&quot; class=&quot;headerlink&quot; title=&quot;Kubernetes 配置 Capabilities&quot;&gt;&lt;/a&gt;Kubernetes 配置 Capabilities&lt;/h2&gt;&lt;p&gt;上面我介绍了在 Docker 容器下如何来配置 &lt;code&gt;Capabilities&lt;/code&gt;，在 Kubernetes 中也可以很方便的来定义，我们只需要添加到 Pod 定义的 &lt;code&gt;spec.containers.sercurityContext.capabilities&lt;/code&gt;中即可，也可以进行 &lt;code&gt;add&lt;/code&gt; 和 &lt;code&gt;drop&lt;/code&gt; 配置，同样上面的示例，我们要给 busybox 容器添加 &lt;code&gt;NET_ADMIN&lt;/code&gt; 这个 &lt;code&gt;Capabilities&lt;/code&gt;，对应的 YAML 文件可以这样定义：(cpb-demo.yaml)&lt;br&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;apiVersion:&lt;/span&gt; v1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;kind:&lt;/span&gt; Pod&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  name:&lt;/span&gt; cpb-demo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;spec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  containers:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  - name:&lt;/span&gt; cpb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    image:&lt;/span&gt; busybox&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    args:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;    -&lt;/span&gt; sleep&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;    -&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;3600&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    securityContext:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      capabilities:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        add:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 添加&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;        -&lt;/span&gt; NET_ADMIN&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        drop:&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# 删除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;        -&lt;/span&gt; KILL&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们在 &lt;code&gt;securityContext&lt;/code&gt; 下面添加了 &lt;code&gt;capabilities&lt;/code&gt; 字段，其中添加了 &lt;code&gt;NET_ADMIN&lt;/code&gt; 并且删除了 &lt;code&gt;KILL&lt;/code&gt; 这个默认的容器 &lt;code&gt;Capabilities&lt;/code&gt;，这样我们就可以在 Pod 中修改网络接口数据了：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;❯ kubectl apply &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; cpb-demo.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;❯ kubectl get pods&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NAME                      READY   STATUS    RESTARTS   AGE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cpb-demo                  1/1     Running   0          2m9s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;❯ kubectl &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it cpb-demo /bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/ &lt;span class=&quot;comment&quot;&gt;# ip link add dummy0 type dummy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/ &lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在 Kubernetes 中通过 &lt;code&gt;sercurityContext.capabilities&lt;/code&gt; 进行配置容器的 &lt;code&gt;Capabilities&lt;/code&gt;，当然最终还是通过 Docker 的 &lt;code&gt;libcontainer&lt;/code&gt; 去借助 &lt;code&gt;Linux kernel capabilities&lt;/code&gt; 实现的权限管理。&lt;/p&gt;
&lt;h3 id=&quot;应用一：在kubernetes容器中使用perf命令&quot;&gt;&lt;a href=&quot;#应用一：在kubernetes容器中使用perf命令&quot; class=&quot;headerlink&quot; title=&quot;应用一：在kubernetes容器中使用perf命令&quot;&gt;&lt;/a&gt;应用一：在kubernetes容器中使用perf命令&lt;/h3&gt;&lt;p&gt;在容器中运行 &lt;code&gt;perf&lt;/code&gt; 会报如下错误：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;┌─Error:───────────────────────────────────────────────────────────┐&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│No permission to &lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt; cycles event.                             │&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│                                                                  │&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│You may not have permission to collect system-wide stats.         │&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│                                                                  │&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│Consider tweaking /proc/sys/kernel/perf_event_paranoid,           │&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│&lt;span class=&quot;built_in&quot;&gt;which&lt;/span&gt; controls use of the performance events system by            │&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│unprivileged users (without CAP_SYS_ADMIN).                       │&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│                                                                  │&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│The current value is 3:                                           │&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│                                                                  │&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  -1: Allow use of (almost) all events by all users               │&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│&amp;gt;= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK│&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│&amp;gt;= 1: Disallow CPU event access by users without CAP_SYS_ADMIN    │&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│&amp;gt;= 2: Disallow kernel profiling by users without C                │&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│                                                                  │&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│                                                                  │&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│Press any key...                                                  │&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└──────────────────────────────────────────────────────────────────┘&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;提示没有权限，需要更改 &lt;code&gt;/proc/sys/kernel/perf_event_paranoid&lt;/code&gt; 文件，然后尝试执行:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; 0 &amp;gt; /proc/sys/kernel/perf_event_paranoid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bash: /proc/sys/kernel/perf_event_paranoid: Read-only file system&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;解决办法，修改容器的deployment文件，加入 &lt;code&gt;SYS_ADMIN&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;securityContext:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    capabilities:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        add:&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&quot;SYS_ADMIN&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;参考链接:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/sparkdev/p/11417781.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.cnblogs.com/sparkdev/p/11417781.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hustcat.github.io/docker-config-capabilities/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hustcat.github.io/docker-config-capabilities/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/WaltonWang/article/details/62226738&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://blog.csdn.net/WaltonWang/article/details/62226738&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://man7.org/linux/man-pages/man7/capabilities.7.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://man7.org/linux/man-pages/man7/capabilities.7.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;www.qikqiak.com&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我们在使用 Kubernetes 过程中，偶尔会遇到如下所示的一段配置：&lt;br&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;securityContext:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  capabilities:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    drop:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;    -&lt;/span&gt; ALL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    add:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;    -&lt;/span&gt; NET_BIND_SERVICE&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;实际上这是配置对应的容器的 &lt;code&gt;Capabilities&lt;/code&gt;，在我们使用 &lt;code&gt;docker run&lt;/code&gt; 的时候可以通过 &lt;code&gt;--cap-add&lt;/code&gt; 和 &lt;code&gt;--cap-drop&lt;/code&gt; 命令来给容器添加 &lt;code&gt;Linux Capabilities&lt;/code&gt;。对于大部分同学可能又要疑问 &lt;code&gt;Linux Capabilities&lt;/code&gt; 是什么呢？&lt;br&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/categories/kubernetes/"/>
    
      <category term="capabilities" scheme="http://icyxp.github.io/categories/kubernetes/capabilities/"/>
    
    
      <category term="k8s" scheme="http://icyxp.github.io/tags/k8s/"/>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/tags/kubernetes/"/>
    
      <category term="capabilities" scheme="http://icyxp.github.io/tags/capabilities/"/>
    
      <category term="docker" scheme="http://icyxp.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>golang如何取消子 goroutine</title>
    <link href="http://icyxp.github.io//blog/2019/09/go-cancellation-of-goroutines.html"/>
    <id>http://icyxp.github.io//blog/2019/09/go-cancellation-of-goroutines.html</id>
    <published>2019-09-27T14:00:00.000Z</published>
    <updated>2019-09-27T09:18:23.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;之前写了个工具，用于检测gitlab runner是否能承受住当前runner job的构建，根据Prometheus的监控，在资源使用过载的情况下，就临期启动服务器加入到集群中用于分担runner job构建时的压力。在运行一段时间后发现内存有时占用有点高（&lt;code&gt;goroutine&lt;/code&gt;过多），于是就有了下面一步步的优化。&lt;br&gt; &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h2&gt;&lt;p&gt;首先我们一开始有以下一段代码逻辑：&lt;br&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;sync&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    wg sync.WaitGroup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;work&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; wg.Done()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//假设这个任务要干1000次，一次任务需要做2秒完成&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;; i++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-time.After(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * time.Second):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;Doing some work &quot;&lt;/span&gt;, i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;Hey, I&#39;m going to do some work&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    wg.Add(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; work()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    wg.Wait()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;Finished. I&#39;m going home&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行结果如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ go run work.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hey, I&lt;span class=&quot;string&quot;&gt;&#39;m going to do some work&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Doing some work  0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Doing some work  1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Doing some work  2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Doing some work  3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Doing some work  999&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Finished. I&#39;&lt;/span&gt;m going home&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在我们假设下我们调用的&lt;code&gt;work&lt;/code&gt;这个方式是来自用户的交互或者一个http请求，我们可能不想一直等待直到&lt;code&gt;goroutine&lt;/code&gt;完成，因此，常见的做法是采用超时机制，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;log&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;work&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;; i++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-time.After(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * time.Second):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;Doing some work &quot;&lt;/span&gt;, i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;Hey, I&#39;m going to do some work&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ch := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; error, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ch &amp;lt;- work()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; err := &amp;lt;-ch:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            log.Fatal(&lt;span class=&quot;string&quot;&gt;&quot;Something went wrong :(&quot;&lt;/span&gt;, err)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-time.After(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; * time.Second):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;等的不耐烦了，就这样吧...&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;Finished. I&#39;m going home&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行结果如下:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ go run work.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hey, I&lt;span class=&quot;string&quot;&gt;&#39;m going to do some work&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Doing some work  0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Doing some work  1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Life is to short to wait that long&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Finished. I&#39;&lt;/span&gt;m going home&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在情况比上一个好一些，main的执行不在需要等待work完成。&lt;/p&gt;
&lt;p&gt;但上述代码还存在一些问题，比如这段代码写在一个http服务中，即使利用超时机制不等待&lt;code&gt;work&lt;/code&gt;的完成，但&lt;code&gt;work&lt;/code&gt; 这个&lt;code&gt;goroutine&lt;/code&gt;还是会在后台一直运行并消耗资源。这时候就需要想个办法来取消这个子&lt;code&gt;goroutine&lt;/code&gt;。于是我想到了&lt;code&gt;context&lt;/code&gt; 这个包，于是又有了如下的代码&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;fmt&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;sync&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;time&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;golang.org/x/net/context&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    wg sync.WaitGroup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func work(ctx context.Context) error &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    defer wg.Done()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for i := 0; i &amp;lt; 1000; i++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        select &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case &amp;lt;-time.After(2 * time.Second):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fmt.Println(&amp;quot;Doing some work &amp;quot;, i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // we received the signal of cancelation in this channel    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case &amp;lt;-ctx.Done():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fmt.Println(&amp;quot;Cancel the context &amp;quot;, i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return ctx.Err()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func main() &amp;#123;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ctx, cancel := context.WithTimeout(context.Background(), 4*time.Second)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    defer cancel()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fmt.Println(&amp;quot;Hey, I&amp;apos;m going to do some work&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    wg.Add(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    go work(ctx)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    wg.Wait()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fmt.Println(&amp;quot;Finished. I&amp;apos;m going home&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行结果如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ go run work.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hey, I&lt;span class=&quot;string&quot;&gt;&#39;m going to do some work&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Doing some work  0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Cancel the context  1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Finished. I&#39;&lt;/span&gt;m going home&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这看上去非常的好，代码看上去也易于管理超时，现在我们确保函数正常工作也不会浪费任何资源。现在为了让例子更加真实，我们在实际的http服务中来进行模拟。&lt;/p&gt;
&lt;p&gt;以下是http server代码，模拟有部分概率会有慢响应：&lt;br&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Lazy and Very Random Server &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;math/rand&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;net/http&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    http.HandleFunc(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;, LazyServer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    http.ListenAndServe(&lt;span class=&quot;string&quot;&gt;&quot;:1111&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// sometimes really fast server, sometimes really slow server&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LazyServer&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(w http.ResponseWriter, req *http.Request)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    headOrTails := rand.Intn(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; headOrTails == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        time.Sleep(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; * time.Second)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fmt.Fprintf(w, &lt;span class=&quot;string&quot;&gt;&quot;Go! slow %v&quot;&lt;/span&gt;, headOrTails)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;Go! slow %v&quot;&lt;/span&gt;, headOrTails)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fmt.Fprintf(w, &lt;span class=&quot;string&quot;&gt;&quot;Go! quick %v&quot;&lt;/span&gt;, headOrTails)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;Go! quick %v&quot;&lt;/span&gt;, headOrTails)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用curl来请求查看结果；&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ curl http://localhost:1111/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Go! quick 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ curl http://localhost:1111/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Go! quick 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ curl http://localhost:1111/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*some seconds later*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Go! slow 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在，我们将在&lt;code&gt;goroutine&lt;/code&gt;中向该服务器发出http请求，但是如果服务器速度较慢，我们将取消该请求并快速返回，以便我们可以管理取消并释放连接。 代码如下：&lt;br&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;io/ioutil&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;net/http&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;sync&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;golang.org/x/net/context&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    wg sync.WaitGroup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// main is not changed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ctx, cancel := context.WithTimeout(context.Background(), &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*time.Second)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; cancel()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;Hey, I&#39;m going to do some work&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    wg.Add(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; work(ctx)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    wg.Wait()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;Finished. I&#39;m going home&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;work&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ctx context.Context)&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; wg.Done()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tr := &amp;amp;http.Transport&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    client := &amp;amp;http.Client&amp;#123;Transport: tr&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// anonymous struct to pack and unpack data in the channel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        r   *http.Response&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err error&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    req, _ := http.NewRequest(&lt;span class=&quot;string&quot;&gt;&quot;GET&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;http://localhost:1111&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resp, err := client.Do(req)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;Doing http request is a hard job&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pack := &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            r   *http.Response&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err error&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&amp;#123;resp, err&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        c &amp;lt;- pack&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-ctx.Done():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tr.CancelRequest(req)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;-c &lt;span class=&quot;comment&quot;&gt;// Wait for client.Do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;Cancel the context&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ctx.Err()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; ok := &amp;lt;-c:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err := ok.err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resp := ok.r&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;Error &quot;&lt;/span&gt;, err)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; resp.Body.Close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        out, _ := ioutil.ReadAll(resp.Body)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;Server Response: %s\n&quot;&lt;/span&gt;, out)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行结果如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ go run work.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hey, I&lt;span class=&quot;string&quot;&gt;&#39;m going to do some work&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Doing http request is a hard job&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Server Response: Go! quick 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Finished. I&#39;&lt;/span&gt;m going home&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ go run work.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hey, I&lt;span class=&quot;string&quot;&gt;&#39;m going to do some work&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Doing http request is a hard job&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Cancel the context&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Finished. I&#39;&lt;/span&gt;m going home&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如您在输出中所看到的，我们避免了服务器的缓慢响应。在客户端中，tcp连接已取消，因此不会忙于等待响应缓慢，因此我们不会浪费资源。&lt;/p&gt;
&lt;p&gt;还有一个例子，有一个常驻的任务，即要控制&lt;code&gt;goroutine&lt;/code&gt;的增长，又需要防止在&lt;code&gt;goroutine&lt;/code&gt;超时后&lt;code&gt;goroutine&lt;/code&gt;在后台运行造成资源的浪费，让我们来看下如何实现：&lt;br&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;runtime&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;golang.org/x/net/context&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//var wg sync.WaitGroup&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;work1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ch &lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//defer wg.Done()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ch &amp;lt;- &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//任务超过3秒就超时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ctx, cancel := context.WithTimeout(context.Background(), &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;*time.Second)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; cancel()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	chT := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;close&lt;/span&gt;(chT)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//具体的任务，这里模拟做的任务需要5秒完成&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		time.Sleep(time.Second * &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-chT:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;job1 finsh...&quot;&lt;/span&gt;, runtime.NumGoroutine())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-ctx.Done():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;job1 timeout...&quot;&lt;/span&gt;, runtime.NumGoroutine())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;job1 exit..&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;-ch  &lt;span class=&quot;comment&quot;&gt;//释放chanel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;work2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ch &lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//defer wg.Done()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ch &amp;lt;- &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ctx, cancel := context.WithTimeout(context.Background(), &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;*time.Second)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; cancel()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	chT := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;close&lt;/span&gt;(chT)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//具体的任务，这里模拟做的任务需要1秒完成&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		time.Sleep(time.Second * &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-chT:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;job2 finsh...&quot;&lt;/span&gt;, runtime.NumGoroutine())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-ctx.Done():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;job2 timeout...&quot;&lt;/span&gt;, runtime.NumGoroutine())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;-ch &lt;span class=&quot;comment&quot;&gt;//释放chanel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;job2 exit..&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;Hey, I&#39;m going to do some work&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//控制goroutine数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ch := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//永久运行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//因为是永久运行，所以这里的sync.Waitgroup可以不再需要&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//wg.Add(2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; work1(ch)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; work2(ch)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		time.Sleep(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * time.Second)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//wg.Wait()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;希望以上例子可以给你带来一些帮助！Happy coding gophers!.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;之前写了个工具，用于检测gitlab runner是否能承受住当前runner job的构建，根据Prometheus的监控，在资源使用过载的情况下，就临期启动服务器加入到集群中用于分担runner job构建时的压力。在运行一段时间后发现内存有时占用有点高（&lt;code&gt;goroutine&lt;/code&gt;过多），于是就有了下面一步步的优化。&lt;br&gt;
    
    </summary>
    
      <category term="Go" scheme="http://icyxp.github.io/categories/Go/"/>
    
    
      <category term="golang" scheme="http://icyxp.github.io/tags/golang/"/>
    
      <category term="goroutine" scheme="http://icyxp.github.io/tags/goroutine/"/>
    
      <category term="chanel" scheme="http://icyxp.github.io/tags/chanel/"/>
    
      <category term="context" scheme="http://icyxp.github.io/tags/context/"/>
    
  </entry>
  
  <entry>
    <title>Go 程序占用大量内存问题分析</title>
    <link href="http://icyxp.github.io//blog/2019/09/go-debug-memory.html"/>
    <id>http://icyxp.github.io//blog/2019/09/go-debug-memory.html</id>
    <published>2019-09-25T14:00:00.000Z</published>
    <updated>2019-09-24T08:27:33.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;在运行一段时间的go程序后内存竟然达到4G左右，几乎可以肯定是由于某段方法操作不规范引起的问题，于是对go程序进行分析&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;分析内存光靠手撕代码是比较困难的，总要借助一些工具。Golang &lt;code&gt;pprof&lt;/code&gt;是Go官方的&lt;code&gt;profiling&lt;/code&gt;工具，非常强大，使用起来也很方便。&lt;/p&gt;
&lt;p&gt;代码改造：&lt;br&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; _ &lt;span class=&quot;string&quot;&gt;&quot;net/http/pprof&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	http.ListenAndServe(&lt;span class=&quot;string&quot;&gt;&quot;0.0.0.0:8888&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;改造后程序启动后，浏览器中输入&lt;a href=&quot;http://ip:8899/debug/pprof/就可以看到一个汇总分析页面，显示如下信息：&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ip:8899/debug/pprof/就可以看到一个汇总分析页面，显示如下信息：&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/debug/pprof/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;profiles:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0    block&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32    goroutine&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;552    heap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0    mutex&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51    threadcreate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;full goroutine stack dump&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;点击heap，在汇总分析页面的最上方可以看到如下图所示，红色箭头所指的就是当前已经使用的堆内存是25M！！&lt;br&gt;&lt;img src=&quot;/images/go/debug_memory_1.png&quot; alt=&quot;内存分析&quot;&gt;&lt;/p&gt;
&lt;p&gt;接下来我们需要借助&lt;code&gt;go tool pprof&lt;/code&gt;来分析：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;go tool pprof -inuse_space http://本机Ip:8888/debug/pprof/heap&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个命令进入后，是一个类似&lt;code&gt;gdb&lt;/code&gt;的交互式界面，输入 &lt;code&gt;top&lt;/code&gt; 命令可以前10大的内存分配，&lt;code&gt;flat&lt;/code&gt; 是堆栈中当前层的inuse内存值，cum是堆栈中本层级的累计inuse内存值（包括调用的函数的inuse内存值，上面的层级）&lt;br&gt;&lt;img src=&quot;/images/go/debug_memory_2.png&quot; alt=&quot;内存分析&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，&lt;code&gt;bytes.makeSlice&lt;/code&gt;这个内置方法竟然使用了24M内存，继续往下看，可以看到&lt;code&gt;ReadFrom&lt;/code&gt;这个方法，搜了一下，发现 &lt;code&gt;ioutil.ReadAll()&lt;/code&gt; 里会调用 &lt;code&gt;bytes.Buffer.ReadFrom&lt;/code&gt;, 而 &lt;code&gt;bytes.Buffer.ReadFrom&lt;/code&gt; 会进行 &lt;code&gt;makeSlice&lt;/code&gt;。再回头看一下&lt;code&gt;io/ioutil.readAll&lt;/code&gt;的代码实现，&lt;br&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;readAll&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(r io.Reader, capacity &lt;span class=&quot;keyword&quot;&gt;int64&lt;/span&gt;)&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(b []&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;, err error)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buf := bytes.NewBuffer(&lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;([]&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, capacity))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e := &lt;span class=&quot;built_in&quot;&gt;recover&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; e == &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; panicErr, ok := e.(error); ok &amp;amp;&amp;amp; panicErr == bytes.ErrTooLarge &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = panicErr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;panic&lt;/span&gt;(e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _, err = buf.ReadFrom(r)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; buf.Bytes(), err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// bytes.MinRead = 512&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ReadAll&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(r io.Reader)&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;([]&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;, error)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; readAll(r, bytes.MinRead)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，&lt;code&gt;ioutil.ReadAll&lt;/code&gt; 每次都会分配初始化一个大小为 &lt;code&gt;bytes.MinRead&lt;/code&gt; 的 buffer ，&lt;code&gt;bytes.MinRead&lt;/code&gt; 在 Golang 里是一个常量，值为 &lt;code&gt;512&lt;/code&gt; 。就是说每次调用 &lt;code&gt;ioutil.ReadAll&lt;/code&gt; 都会分配一块大小为 &lt;code&gt;512&lt;/code&gt; 字节的内存，目前看起来是正常的，但我们再看一下&lt;code&gt;ReadFrom&lt;/code&gt;的实现，&lt;br&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ReadFrom reads data from r until EOF and appends it to the buffer, growing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// the buffer as needed. The return value n is the number of bytes read. Any&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// error except io.EOF encountered during the read is also returned. If the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// buffer becomes too large, ReadFrom will panic with ErrTooLarge.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(b *Buffer)&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ReadFrom&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(r io.Reader)&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(n &lt;span class=&quot;keyword&quot;&gt;int64&lt;/span&gt;, err error)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    b.lastRead = opInvalid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// If buffer is empty, reset to recover space.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; b.off &amp;gt;= &lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(b.buf) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        b.Truncate(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; free := &lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;(b.buf) - &lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(b.buf); free &amp;lt; MinRead &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// not enough space at end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            newBuf := b.buf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; b.off+free &amp;lt; MinRead &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// not enough space using beginning of buffer;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// double buffer capacity&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                newBuf = makeSlice(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;(b.buf) + MinRead)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;copy&lt;/span&gt;(newBuf, b.buf[b.off:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            b.buf = newBuf[:&lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(b.buf)-b.off]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            b.off = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        m, e := r.Read(b.buf[&lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(b.buf):&lt;span class=&quot;built_in&quot;&gt;cap&lt;/span&gt;(b.buf)])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        b.buf = b.buf[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; : &lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(b.buf)+m]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        n += &lt;span class=&quot;keyword&quot;&gt;int64&lt;/span&gt;(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; e == io.EOF &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; e != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; n, e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; n, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// err is EOF, so return nil explicitly&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个函数主要作用就是从 &lt;code&gt;io.Reader&lt;/code&gt; 里读取的数据放入 &lt;code&gt;buffer&lt;/code&gt; 中，如果 buffer 空间不够，就按照每次 &lt;code&gt;2x + MinRead&lt;/code&gt; 的算法递增，这里 &lt;code&gt;MinRead&lt;/code&gt; 的大小也是 512 Bytes ，也就是说如果我们一次性读取的文件过大，就会导致所使用的内存倍增，假设我们的爬虫文件总共有500M,那么所用的内存就有500M * 2 + 512B，况且爬虫文件中还带了那么多log文件，那看看crawlab源码中是哪一段使用&lt;code&gt;ioutil.ReadAll&lt;/code&gt;读了爬虫文件，定位到了这里：&lt;br&gt;&lt;img src=&quot;/images/go/debug_memory_3.jpg&quot; alt=&quot;内存分析&quot;&gt;&lt;/p&gt;
&lt;p&gt;这里直接将全部的文件内容，以二进制的形式读了进来，导致内存倍增，令人窒息的操作。&lt;/p&gt;
&lt;h2 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;#解决方法&quot; class=&quot;headerlink&quot; title=&quot;解决方法&quot;&gt;&lt;/a&gt;解决方法&lt;/h2&gt;&lt;p&gt;其实在读大文件的时候，把文件内容全部读到内存，直接就翻车了，正确是处理方法有两种&lt;/p&gt;
&lt;h3 id=&quot;流式处理&quot;&gt;&lt;a href=&quot;#流式处理&quot; class=&quot;headerlink&quot; title=&quot;流式处理&quot;&gt;&lt;/a&gt;流式处理&lt;/h3&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ReadFile&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(filePath &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;, handle &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;)&lt;/span&gt;) &lt;span class=&quot;title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    f, err := os.Open(filePath)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; f.Close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buf := bufio.NewReader(f)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        line, err := buf.ReadLine(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        line = strings.TrimSpace(line)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        handle(line)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; err == io.EOF&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;分片处理&quot;&gt;&lt;a href=&quot;#分片处理&quot; class=&quot;headerlink&quot; title=&quot;分片处理&quot;&gt;&lt;/a&gt;分片处理&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;当读取的是二进制文件，没有换行符的时候，使用这种方案比较合适&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ReadBigFile&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(fileName &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;, handle &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;([]&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;)&lt;/span&gt;) &lt;span class=&quot;title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    f, err := os.Open(fileName)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;can&#39;t opened this file&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; f.Close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;([]&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; nr, err := f.Read(s[:]); &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; nr &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fmt.Fprintf(os.Stderr, &lt;span class=&quot;string&quot;&gt;&quot;cat: error reading: %s\n&quot;&lt;/span&gt;, err.Error())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            os.Exit(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; nr == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;: &lt;span class=&quot;comment&quot;&gt;// EOF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; nr &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            handle(s[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:nr])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;参考：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;juejin.im/post/5d5be347f265da03b94ff66b&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;在运行一段时间的go程序后内存竟然达到4G左右，几乎可以肯定是由于某段方法操作不规范引起的问题，于是对go程序进行分析&lt;br&gt;
    
    </summary>
    
      <category term="Go" scheme="http://icyxp.github.io/categories/Go/"/>
    
    
      <category term="golang" scheme="http://icyxp.github.io/tags/golang/"/>
    
      <category term="pprof" scheme="http://icyxp.github.io/tags/pprof/"/>
    
      <category term="内存分析" scheme="http://icyxp.github.io/tags/%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90/"/>
    
      <category term="ioutil.ReadAll" scheme="http://icyxp.github.io/tags/ioutil-ReadAll/"/>
    
  </entry>
  
  <entry>
    <title>慎用&lt;-time.After()，容易导致内存泄漏</title>
    <link href="http://icyxp.github.io//blog/2019/09/go-select-timer.html"/>
    <id>http://icyxp.github.io//blog/2019/09/go-select-timer.html</id>
    <published>2019-09-25T13:00:00.000Z</published>
    <updated>2019-09-24T07:21:43.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;问题代码&quot;&gt;&lt;a href=&quot;#问题代码&quot; class=&quot;headerlink&quot; title=&quot;问题代码&quot;&gt;&lt;/a&gt;问题代码&lt;/h2&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;顺带说明下select 监听是如何工作的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ch := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//go start&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			timerC := time.After(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * time.Second)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//timerC 每次都是重新创建的，什么意思呢？简单说来，当 select 成功监听 ch 并进入它的处理分支，下次循环 timerC 重新创建了，时间肯定就重置了。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//如果有多个 case 都可以运行，select 会随机公平选择出一个执行。其余的则不会执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; num := &amp;lt;-ch:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;get num is&quot;&lt;/span&gt;, num)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-timerC:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;comment&quot;&gt;//等价于 case &amp;lt;-time.After(2 * time.Second)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;time&#39;s up!!!&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;comment&quot;&gt;//done&amp;lt;-true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; i++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ch &amp;lt;- i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		time.Sleep(time.Second * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;问题说明&quot;&gt;&lt;a href=&quot;#问题说明&quot; class=&quot;headerlink&quot; title=&quot;问题说明&quot;&gt;&lt;/a&gt;问题说明&lt;/h2&gt;&lt;p&gt;以上代码会导致内存泄漏，其罪魁祸首是&lt;code&gt;&amp;lt;-time.After()&lt;/code&gt;，在官方文档中有此说明：如果定时器没有到达定时时间，&lt;code&gt;gc&lt;/code&gt; 就不会启动垃圾回收。标准库文档中有说明：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The underlying Timer is not recovered by the garbage collector until the timer fires&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;#解决方法&quot; class=&quot;headerlink&quot; title=&quot;解决方法&quot;&gt;&lt;/a&gt;解决方法&lt;/h2&gt;&lt;p&gt;在不使用 &lt;code&gt;time.After&lt;/code&gt; 来实现超时的前提下，可通过创建 &lt;code&gt;timer&lt;/code&gt; 配合 &lt;code&gt;reset&lt;/code&gt; 来实现超时机制，具体代码示例如下：&lt;br&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	idleDuration := &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * time.Second&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	idleDelay := time.NewTimer(idleDuration)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; idleDelay.Stop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		idleDelay.Reset(idleDuration)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; num := &amp;lt;-ch:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;get num is&quot;&lt;/span&gt;, num)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-idleDelay.C:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;time&#39;s up!!!&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//done&amp;lt;-ture&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;....&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;studygolang.com/articles/22617&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题代码&quot;&gt;&lt;a href=&quot;#问题代码&quot; class=&quot;headerlink&quot; title=&quot;问题代码&quot;&gt;&lt;/a&gt;问题代码&lt;/h2&gt;
    
    </summary>
    
      <category term="Go" scheme="http://icyxp.github.io/categories/Go/"/>
    
    
      <category term="timer.After" scheme="http://icyxp.github.io/tags/timer-After/"/>
    
      <category term="内存泄漏" scheme="http://icyxp.github.io/tags/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/"/>
    
      <category term="select" scheme="http://icyxp.github.io/tags/select/"/>
    
  </entry>
  
  <entry>
    <title>Go 陷阱系列</title>
    <link href="http://icyxp.github.io//blog/2019/09/go-trap.html"/>
    <id>http://icyxp.github.io//blog/2019/09/go-trap.html</id>
    <published>2019-09-25T12:00:00.000Z</published>
    <updated>2019-09-24T07:20:05.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;陷阱一-interface问题&quot;&gt;&lt;a href=&quot;#陷阱一-interface问题&quot; class=&quot;headerlink&quot; title=&quot;陷阱一 interface问题&quot;&gt;&lt;/a&gt;陷阱一 interface问题&lt;/h2&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;问题代码&quot;&gt;&lt;a href=&quot;#问题代码&quot; class=&quot;headerlink&quot; title=&quot;问题代码&quot;&gt;&lt;/a&gt;问题代码&lt;/h3&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//DetaildError ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; DetaildError &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	code    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	message &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(e DetaildError)&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;string&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; fmt.Sprintf(&lt;span class=&quot;string&quot;&gt;&quot;Error occured at (%d,%s)&quot;&lt;/span&gt;, e.code, e.message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(x &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)&lt;/span&gt; *&lt;span class=&quot;title&quot;&gt;DetaildError&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; x != &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;amp;DetaildError&amp;#123;code: &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;, message: &lt;span class=&quot;string&quot;&gt;&quot;whoami?&quot;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; err error&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	err = handle(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;I am Error 1 of %s\n&quot;&lt;/span&gt;, err)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	err = handle(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;I am Error 2 of %s\n&quot;&lt;/span&gt;, err)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出结果&quot;&gt;&lt;a href=&quot;#输出结果&quot; class=&quot;headerlink&quot; title=&quot;输出结果&quot;&gt;&lt;/a&gt;输出结果&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;I am Error 1 of Error occured at (1000,whoami?)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I am Error 2 of &amp;lt;nil&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;err 是一个接口，接口在Go中保存了两个值，一个是&lt;code&gt;类型T&lt;/code&gt;，一个&lt;code&gt;值V&lt;/code&gt;&lt;br&gt;只有当&lt;code&gt;T&lt;/code&gt;和&lt;code&gt;V&lt;/code&gt; &lt;strong&gt;同时&lt;/strong&gt; 为&lt;code&gt;nil&lt;/code&gt;时，接口才是&lt;code&gt;nil&lt;/code&gt;&lt;br&gt;在Go中，接口是隐式实现，&lt;strong&gt;因此当我们用一个接口类型去接收一个nil结构体的时候，那么这个接口将不再是nil&lt;/strong&gt;&lt;br&gt;此时的err值为&lt;code&gt;(T=*DetaildError, V=nil)&lt;/code&gt;，不满足接口为nil条件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;解决办法&quot;&gt;&lt;a href=&quot;#解决办法&quot; class=&quot;headerlink&quot; title=&quot;解决办法&quot;&gt;&lt;/a&gt;解决办法&lt;/h3&gt;&lt;h4 id=&quot;修正一：将var-err-Error-修改为接收Struct-而不是接口&quot;&gt;&lt;a href=&quot;#修正一：将var-err-Error-修改为接收Struct-而不是接口&quot; class=&quot;headerlink&quot; title=&quot;修正一：将var err Error 修改为接收Struct 而不是接口&quot;&gt;&lt;/a&gt;修正一：将var err Error 修改为接收Struct 而不是接口&lt;/h4&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; err *DetaildError&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;修正二：将handle方法的返回类型为interface&quot;&gt;&lt;a href=&quot;#修正二：将handle方法的返回类型为interface&quot; class=&quot;headerlink&quot; title=&quot;修正二：将handle方法的返回类型为interface&quot;&gt;&lt;/a&gt;修正二：将handle方法的返回类型为interface&lt;/h4&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(x &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; x != &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;amp;DetaildError&amp;#123;code: &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;, message: &lt;span class=&quot;string&quot;&gt;&quot;whoami?&quot;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;参考：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mp.weixin.qq.com/s/0bJOzNxoQhdVjFOunhmVKQ&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;陷阱一-interface问题&quot;&gt;&lt;a href=&quot;#陷阱一-interface问题&quot; class=&quot;headerlink&quot; title=&quot;陷阱一 interface问题&quot;&gt;&lt;/a&gt;陷阱一 interface问题&lt;/h2&gt;
    
    </summary>
    
      <category term="Go" scheme="http://icyxp.github.io/categories/Go/"/>
    
    
      <category term="golang" scheme="http://icyxp.github.io/tags/golang/"/>
    
      <category term="坑" scheme="http://icyxp.github.io/tags/%E5%9D%91/"/>
    
      <category term="陷阱" scheme="http://icyxp.github.io/tags/%E9%99%B7%E9%98%B1/"/>
    
  </entry>
  
  <entry>
    <title>控制 Goroutine 的并发数量</title>
    <link href="http://icyxp.github.io//blog/2019/09/go-control-goroutine-number.html"/>
    <id>http://icyxp.github.io//blog/2019/09/go-control-goroutine-number.html</id>
    <published>2019-09-18T12:00:00.000Z</published>
    <updated>2019-09-23T02:23:21.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;在 Go 语言中创建协程（Goroutine）的成本非常低，因此稍不注意就可能创建出大量的协程，一方面会造成资源不断增长负载变高，另一方面不容易控制这些协程的状态。&lt;/p&gt;
&lt;p&gt;不过，“能力越大，越需要克制”。网络上已经存在一些讲控制 Goroutine 数目的文章，本文通过图示的方式再简单总结一下其基本理念，以便于记忆。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Goroutine-数量不受控示例&quot;&gt;&lt;a href=&quot;#Goroutine-数量不受控示例&quot; class=&quot;headerlink&quot; title=&quot;Goroutine 数量不受控示例&quot;&gt;&lt;/a&gt;Goroutine 数量不受控示例&lt;/h2&gt;&lt;h3 id=&quot;示例代码&quot;&gt;&lt;a href=&quot;#示例代码&quot; class=&quot;headerlink&quot; title=&quot;示例代码&quot;&gt;&lt;/a&gt;示例代码&lt;/h3&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;runtime&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;sync&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; wg sync.WaitGroup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	jobsCount := &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; jobsCount; j++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		wg.Add(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; do(j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;index: %d,goroutine Num: %d \n&quot;&lt;/span&gt;, j, runtime.NumGoroutine())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;done!&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(i &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; wg.Done()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;hello %d!\n&quot;&lt;/span&gt;, i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	time.Sleep(time.Second * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 刻意睡 2 秒钟，模拟耗时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的代码假设有 &lt;code&gt;jobsCount&lt;/code&gt; 个任务，通过 &lt;code&gt;for-range 给每个任务创建了一个 Goroutine&lt;/code&gt;。为了让主协程等待所有的子协程执行完毕后再退出，使用 &lt;code&gt;sync.WaitGroup&lt;/code&gt; 监控所有协程的状态，从而保证主协程结束时所有的子协程已经退出。为了说明问题，上面的代码还输出了 &lt;code&gt;runtime.NumGoroutine()&lt;/code&gt; 的值用以表征协程的数量。&lt;/p&gt;
&lt;p&gt;运行上面的代码，可以得到类似下面的输出。从下面的输出中我们可以得到两点信息：① 协程的执行顺序是随机的（比如 hello 3 在 hello 6 后面出现）；② 协程的数量递增，最后到了 11 个之多。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;index: 0,goroutine Num: 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello 0!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index: 1,goroutine Num: 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index: 2,goroutine Num: 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello 1!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index: 3,goroutine Num: 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index: 4,goroutine Num: 6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index: 5,goroutine Num: 7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index: 6,goroutine Num: 8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello 6!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello 3!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index: 7,goroutine Num: 9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello 7!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index: 8,goroutine Num: 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index: 9,goroutine Num: 11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello 2!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello 9!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello 8!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello 4!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello 5!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Goroutine-数量不受控制的图示&quot;&gt;&lt;a href=&quot;#Goroutine-数量不受控制的图示&quot; class=&quot;headerlink&quot; title=&quot;Goroutine 数量不受控制的图示&quot;&gt;&lt;/a&gt;Goroutine 数量不受控制的图示&lt;/h3&gt;&lt;p&gt;我们应该怎么理解例一的代码呢？&lt;/p&gt;
&lt;p&gt;假如 CPU 只有 &lt;strong&gt;两个&lt;/strong&gt; 核，下图展示了为每个 job 创建一个 goroutine 的情况（换句话说，goroutine 的数量是不受控制的）。此种情况虽然生成了很多的 goroutine，但是 &lt;strong&gt;&lt;code&gt;每个 CPU 核上同一时间只能执行一个 goroutine&lt;/code&gt;&lt;/strong&gt; ；当 job 很多且生成了相应数目的 goroutine 后，会出现很多等待执行的 goroutine，从而造成资源上的浪费。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/go/figure-goroutine-controll-1.png&quot; alt=&quot;goroutine&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Goroutine-数量受控制示例&quot;&gt;&lt;a href=&quot;#Goroutine-数量受控制示例&quot; class=&quot;headerlink&quot; title=&quot;Goroutine 数量受控制示例&quot;&gt;&lt;/a&gt;Goroutine 数量受控制示例&lt;/h2&gt;&lt;h3 id=&quot;Goroutine-数量受到限制的图示&quot;&gt;&lt;a href=&quot;#Goroutine-数量受到限制的图示&quot; class=&quot;headerlink&quot; title=&quot;Goroutine 数量受到限制的图示&quot;&gt;&lt;/a&gt;Goroutine 数量受到限制的图示&lt;/h3&gt;&lt;p&gt;给每个 job 生成一个 goroutine 的方式显得粗暴了很多，那么可以通过什么样的方式控制 goroutine 的数目呢？其实上面的代码通过一个 for-range 循环完成了两件事情：①为每个 job 创建 goroutine；②把任务相关的标识传给相应的 goroutine 执行。为了控制 goroutine 的数目，可以通过 buffered channel 给每个 goroutine 传递任务相关的信息 或者 可以把上面的两个过程拆分开：a）先通过一个 for-range 循环创建指定数目的 goroutine，b）然后通过 channel/buffered channel 给每个 goroutine 传递任务相关的信息（这里的channel是否缓冲无所谓，主要用到的是 channel 的线程安全特性）。如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/go/figure-goroutine-controll-2.png&quot; alt=&quot;goroutine&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;示例代码-1&quot;&gt;&lt;a href=&quot;#示例代码-1&quot; class=&quot;headerlink&quot; title=&quot;示例代码&quot;&gt;&lt;/a&gt;示例代码&lt;/h3&gt;&lt;p&gt;方式一：通过有阻塞的 &lt;code&gt;buffer channel&lt;/code&gt; 来控制 &lt;code&gt;goroutine&lt;/code&gt; 增长&lt;br&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;runtime&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;sync&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; wg sync.WaitGroup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	jobsCount := &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ch := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;//通过 channel 控制 goroutine 数量，防止无休止增长&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; jobsCount; j++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		wg.Add(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ch &amp;lt;- &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; do(ch, j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;index: %d,goroutine Num: %d \n&quot;&lt;/span&gt;, j, runtime.NumGoroutine())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wg.Wait()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;done!&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ch &lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;, i &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; wg.Done()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;hello %d!\n&quot;&lt;/span&gt;, i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	time.Sleep(time.Second * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 刻意睡 2 秒钟，模拟耗时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;-ch  &lt;span class=&quot;comment&quot;&gt;//必须在任务完成后从channel取出，通过channel来阻塞&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;方式二：通过拆任务实现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a）先通过一个 for-range 循环创建指定数目的 goroutine&lt;/li&gt;
&lt;li&gt;b）然后通过 channel/buffered channel 给每个 goroutine 传递任务相关的信息&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;runtime&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;sync&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; wg sync.WaitGroup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	jobsCount := &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; jobsChan = &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// a) 生成指定数目的 goroutine，每个 goroutine 消费 jobsChan 中的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	poolCount := &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; poolCount; i++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; job(jobsChan)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// b) 把 job 依次推送到 jobsChan 供 goroutine 消费&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; jobsCount; i++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		jobsChan &amp;lt;- i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		wg.Add(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;index: %d,goroutine Num: %d\n&quot;&lt;/span&gt;, i, runtime.NumGoroutine())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wg.Wait()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;done!&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;job&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(jobsChan &lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j := &lt;span class=&quot;keyword&quot;&gt;range&lt;/span&gt; jobsChan &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;hello %d\n&quot;&lt;/span&gt;, j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		time.Sleep(time.Second * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 刻意睡 2 秒钟，模拟耗时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		wg.Done()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行上面的代码可以得到下面类似的输出（可以看到 goroutine 的数量控制在了 3 个）&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hello 0!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index: 0,goroutine Num: 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index: 1,goroutine Num: 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello 1!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello 2!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index: 2,goroutine Num: 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index: 3,goroutine Num: 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello 3!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index: 4,goroutine Num: 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello 4!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index: 5,goroutine Num: 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello 5!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index: 6,goroutine Num: 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index: 7,goroutine Num: 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello 7!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello 6!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index: 8,goroutine Num: 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index: 9,goroutine Num: 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello 8!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello 9!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;jingwei.link&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;在 Go 语言中创建协程（Goroutine）的成本非常低，因此稍不注意就可能创建出大量的协程，一方面会造成资源不断增长负载变高，另一方面不容易控制这些协程的状态。&lt;/p&gt;
&lt;p&gt;不过，“能力越大，越需要克制”。网络上已经存在一些讲控制 Goroutine 数目的文章，本文通过图示的方式再简单总结一下其基本理念，以便于记忆。&lt;/p&gt;
    
    </summary>
    
      <category term="Go" scheme="http://icyxp.github.io/categories/Go/"/>
    
    
      <category term="goroutine" scheme="http://icyxp.github.io/tags/goroutine/"/>
    
      <category term="并发数" scheme="http://icyxp.github.io/tags/%E5%B9%B6%E5%8F%91%E6%95%B0/"/>
    
      <category term="channel" scheme="http://icyxp.github.io/tags/channel/"/>
    
  </entry>
  
  <entry>
    <title>Podman、Skopeo和Buildah下一代容器代替Docker</title>
    <link href="http://icyxp.github.io//blog/2019/09/containers-podman-skopeo-buildah.html"/>
    <id>http://icyxp.github.io//blog/2019/09/containers-podman-skopeo-buildah.html</id>
    <published>2019-09-12T12:00:00.000Z</published>
    <updated>2019-09-12T03:03:40.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;缘起&quot;&gt;&lt;a href=&quot;#缘起&quot; class=&quot;headerlink&quot; title=&quot;缘起&quot;&gt;&lt;/a&gt;缘起&lt;/h2&gt;&lt;p&gt;在Docker实践中，很多人应该都遇到过开机重启时，由于Docker守护程序在占用多核CPU使用100%C使用的情况，此时所有容器都无法正常工作，所有服务都不能用。解决唯一方法只能杀掉所有容器并重启守护进程，才能恢复。经过了解该问题是由于Docker守护进程引起，而且Docker守护进程是以root特权权限启动的，是一个安全问题，那么有什么方法解决呢？本文介绍一下基于CRI 等标准（Docker新架构也符合CRI标准）的新一代容器工具&lt;code&gt;Podman&lt;/code&gt;、&lt;code&gt;Skopero&lt;/code&gt;和&lt;code&gt;Buiddah&lt;/code&gt;套件。&lt;/p&gt;
&lt;h2 id=&quot;OCI&quot;&gt;&lt;a href=&quot;#OCI&quot; class=&quot;headerlink&quot; title=&quot;OCI&quot;&gt;&lt;/a&gt;OCI&lt;/h2&gt;&lt;p&gt;为了防止容器被Docker一家垄断，巨头们（谷歌，Redhat、微软、IBM、Intel、思科）聚在一起决定要成立一个组织（OCI），大家一起商量指定了一套规范（CRI、CNI），大家一致统一只兼容符合这套规范的工具。Docker虽然心有不甘但是毕竟胳膊拧不过大腿，只能该架构兼容规范。&lt;/p&gt;
&lt;p&gt;在该规范的指导下就有了本文的三个主人公，这三个工具都是符合OCI计划下的工具（&lt;a href=&quot;https://github.com/containers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/containers&lt;/a&gt;）。他们主要是由RedHat推动，三者各司其职，配合完成Docker所有的功能和新扩展功能，并且对docker的问题进行了改良：包括不需要守护程序或访问有root权限的组；容器架构基于fork/exec模型创建容器，更加安全可靠；所以是更先进、高效和安全的下一代容器容器工具。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Podman&quot;&gt;&lt;a href=&quot;#Podman&quot; class=&quot;headerlink&quot; title=&quot;Podman&quot;&gt;&lt;/a&gt;Podman&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/containers/podman.jpg&quot; alt=&quot;podman&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/containers/libpod&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Podman&lt;/a&gt;是该工具套件的核心，用来替换Docker中了大多数子命令（RUN，PUSH，PULL等）。Podman无需守护进程，使用用户命名空间来模拟容器中的root，无需连接到具有root权限的套接字保证容器的体系安全。&lt;/p&gt;
&lt;p&gt;Podman专注于维护和修改OCI镜像的所有命令和功能，例如拉动和标记。它还允许我们创建，运行和维护从这些镜像创建的容器。&lt;/p&gt;
&lt;h2 id=&quot;Buildah&quot;&gt;&lt;a href=&quot;#Buildah&quot; class=&quot;headerlink&quot; title=&quot;Buildah&quot;&gt;&lt;/a&gt;Buildah&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/containers/buildah&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Buildah&lt;/a&gt;用来构建OCI图像。虽然Podman也可以用户构建Docker镜像，但是构建速度超慢，并且默认情况下使用vfs存储驱动程序会耗尽大量磁盘空间。 buildah bud（使用Dockerfile构建）则会非常快，并使用覆盖存储驱动程序。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/containers/buildah.jpg&quot; alt=&quot;buildah&quot;&gt;&lt;/p&gt;
&lt;p&gt;Buildah专注于构建OCI镜像。 Buildah的命令复制了Dockerfile中的所有命令。可以使用Dockerfiles构建镜像，并且不需要任何root权限。 Buildah的最终目标是提供更低级别的coreutils界面来构建图像。Buildah也支持非Dockerfiles构建镜像，可以允许将其他脚本语言集成到构建过程中。 Buildah遵循一个简单的fork-exec模型，不以守护进程运行，但它基于golang中的综合API，可以存储到其他工具中。&lt;/p&gt;
&lt;h2 id=&quot;Skopeo&quot;&gt;&lt;a href=&quot;#Skopeo&quot; class=&quot;headerlink&quot; title=&quot;Skopeo&quot;&gt;&lt;/a&gt;Skopeo&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/containers/skopeo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Skopeo&lt;/a&gt;是一个工具，允许我们通过推，拉和复制镜像来处理Docker和OC镜像。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/containers/skopeo.jpg&quot; alt=&quot;skopeo&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;三个工具对比&quot;&gt;&lt;a href=&quot;#三个工具对比&quot; class=&quot;headerlink&quot; title=&quot;三个工具对比&quot;&gt;&lt;/a&gt;三个工具对比&lt;/h2&gt;&lt;p&gt;Buildah构建容器，Podman运行容器，Skopeo传输容器镜像。这些都是由Github容器组织维护的开源工具（&lt;a href=&quot;https://github.com/containers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/containers&lt;/a&gt;）。这些工具都不需要运行守护进程，并且大多数情况下也不需要root访问权限。&lt;/p&gt;
&lt;p&gt;Podman和Buildah之间的一个主要区别是他们的容器概念。 Podman允许用户创建”传统容器”。虽然Buildah容器实际上只是为了允许将内容添加回容器图像而创建的。一种简单方法是buildah run命令模拟Dockerfile中的RUN命令，而podman run命令模拟功能中的docker run命令。&lt;/p&gt;
&lt;p&gt;总之，Buildah是创建OCI镜像的有效方式，而Podman允许我们使用熟悉的容器cli命令在生产环境中管理和维护这些镜像和容器。&lt;/p&gt;
&lt;h2 id=&quot;容器迁移&quot;&gt;&lt;a href=&quot;#容器迁移&quot; class=&quot;headerlink&quot; title=&quot;容器迁移&quot;&gt;&lt;/a&gt;容器迁移&lt;/h2&gt;&lt;h3 id=&quot;套件安装&quot;&gt;&lt;a href=&quot;#套件安装&quot; class=&quot;headerlink&quot; title=&quot;套件安装&quot;&gt;&lt;/a&gt;套件安装&lt;/h3&gt;&lt;p&gt;各大Linux发行版都提供了二进制安装包， 可以使用发行版的系统包管理工具一键安装：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Fedora, CentOS：sudo yum -y install podman&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Arch &amp;amp; Manjaro Linux： sudo pacman -S podman&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Ubuntu不支持一键安装，需要先添加第三方私有ppa仓库：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update -qq&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install -qq -y software-properties-common uidmap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo add-apt-repository -y ppa:projectatomic/ppa&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update -qq&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get -qq -y install podman&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;实践迁移&quot;&gt;&lt;a href=&quot;#实践迁移&quot; class=&quot;headerlink&quot; title=&quot;实践迁移&quot;&gt;&lt;/a&gt;实践迁移&lt;/h2&gt;&lt;p&gt;安装了套件的三个工具后，就可以对docker实例进行迁移了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;替换cron或者CI作业（脚本）中的所有docker实例，把docker替换为podman，可以使用后面提到的别名的方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;1、停止和删除所有的运行的docker。&quot;&gt;&lt;a href=&quot;#1、停止和删除所有的运行的docker。&quot; class=&quot;headerlink&quot; title=&quot;1、停止和删除所有的运行的docker。&quot;&gt;&lt;/a&gt;1、停止和删除所有的运行的docker。&lt;/h3&gt;&lt;p&gt;为了确保没有有差错，可以使用sysdig来捕获系统中docker的引用，看看是否还有其他东西在调用docker。&lt;/p&gt;
&lt;h3 id=&quot;2、删除docker&quot;&gt;&lt;a href=&quot;#2、删除docker&quot; class=&quot;headerlink&quot; title=&quot;2、删除docker&quot;&gt;&lt;/a&gt;2、删除docker&lt;/h3&gt;&lt;p&gt;现在就可以删除docker了：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum remove docker || apt remove -y docker-ce&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;3、环境清理&quot;&gt;&lt;a href=&quot;#3、环境清理&quot; class=&quot;headerlink&quot; title=&quot;3、环境清理&quot;&gt;&lt;/a&gt;3、环境清理&lt;/h3&gt;&lt;p&gt;最后清理下docker文件，我们建个一目录docker备份目录，把以下目录mv到备份目录即可：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/etc/docker/*，/etc/default/docker和/var/lib/ docker中的任何遗留文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;删除docker组&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;delgroup docker&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在可以吧docker别名成podman来无缝使用了&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;alias&lt;/span&gt; docker = podman&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;本文介绍了符合CIR标准的 cri-o 容器套件Podman，Skopeo和Buildah。该新一代容器套件架构基于*nix传统的fork-exec模型，解决了由于docker守护程序导致的启动和安全问题，提提高了容器的性能和安全。&lt;/p&gt;
&lt;p&gt;来源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;zhuanlan.zhihu.com&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;缘起&quot;&gt;&lt;a href=&quot;#缘起&quot; class=&quot;headerlink&quot; title=&quot;缘起&quot;&gt;&lt;/a&gt;缘起&lt;/h2&gt;&lt;p&gt;在Docker实践中，很多人应该都遇到过开机重启时，由于Docker守护程序在占用多核CPU使用100%C使用的情况，此时所有容器都无法正常工作，所有服务都不能用。解决唯一方法只能杀掉所有容器并重启守护进程，才能恢复。经过了解该问题是由于Docker守护进程引起，而且Docker守护进程是以root特权权限启动的，是一个安全问题，那么有什么方法解决呢？本文介绍一下基于CRI 等标准（Docker新架构也符合CRI标准）的新一代容器工具&lt;code&gt;Podman&lt;/code&gt;、&lt;code&gt;Skopero&lt;/code&gt;和&lt;code&gt;Buiddah&lt;/code&gt;套件。&lt;/p&gt;
&lt;h2 id=&quot;OCI&quot;&gt;&lt;a href=&quot;#OCI&quot; class=&quot;headerlink&quot; title=&quot;OCI&quot;&gt;&lt;/a&gt;OCI&lt;/h2&gt;&lt;p&gt;为了防止容器被Docker一家垄断，巨头们（谷歌，Redhat、微软、IBM、Intel、思科）聚在一起决定要成立一个组织（OCI），大家一起商量指定了一套规范（CRI、CNI），大家一致统一只兼容符合这套规范的工具。Docker虽然心有不甘但是毕竟胳膊拧不过大腿，只能该架构兼容规范。&lt;/p&gt;
&lt;p&gt;在该规范的指导下就有了本文的三个主人公，这三个工具都是符合OCI计划下的工具（&lt;a href=&quot;https://github.com/containers&quot;&gt;https://github.com/containers&lt;/a&gt;）。他们主要是由RedHat推动，三者各司其职，配合完成Docker所有的功能和新扩展功能，并且对docker的问题进行了改良：包括不需要守护程序或访问有root权限的组；容器架构基于fork/exec模型创建容器，更加安全可靠；所以是更先进、高效和安全的下一代容器容器工具。&lt;/p&gt;
    
    </summary>
    
      <category term="Containers" scheme="http://icyxp.github.io/categories/Containers/"/>
    
    
      <category term="docker" scheme="http://icyxp.github.io/tags/docker/"/>
    
      <category term="podman" scheme="http://icyxp.github.io/tags/podman/"/>
    
      <category term="skopeo" scheme="http://icyxp.github.io/tags/skopeo/"/>
    
      <category term="buildah" scheme="http://icyxp.github.io/tags/buildah/"/>
    
      <category term="容器" scheme="http://icyxp.github.io/tags/%E5%AE%B9%E5%99%A8/"/>
    
      <category term="containers" scheme="http://icyxp.github.io/tags/containers/"/>
    
  </entry>
  
  <entry>
    <title>Kubelet 状态更新机制</title>
    <link href="http://icyxp.github.io//blog/2019/08/k8s-kubelet-sync-node-status.html"/>
    <id>http://icyxp.github.io//blog/2019/08/k8s-kubelet-sync-node-status.html</id>
    <published>2019-08-27T14:00:00.000Z</published>
    <updated>2019-08-27T07:15:49.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;概览&quot;&gt;&lt;a href=&quot;#概览&quot; class=&quot;headerlink&quot; title=&quot;概览&quot;&gt;&lt;/a&gt;概览&lt;/h2&gt;&lt;p&gt;当 Kubernetes 中 Node 节点出现状态异常的情况下，节点上的 Pod 会被重新调度到其他节点上去，但是有的时候我们会发现节点 Down 掉以后，Pod 并不会立即触发重新调度，这实际上就是和 Kubelet 的状态更新机制密切相关的，Kubernetes 提供了一些参数配置来触发重新调度到嗯时间，下面我们来分析下 Kubelet 状态更新的基本流程。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;kubelet 自身会定期更新状态到 apiserver，通过参数&lt;code&gt;--node-status-update-frequency&lt;/code&gt;指定上报频率，默认是 10s 上报一次。&lt;/li&gt;
&lt;li&gt;kube-controller-manager 会每隔&lt;code&gt;--node-monitor-period&lt;/code&gt;时间去检查 kubelet 的状态，默认是 5s。&lt;/li&gt;
&lt;li&gt;当 node 失联一段时间后，kubernetes 判定 node 为 &lt;code&gt;notready&lt;/code&gt; 状态，这段时长通过&lt;code&gt;--node-monitor-grace-period&lt;/code&gt;参数配置，默认 40s。&lt;/li&gt;
&lt;li&gt;当 node 失联一段时间后，kubernetes 判定 node 为 &lt;code&gt;unhealthy&lt;/code&gt;状态，这段时长通过&lt;code&gt;--node-startup-grace-period&lt;/code&gt;参数配置，默认 1m0s。&lt;/li&gt;
&lt;li&gt;当 node 失联一段时间后，kubernetes 开始删除原 node 上的 pod，这段时长是通过&lt;code&gt;--pod-eviction-timeout&lt;/code&gt;参数配置，默认 5m0s。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;kube-controller-manager 和 kubelet 是异步工作的，这意味着延迟可能包括任何的网络延迟、apiserver 的延迟、etcd 延迟，一个节点上的负载引起的延迟等等。因此，如果&lt;code&gt;--node-status-update-frequency&lt;/code&gt;设置为5s，那么实际上 etcd 中的数据变化会需要 6-7s，甚至更长时间。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;Kubelet在更新状态失败时，会进行&lt;code&gt;nodeStatusUpdateRetry&lt;/code&gt;次重试，默认为&lt;strong&gt;&lt;code&gt;5 次&lt;/code&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Kubelet 会在函数&lt;code&gt;tryUpdateNodeStatus&lt;/code&gt;中尝试进行状态更新。Kubelet 使用了 Golang 中的&lt;code&gt;http.Client()&lt;/code&gt;方法，但是没有指定超时时间，因此，如果 API Server 过载时，当建立 TCP 连接时可能会出现一些故障。&lt;/p&gt;
&lt;p&gt;因此，在&lt;code&gt;nodeStatusUpdateRetry * --node-status-update-frequency&lt;/code&gt;时间后才会更新一次节点状态。&lt;/p&gt;
&lt;p&gt;同时，Kubernetes 的 controller manager 将尝试每&lt;code&gt;--node-monitor-period&lt;/code&gt;时间周期内检查&lt;code&gt;nodeStatusUpdateRetry&lt;/code&gt;次。在&lt;code&gt;--node-monitor-grace-period&lt;/code&gt;之后，会认为节点 unhealthy，然后会在&lt;code&gt;--pod-eviction-timeout&lt;/code&gt;后删除 Pod。&lt;/p&gt;
&lt;p&gt;kube proxy 有一个 watcher API，一旦 Pod 被驱逐了，kube proxy 将会通知更新节点的 iptables 规则，将 Pod 从 Service 的 Endpoints 中移除，这样就不会访问到来自故障节点的 Pod 了。&lt;/p&gt;
&lt;h2 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h2&gt;&lt;p&gt;对于这些参数的配置，需要根据不通的集群规模场景来进行配置。&lt;/p&gt;
&lt;h3 id=&quot;社区默认的配置&quot;&gt;&lt;a href=&quot;#社区默认的配置&quot; class=&quot;headerlink&quot; title=&quot;社区默认的配置&quot;&gt;&lt;/a&gt;社区默认的配置&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;说明&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;–node-status-update-frequency&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;kubelet 间隔多少时间向apiserver上报node status信息&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;10s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–node-monitor-period&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;kube-controller-manager 间隔多少时间后从apiserver同步node status信息&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;5s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–node-monitor-grace-period&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;kube-controller-manager 间隔多少时间之后，把node状态设置为NotReady&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;40s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–pod-eviction-timeout&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;kube-controller-manager 在第一次kubelet notReady事件之后的多少时间后，开始驱逐pod。并不是CM把node状态设置为notready之后再等待&lt;code&gt;pod-eviction-timeout&lt;/code&gt;时间&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;5m&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;快速更新和快速响应&quot;&gt;&lt;a href=&quot;#快速更新和快速响应&quot; class=&quot;headerlink&quot; title=&quot;快速更新和快速响应&quot;&gt;&lt;/a&gt;快速更新和快速响应&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;说明&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;–node-status-update-frequency&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;kubelet 间隔多少时间向apiserver上报node status信息&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;4s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–node-monitor-period&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;kube-controller-manager 间隔多少时间后从apiserver同步node status信息&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–node-monitor-grace-period&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;kube-controller-manager 间隔多少时间之后，把node状态设置为NotReady&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;20s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–pod-eviction-timeout&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;kube-controller-manager 在第一次kubelet notReady事件之后的多少时间后，开始驱逐pod。并不是CM把node状态设置为notready之后再等待&lt;code&gt;pod-eviction-timeout&lt;/code&gt;时间&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;30s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在这种情况下，Pod 将在 50s 被驱逐，因为该节点在 20s 后被视为Down掉了，&lt;code&gt;--pod-eviction-timeout&lt;/code&gt; 在 30s 之后发生，Kubelet将尝试每4秒更新一次状态。因此，在Kubernetes控制器管理器考虑节点的不健康状态之前，它将是 (20s / 4s * 5) = 25 次尝试，但是，这种情况会给 etcd 产生很大的开销，因为每个节点都会尝试每 2s 更新一次状态。&lt;/p&gt;
&lt;p&gt;如果环境有1000个节点，那么每分钟将有(60s / 4s * 1000) = 15000次节点更新操作，这可能需要大型 etcd 容器甚至是 etcd 的专用节点。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果我们计算尝试次数，则除法将给出5，但实际上每次尝试的 nodeStatusUpdateRetry 尝试将从3到5。 由于所有组件的延迟，尝试总次数将在15到25之间变化。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;中等更新和平均响应&quot;&gt;&lt;a href=&quot;#中等更新和平均响应&quot; class=&quot;headerlink&quot; title=&quot;中等更新和平均响应&quot;&gt;&lt;/a&gt;中等更新和平均响应&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;说明&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;–node-status-update-frequency&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;kubelet 间隔多少时间向apiserver上报node status信息&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;20s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–node-monitor-period&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;kube-controller-manager 间隔多少时间后从apiserver同步node status信息&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;5s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–node-monitor-grace-period&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;kube-controller-manager 间隔多少时间之后，把node状态设置为NotReady&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2m&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–pod-eviction-timeout&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;kube-controller-manager 在第一次kubelet notReady事件之后的多少时间后，开始驱逐pod。并不是CM把node状态设置为notready之后再等待&lt;code&gt;pod-eviction-timeout&lt;/code&gt;时间&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;1m&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这种场景下会，Pod 将在 3m 被驱逐。 Kubelet将尝试每20秒更新一次状态。因此，在Kubernetes控制器管理器考虑节点的不健康状态之前，它将是 (2m &lt;em&gt; 60 / 20s &lt;/em&gt; 5) = 30 次尝试&lt;/p&gt;
&lt;p&gt;如果有 1000 个节点，1分钟之内就会有 (60s / 20s * 1000) = 3000 次的节点状态更新操作。&lt;/p&gt;
&lt;h3 id=&quot;低更新和慢响应&quot;&gt;&lt;a href=&quot;#低更新和慢响应&quot; class=&quot;headerlink&quot; title=&quot;低更新和慢响应&quot;&gt;&lt;/a&gt;低更新和慢响应&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;说明&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;–node-status-update-frequency&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;kubelet 间隔多少时间向apiserver上报node status信息&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;1m&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–node-monitor-period&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;kube-controller-manager 间隔多少时间后从apiserver同步node status信息&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;5s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–node-monitor-grace-period&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;kube-controller-manager 间隔多少时间之后，把node状态设置为NotReady&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;5m&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–pod-eviction-timeout&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;kube-controller-manager 在第一次kubelet notReady事件之后的多少时间后，开始驱逐pod。并不是CM把node状态设置为notready之后再等待&lt;code&gt;pod-eviction-timeout&lt;/code&gt;时间&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;1m&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这种场景下会，Pod 将在 6m 被驱逐。 Kubelet将尝试每1分钟更新一次状态。因此，在Kubernetes控制器管理器考虑节点的不健康状态之前，它将是 (5m / 1m * 5) = 25 次尝试&lt;/p&gt;
&lt;p&gt;如果有 1000 个节点，1分钟之内就会有 (1m / 60s * 1000) = 1000 次的节点状态更新操作。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kubernetes-sigs/kubespray/blob/master/docs/kubernetes-reliability.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/kubernetes-sigs/kubespray/blob/master/docs/kubernetes-reliability.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Kevin-fqh/learning-k8s-source-code/blob/master/kubelet/(05)kubelet%E8%B5%84%E6%BA%90%E4%B8%8A%E6%8A%A5%26Evition%E6%9C%BA%E5%88%B6.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Kevin-fqh/learning-k8s-source-code/blob/master/kubelet/(05)kubelet%E8%B5%84%E6%BA%90%E4%B8%8A%E6%8A%A5%26Evition%E6%9C%BA%E5%88%B6.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概览&quot;&gt;&lt;a href=&quot;#概览&quot; class=&quot;headerlink&quot; title=&quot;概览&quot;&gt;&lt;/a&gt;概览&lt;/h2&gt;&lt;p&gt;当 Kubernetes 中 Node 节点出现状态异常的情况下，节点上的 Pod 会被重新调度到其他节点上去，但是有的时候我们会发现节点 Down 掉以后，Pod 并不会立即触发重新调度，这实际上就是和 Kubelet 的状态更新机制密切相关的，Kubernetes 提供了一些参数配置来触发重新调度到嗯时间，下面我们来分析下 Kubelet 状态更新的基本流程。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;kubelet 自身会定期更新状态到 apiserver，通过参数&lt;code&gt;--node-status-update-frequency&lt;/code&gt;指定上报频率，默认是 10s 上报一次。&lt;/li&gt;
&lt;li&gt;kube-controller-manager 会每隔&lt;code&gt;--node-monitor-period&lt;/code&gt;时间去检查 kubelet 的状态，默认是 5s。&lt;/li&gt;
&lt;li&gt;当 node 失联一段时间后，kubernetes 判定 node 为 &lt;code&gt;notready&lt;/code&gt; 状态，这段时长通过&lt;code&gt;--node-monitor-grace-period&lt;/code&gt;参数配置，默认 40s。&lt;/li&gt;
&lt;li&gt;当 node 失联一段时间后，kubernetes 判定 node 为 &lt;code&gt;unhealthy&lt;/code&gt;状态，这段时长通过&lt;code&gt;--node-startup-grace-period&lt;/code&gt;参数配置，默认 1m0s。&lt;/li&gt;
&lt;li&gt;当 node 失联一段时间后，kubernetes 开始删除原 node 上的 pod，这段时长是通过&lt;code&gt;--pod-eviction-timeout&lt;/code&gt;参数配置，默认 5m0s。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;kube-controller-manager 和 kubelet 是异步工作的，这意味着延迟可能包括任何的网络延迟、apiserver 的延迟、etcd 延迟，一个节点上的负载引起的延迟等等。因此，如果&lt;code&gt;--node-status-update-frequency&lt;/code&gt;设置为5s，那么实际上 etcd 中的数据变化会需要 6-7s，甚至更长时间。&lt;br&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="http://icyxp.github.io/categories/kubernetes/"/>
    
      <category term="kubelet" scheme="http://icyxp.github.io/categories/kubernetes/kubelet/"/>
    
    
      <category term="k8s" scheme="http://icyxp.github.io/tags/k8s/"/>
    
      <category term="kubelet" scheme="http://icyxp.github.io/tags/kubelet/"/>
    
      <category term="更新机制" scheme="http://icyxp.github.io/tags/%E6%9B%B4%E6%96%B0%E6%9C%BA%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>Calico 3.5+ 根据节点标签分配 IP 地址</title>
    <link href="http://icyxp.github.io//blog/2019/08/k8s-calico-assigning-ip.html"/>
    <id>http://icyxp.github.io//blog/2019/08/k8s-calico-assigning-ip.html</id>
    <published>2019-08-27T13:00:00.000Z</published>
    <updated>2019-08-27T02:33:32.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;关于-IP-地址的分配&quot;&gt;&lt;a href=&quot;#关于-IP-地址的分配&quot; class=&quot;headerlink&quot; title=&quot;关于 IP 地址的分配&quot;&gt;&lt;/a&gt;关于 IP 地址的分配&lt;/h2&gt;&lt;p&gt;Calico 能够进行配置，为不同拓扑指定 IP 地址池。例如可能希望某些机架、地区、或者区域能够从同一个 IP 池中获取地址。这对于降低路由数量或者配合防火墙策略的要求会很有帮助。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.projectcalico.org/v3.5/reference/cni-plugin/configuration#ipam&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cni 插件配置参考中的 IP 地址管理章节&lt;/a&gt;中包含了三种分配 IP 地址的方式。Kubernetes 注解方式只能用于 Namespace 或者 Pod 一级。剩下的只有两个办法，CNI 配置或者是基于节点选择器的 IP 池，相对于 CNI 配置的方式来说，节点选择器方案省去了修改本地文件的麻烦。&lt;/p&gt;
&lt;p&gt;在更高层次上，基于节点选择器的 IP 地址分配方法就是给节点设置标签，然后用节点选择器选择对应的 IP 地址池进行分配。后面的内容中将给出一个详细的例子，用这种方式来设置一种机架亲和方式的 IP 地址分配方案。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果 Calico 无法根据上述顺序来决定一个 IP 地址池，或者在选定的地址池中找不到可用的 IP 地址，那么这一工作负载就不会分到 IP 地址，无法启动。为了防止这种情况的发生，我们建议所有节点至少有一个合适的地址池。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;先决条件&quot;&gt;&lt;a href=&quot;#先决条件&quot; class=&quot;headerlink&quot; title=&quot;先决条件&quot;&gt;&lt;/a&gt;先决条件&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;这一功能需要 Calico 在 ETCD 模式下工作&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;示例：Kubernetes&quot;&gt;&lt;a href=&quot;#示例：Kubernetes&quot; class=&quot;headerlink&quot; title=&quot;示例：Kubernetes&quot;&gt;&lt;/a&gt;示例：Kubernetes&lt;/h2&gt;&lt;p&gt;本例中，我们会创建一个集群，其中包含四个节点，分布在两个机架上，每个机架各两台。示意如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;       -------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       |    router       |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       -------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       |                 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---------------   ---------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| rack-0      |   | rack-1      |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---------------   ---------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| kube-node-0 |   | kube-node-2 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- - - - - - - -   - - - - - - - -&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| kube-node-1 |   | kube-node-3 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- - - - - - - -   - - - - - - - -&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Pod IP 地址范围为 &lt;code&gt;192.168.0.0/16&lt;/code&gt;，我们进行如下设计：保留 &lt;code&gt;192.168.0.0/24&lt;/code&gt; 给 &lt;code&gt;rack-0&lt;/code&gt;,  &lt;code&gt;192.168.1.0/24&lt;/code&gt; 给 &lt;code&gt;rack-1&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;要设置一个没有缺省地址池的的 Calico，首先运行 &lt;code&gt;calicoctl get ippool -o wide&lt;/code&gt;，会看到已经创建了一个 &lt;code&gt;192.168.0.0/16&lt;/code&gt; 的地址池：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;NAME                  CIDR             NAT    IPIPMODE   DISABLED   SELECTOR&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default-ipv4-ippool   192.168.0.0/16   &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;   Always     &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;      all()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;删除缺省地址池&lt;br&gt;&lt;code&gt;default-ipv4-ippool&lt;/code&gt; 地址池已经存在，并占据了整个 &lt;code&gt;/16&lt;/code&gt; 块，因此必须删除：&lt;code&gt;calicoctl delete ippools default-ipv4-ippool&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;给 Node 打标签。&lt;br&gt;要给特定节点分配地址池，节点必须用标签进行标识：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubectl label nodes kube-node-0 rack=0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl label nodes kube-node-1 rack=0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl label nodes kube-node-2 rack=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl label nodes kube-node-3 rack=1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;为每个机架创建地址池&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;rack-0-ippool&lt;br&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;calicoctl create -f -&amp;lt;&amp;lt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;apiVersion:&lt;/span&gt; projectcalico.org/v3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;kind:&lt;/span&gt; IPPool&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  name:&lt;/span&gt; rack&lt;span class=&quot;bullet&quot;&gt;-0&lt;/span&gt;-ippool&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;spec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  cidr:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  ipipMode:&lt;/span&gt; Always&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  natOutgoing:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  nodeSelector:&lt;/span&gt; rack == &lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;rack-1-ippool&lt;br&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;calicoctl create -f -&amp;lt;&amp;lt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;apiVersion:&lt;/span&gt; projectcalico.org/v3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;kind:&lt;/span&gt; IPPool&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  name:&lt;/span&gt; rack&lt;span class=&quot;bullet&quot;&gt;-1&lt;/span&gt;-ippool&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;spec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  cidr:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  ipipMode:&lt;/span&gt; Always&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  natOutgoing:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  nodeSelector:&lt;/span&gt; rack == &lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在就创建了两个地址池，使用 &lt;code&gt;calicoctl get ippool -o wide&lt;/code&gt; 进行查看：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;NAME                  CIDR             NAT    IPIPMODE   DISABLED   SELECTOR&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rack-1-ippool         192.168.0.0/24   &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;   Always     &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;      rack == &lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rack-2-ippool         192.168.1.0/24   &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;   Always     &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;      rack == &lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;检查地址池的工作状态&lt;br&gt;创建一个 Nginx 的 Deployment，其中包含五个副本，保证分配到每一个节点上。&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubectl run nginx --image nginx --replicas 5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;检查新的 Pod 是否已经根据所在机架获得了应有的 IP 地址。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;NAME                   READY   STATUS    RESTARTS   AGE    IP             NODE          NOMINATED NODE   READINESS GATES&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nginx-5c7588df-prx4z   1/1     Running   0          6m3s   192.168.0.64   kube-node-0   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nginx-5c7588df&lt;span class=&quot;_&quot;&gt;-s&lt;/span&gt;7qw6   1/1     Running   0          6m7s   192.168.0.129  kube-node-1   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nginx-5c7588df-w7r7g   1/1     Running   0          6m3s   192.168.1.65   kube-node-2   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nginx-5c7588df-62lnf   1/1     Running   0          6m3s   192.168.1.1    kube-node-3   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nginx-5c7588df-pnsvv   1/1     Running   0          6m3s   192.168.1.64   kube-node-2   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，IP 地址的是根据节点（所在的机架）来选择了对应的地址池进行分配的。&lt;/p&gt;
&lt;p&gt;参考地址&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.projectcalico.org/v3.5/usage/assigning-ip-addresses-topology&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;calico 3.5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.projectcalico.org/v3.6/networking/assigning-ip-addresses-topology&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;calico 3.6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.projectcalico.org/v3.7/networking/assigning-ip-addresses-topology&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;calico 3.7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.projectcalico.org/v3.8/networking/assigning-ip-addresses-topology&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;calico 3.8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于-IP-地址的分配&quot;&gt;&lt;a href=&quot;#关于-IP-地址的分配&quot; class=&quot;headerlink&quot; title=&quot;关于 IP 地址的分配&quot;&gt;&lt;/a&gt;关于 IP 地址的分配&lt;/h2&gt;&lt;p&gt;Calico 能够进行配置，为不同拓扑指定 IP 地址池。例如可能希望某些机架、地区、或者区域能够从同一个 IP 池中获取地址。这对于降低路由数量或者配合防火墙策略的要求会很有帮助。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.projectcalico.org/v3.5/reference/cni-plugin/configuration#ipam&quot;&gt;cni 插件配置参考中的 IP 地址管理章节&lt;/a&gt;中包含了三种分配 IP 地址的方式。Kubernetes 注解方式只能用于 Namespace 或者 Pod 一级。剩下的只有两个办法，CNI 配置或者是基于节点选择器的 IP 池，相对于 CNI 配置的方式来说，节点选择器方案省去了修改本地文件的麻烦。&lt;/p&gt;
&lt;p&gt;在更高层次上，基于节点选择器的 IP 地址分配方法就是给节点设置标签，然后用节点选择器选择对应的 IP 地址池进行分配。后面的内容中将给出一个详细的例子，用这种方式来设置一种机架亲和方式的 IP 地址分配方案。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果 Calico 无法根据上述顺序来决定一个 IP 地址池，或者在选定的地址池中找不到可用的 IP 地址，那么这一工作负载就不会分到 IP 地址，无法启动。为了防止这种情况的发生，我们建议所有节点至少有一个合适的地址池。&lt;br&gt;
    
    </summary>
    
      <category term="calico" scheme="http://icyxp.github.io/categories/calico/"/>
    
    
      <category term="k8s" scheme="http://icyxp.github.io/tags/k8s/"/>
    
      <category term="ip分配" scheme="http://icyxp.github.io/tags/ip%E5%88%86%E9%85%8D/"/>
    
      <category term="calico" scheme="http://icyxp.github.io/tags/calico/"/>
    
  </entry>
  
  <entry>
    <title>镜像漏洞检测工具 -- Trivy</title>
    <link href="http://icyxp.github.io//blog/2019/08/security-trivy.html"/>
    <id>http://icyxp.github.io//blog/2019/08/security-trivy.html</id>
    <published>2019-08-27T12:00:00.000Z</published>
    <updated>2019-08-27T01:46:11.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;道路千万条，安全第一条； 镜像不规范，同事两行泪。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/aquasecurity/trivy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Trivy&lt;/a&gt; 是一个面向镜像的漏洞检测工具，具备如下特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开源&lt;/li&gt;
&lt;li&gt;免费&lt;/li&gt;
&lt;li&gt;易用&lt;/li&gt;
&lt;li&gt;准确度高&lt;/li&gt;
&lt;li&gt;CI 友好&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;相对于老前辈 &lt;a href=&quot;https://github.com/coreos/clair&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Clair&lt;/a&gt;，Trivy 的使用非常直观方便，适用于更多的场景。&lt;/p&gt;
&lt;p&gt;下面是官方出具的对比表格：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;扫描器&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;操作系统&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;依赖检测&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;适用性&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;准确度&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;CI 友好&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Trivy&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◎&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clair&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;×&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;△&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;△&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Anchore Engine&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;△&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;△&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;△&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Quay&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;×&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;×&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MicroScanner&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;×&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Docker Hub&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;×&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;×&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;×&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCR&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;×&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;×&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;h3 id=&quot;MacOS&quot;&gt;&lt;a href=&quot;#MacOS&quot; class=&quot;headerlink&quot; title=&quot;MacOS&quot;&gt;&lt;/a&gt;MacOS&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ brew tap knqyf263/trivy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ brew install knqyf263/trivy/trivy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;RHEL-CentOS&quot;&gt;&lt;a href=&quot;#RHEL-CentOS&quot; class=&quot;headerlink&quot; title=&quot;RHEL/CentOS&quot;&gt;&lt;/a&gt;RHEL/CentOS&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo vim /etc/yum.repos.d/trivy.repo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[trivy]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;name=Trivy repository&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baseurl=https://aquasecurity.github.io/trivy-repo/rpm/releases/&lt;span class=&quot;variable&quot;&gt;$releasever&lt;/span&gt;/&lt;span class=&quot;variable&quot;&gt;$basearch&lt;/span&gt;/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gpgcheck=0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;enabled=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo yum -y update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo yum -y install trivy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;or&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ rpm -ivh https://github.com/aquasecurity/trivy/releases/download/v0.0.15/trivy_0.0.15_Linux-64bit.rpm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;快速入门&quot;&gt;&lt;a href=&quot;#快速入门&quot; class=&quot;headerlink&quot; title=&quot;快速入门&quot;&gt;&lt;/a&gt;快速入门&lt;/h2&gt;&lt;p&gt;这个工具的最大闪光点就是提供了很多适合用在自动化场景的用法。详细使用帮助可参考官方文档：&lt;a href=&quot;https://github.com/aquasecurity/trivy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Trivy&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;扫描镜像：&quot;&gt;&lt;a href=&quot;#扫描镜像：&quot; class=&quot;headerlink&quot; title=&quot;扫描镜像：&quot;&gt;&lt;/a&gt;扫描镜像：&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ trivy centos&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;扫描镜像文件&quot;&gt;&lt;a href=&quot;#扫描镜像文件&quot; class=&quot;headerlink&quot; title=&quot;扫描镜像文件&quot;&gt;&lt;/a&gt;扫描镜像文件&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ docker save ruby:2.3.0-alpine3.9 -o ruby-2.3.0.tar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ trivy --input ruby-2.3.0.tar&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;根据严重程度进行过滤&quot;&gt;&lt;a href=&quot;#根据严重程度进行过滤&quot; class=&quot;headerlink&quot; title=&quot;根据严重程度进行过滤&quot;&gt;&lt;/a&gt;根据严重程度进行过滤&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ trivy --severity HIGH,CRITICAL ruby:2.3.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;忽略未修复问题&quot;&gt;&lt;a href=&quot;#忽略未修复问题&quot; class=&quot;headerlink&quot; title=&quot;忽略未修复问题&quot;&gt;&lt;/a&gt;忽略未修复问题&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ trivy --ignore-unfixed ruby:2.3.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;忽略特定问题&quot;&gt;&lt;a href=&quot;#忽略特定问题&quot; class=&quot;headerlink&quot; title=&quot;忽略特定问题&quot;&gt;&lt;/a&gt;忽略特定问题&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;.trivyignore&lt;/code&gt;：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cat .trivyignore&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Accept the risk&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CVE-2018-14618&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# No impact in our settings&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CVE-2019-1543&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ trivy python:3.4-alpine3.9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;使用-JSON-输出结果&quot;&gt;&lt;a href=&quot;#使用-JSON-输出结果&quot; class=&quot;headerlink&quot; title=&quot;使用 JSON 输出结果&quot;&gt;&lt;/a&gt;使用 JSON 输出结果&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ trivy &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; json dustise/translat-chatbot:20190428-5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;定义返回值&quot;&gt;&lt;a href=&quot;#定义返回值&quot; class=&quot;headerlink&quot; title=&quot;定义返回值&quot;&gt;&lt;/a&gt;定义返回值&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ trivy --exit-code 0 --severity MEDIUM,HIGH ruby:2.3.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ trivy --exit-code 1 --severity CRITICAL ruby:2.3.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;相对于其它同类工具，Trivy 非常适合自动化操作，从 CircleCI 之类的公有服务，到企业内部使用的 Jenkins、Gitlab 等私有工具，或者作为开发运维人员的自测环节，都有 Trivy 的用武之地。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;道路千万条，安全第一条； 镜像不规范，同事两行泪。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/aquasecurity/trivy&quot;&gt;Trivy&lt;/a&gt; 是一个面向镜像的漏洞检测工具，具备如下特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开源&lt;/li&gt;
&lt;li&gt;免费&lt;/li&gt;
&lt;li&gt;易用&lt;/li&gt;
&lt;li&gt;准确度高&lt;/li&gt;
&lt;li&gt;CI 友好&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;相对于老前辈 &lt;a href=&quot;https://github.com/coreos/clair&quot;&gt;Clair&lt;/a&gt;，Trivy 的使用非常直观方便，适用于更多的场景。&lt;/p&gt;
&lt;p&gt;下面是官方出具的对比表格：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;扫描器&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;操作系统&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;依赖检测&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;适用性&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;准确度&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;CI 友好&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Trivy&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◎&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clair&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;×&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;△&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;△&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Anchore Engine&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;△&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;△&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;△&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Quay&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;×&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;×&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MicroScanner&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;×&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Docker Hub&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;×&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;×&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;×&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCR&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;×&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;◯&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;×&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="安全" scheme="http://icyxp.github.io/categories/%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="镜像扫描" scheme="http://icyxp.github.io/tags/%E9%95%9C%E5%83%8F%E6%89%AB%E6%8F%8F/"/>
    
      <category term="漏洞" scheme="http://icyxp.github.io/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="csv" scheme="http://icyxp.github.io/tags/csv/"/>
    
      <category term="trivy" scheme="http://icyxp.github.io/tags/trivy/"/>
    
  </entry>
  
</feed>
